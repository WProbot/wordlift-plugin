!function(n){var e={};function t(c){if(e[c])return e[c].exports;var B=e[c]={i:c,l:!1,exports:{}};return n[c].call(B.exports,B,B.exports,t),B.l=!0,B.exports}t.m=n,t.c=e,t.d=function(n,e,c){t.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:c})},t.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},t.t=function(n,e){if(1&e&&(n=t(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var c=Object.create(null);if(t.r(c),Object.defineProperty(c,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var B in n)t.d(c,B,function(e){return n[e]}.bind(null,B));return c},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=144)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(42);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanM/YWI1YiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLElBQXFDO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLEVBQStCO0FBQzFELENBQUMsTUFBTSxFQUVOIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export $ */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ALL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return logError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return CALL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return wrapSagaDispatch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return identity; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return FORK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return GET_CONTEXT; });\n/* unused harmony export H */\n/* unused harmony export I */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return JOIN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return take; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return fork; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return cancel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return call; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return actionChannel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return PUT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return sliding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return RACE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return SELECT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return TAKE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return delay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return race; });\n/* unused harmony export W */\n/* unused harmony export X */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return put; });\n/* unused harmony export Z */\n/* unused harmony export _ */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return CPS; });\n/* unused harmony export a0 */\n/* unused harmony export a1 */\n/* unused harmony export a2 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return select; });\n/* unused harmony export a4 */\n/* unused harmony export a5 */\n/* unused harmony export a6 */\n/* unused harmony export a7 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return CANCEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return check; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return ACTION_CHANNEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return expanding; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return CANCELLED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return FLUSH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return SET_CONTEXT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return internalErr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F", function() { return getMetaInfo; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "G", function() { return kTrue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "H", function() { return createAllStyleChildCallbacks; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I", function() { return createEmptyArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "J", function() { return none; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "K", function() { return once; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "L", function() { return assignWithSymbols; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M", function() { return makeIterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "N", function() { return remove; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "O", function() { return shouldComplete; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "P", function() { return noop; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Q", function() { return flatMap; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R", function() { return getLocation; });\n/* unused harmony export w */\n/* unused harmony export x */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S", function() { return shouldCancel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "T", function() { return shouldTerminate; });\n/* harmony import */ var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(11);\n/* harmony import */ var _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n/* harmony import */ var _redux_saga_delay_p__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(25);\n\n\n\n\n\nvar konst = function konst(v) {\n  return function () {\n    return v;\n  };\n};\nvar kTrue =\n/*#__PURE__*/\nkonst(true);\n\nvar noop = function noop() {};\n\nif (false) {}\nvar identity = function identity(v) {\n  return v;\n};\nvar hasSymbol = typeof Symbol === \'function\';\nvar asyncIteratorSymbol = hasSymbol && Symbol.asyncIterator ? Symbol.asyncIterator : \'@@asyncIterator\';\nfunction check(value, predicate, error) {\n  if (!predicate(value)) {\n    throw new Error(error);\n  }\n}\nvar assignWithSymbols = function assignWithSymbols(target, source) {\n  Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])(target, source);\n\n  if (Object.getOwnPropertySymbols) {\n    Object.getOwnPropertySymbols(source).forEach(function (s) {\n      target[s] = source[s];\n    });\n  }\n};\nvar flatMap = function flatMap(mapper, arr) {\n  var _ref;\n\n  return (_ref = []).concat.apply(_ref, arr.map(mapper));\n};\nfunction remove(array, item) {\n  var index = array.indexOf(item);\n\n  if (index >= 0) {\n    array.splice(index, 1);\n  }\n}\nfunction once(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n\n    called = true;\n    fn();\n  };\n}\n\nvar kThrow = function kThrow(err) {\n  throw err;\n};\n\nvar kReturn = function kReturn(value) {\n  return {\n    value: value,\n    done: true\n  };\n};\n\nfunction makeIterator(next, thro, name) {\n  if (thro === void 0) {\n    thro = kThrow;\n  }\n\n  if (name === void 0) {\n    name = \'iterator\';\n  }\n\n  var iterator = {\n    meta: {\n      name: name\n    },\n    next: next,\n    throw: thro,\n    return: kReturn,\n    isSagaIterator: true\n  };\n\n  if (typeof Symbol !== \'undefined\') {\n    iterator[Symbol.iterator] = function () {\n      return iterator;\n    };\n  }\n\n  return iterator;\n}\nfunction logError(error, _ref2) {\n  var sagaStack = _ref2.sagaStack;\n\n  /*eslint-disable no-console*/\n  console.error(error);\n  console.error(sagaStack);\n}\nvar internalErr = function internalErr(err) {\n  return new Error("\\n  redux-saga: Error checking hooks detected an inconsistent state. This is likely a bug\\n  in redux-saga code and not yours. Thanks for reporting this in the project\'s github repo.\\n  Error: " + err + "\\n");\n};\nvar createSetContextWarning = function createSetContextWarning(ctx, props) {\n  return (ctx ? ctx + \'.\' : \'\') + "setContext(props): argument " + props + " is not a plain object";\n};\nvar FROZEN_ACTION_ERROR = "You can\'t put (a.k.a. dispatch from saga) frozen actions.\\nWe have to define a special non-enumerable property on those actions for scheduling purposes.\\nOtherwise you wouldn\'t be able to communicate properly between sagas & other subscribers (action ordering would become far less predictable).\\nIf you are using redux and you care about this behaviour (frozen actions),\\nthen you might want to switch to freezing actions in a middleware rather than in action creator.\\nExample implementation:\\n\\nconst freezeActions = store => next => action => next(Object.freeze(action))\\n"; // creates empty, but not-holey array\n\nvar createEmptyArray = function createEmptyArray(n) {\n  return Array.apply(null, new Array(n));\n};\nvar wrapSagaDispatch = function wrapSagaDispatch(dispatch) {\n  return function (action) {\n    if (false) {}\n\n    return dispatch(Object.defineProperty(action, _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SAGA_ACTION */ "f"], {\n      value: true\n    }));\n  };\n};\nvar shouldTerminate = function shouldTerminate(res) {\n  return res === _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* TERMINATE */ "k"];\n};\nvar shouldCancel = function shouldCancel(res) {\n  return res === _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* TASK_CANCEL */ "j"];\n};\nvar shouldComplete = function shouldComplete(res) {\n  return shouldTerminate(res) || shouldCancel(res);\n};\nfunction createAllStyleChildCallbacks(shape, parentCallback) {\n  var keys = Object.keys(shape);\n  var totalCount = keys.length;\n\n  if (false) {}\n\n  var completedCount = 0;\n  var completed;\n  var results = Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* array */ "a"])(shape) ? createEmptyArray(totalCount) : {};\n  var childCallbacks = {};\n\n  function checkEnd() {\n    if (completedCount === totalCount) {\n      completed = true;\n      parentCallback(results);\n    }\n  }\n\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || shouldComplete(res)) {\n        parentCallback.cancel();\n        parentCallback(res, isErr);\n      } else {\n        results[key] = res;\n        completedCount++;\n        checkEnd();\n      }\n    };\n\n    chCbAtKey.cancel = noop;\n    childCallbacks[key] = chCbAtKey;\n  });\n\n  parentCallback.cancel = function () {\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCallbacks[key].cancel();\n      });\n    }\n  };\n\n  return childCallbacks;\n}\nfunction getMetaInfo(fn) {\n  return {\n    name: fn.name || \'anonymous\',\n    location: getLocation(fn)\n  };\n}\nfunction getLocation(instrumented) {\n  return instrumented[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SAGA_LOCATION */ "g"]];\n}\n\nvar BUFFER_OVERFLOW = "Channel\'s Buffer overflow!";\nvar ON_OVERFLOW_THROW = 1;\nvar ON_OVERFLOW_DROP = 2;\nvar ON_OVERFLOW_SLIDE = 3;\nvar ON_OVERFLOW_EXPAND = 4;\nvar zeroBuffer = {\n  isEmpty: kTrue,\n  put: noop,\n  take: noop\n};\n\nfunction ringBuffer(limit, overflowAction) {\n  if (limit === void 0) {\n    limit = 10;\n  }\n\n  var arr = new Array(limit);\n  var length = 0;\n  var pushIndex = 0;\n  var popIndex = 0;\n\n  var push = function push(it) {\n    arr[pushIndex] = it;\n    pushIndex = (pushIndex + 1) % limit;\n    length++;\n  };\n\n  var take = function take() {\n    if (length != 0) {\n      var it = arr[popIndex];\n      arr[popIndex] = null;\n      length--;\n      popIndex = (popIndex + 1) % limit;\n      return it;\n    }\n  };\n\n  var flush = function flush() {\n    var items = [];\n\n    while (length) {\n      items.push(take());\n    }\n\n    return items;\n  };\n\n  return {\n    isEmpty: function isEmpty() {\n      return length == 0;\n    },\n    put: function put(it) {\n      if (length < limit) {\n        push(it);\n      } else {\n        var doubledLimit;\n\n        switch (overflowAction) {\n          case ON_OVERFLOW_THROW:\n            throw new Error(BUFFER_OVERFLOW);\n\n          case ON_OVERFLOW_SLIDE:\n            arr[pushIndex] = it;\n            pushIndex = (pushIndex + 1) % limit;\n            popIndex = pushIndex;\n            break;\n\n          case ON_OVERFLOW_EXPAND:\n            doubledLimit = 2 * limit;\n            arr = flush();\n            length = arr.length;\n            pushIndex = arr.length;\n            popIndex = 0;\n            arr.length = doubledLimit;\n            limit = doubledLimit;\n            push(it);\n            break;\n\n          default: // DROP\n\n        }\n      }\n    },\n    take: take,\n    flush: flush\n  };\n}\n\nvar none = function none() {\n  return zeroBuffer;\n};\nvar fixed = function fixed(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_THROW);\n};\nvar dropping = function dropping(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_DROP);\n};\nvar sliding = function sliding(limit) {\n  return ringBuffer(limit, ON_OVERFLOW_SLIDE);\n};\nvar expanding = function expanding(initialSize) {\n  return ringBuffer(initialSize, ON_OVERFLOW_EXPAND);\n};\n\nvar buffers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  none: none,\n  fixed: fixed,\n  dropping: dropping,\n  sliding: sliding,\n  expanding: expanding\n});\n\nvar TAKE = \'TAKE\';\nvar PUT = \'PUT\';\nvar ALL = \'ALL\';\nvar RACE = \'RACE\';\nvar CALL = \'CALL\';\nvar CPS = \'CPS\';\nvar FORK = \'FORK\';\nvar JOIN = \'JOIN\';\nvar CANCEL = \'CANCEL\';\nvar SELECT = \'SELECT\';\nvar ACTION_CHANNEL = \'ACTION_CHANNEL\';\nvar CANCELLED = \'CANCELLED\';\nvar FLUSH = \'FLUSH\';\nvar GET_CONTEXT = \'GET_CONTEXT\';\nvar SET_CONTEXT = \'SET_CONTEXT\';\n\nvar effectTypes = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TAKE: TAKE,\n  PUT: PUT,\n  ALL: ALL,\n  RACE: RACE,\n  CALL: CALL,\n  CPS: CPS,\n  FORK: FORK,\n  JOIN: JOIN,\n  CANCEL: CANCEL,\n  SELECT: SELECT,\n  ACTION_CHANNEL: ACTION_CHANNEL,\n  CANCELLED: CANCELLED,\n  FLUSH: FLUSH,\n  GET_CONTEXT: GET_CONTEXT,\n  SET_CONTEXT: SET_CONTEXT\n});\n\nvar TEST_HINT = \'\\n(HINT: if you are getting these errors in tests, consider using createMockTask from @redux-saga/testing-utils)\';\n\nvar makeEffect = function makeEffect(type, payload) {\n  var _ref;\n\n  return _ref = {}, _ref[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* IO */ "c"]] = true, _ref.combinator = false, _ref.type = type, _ref.payload = payload, _ref;\n};\n\nvar isForkEffect = function isForkEffect(eff) {\n  return Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* effect */ "c"])(eff) && eff.type === FORK;\n};\n\nvar detach = function detach(eff) {\n  if (false) {}\n\n  return makeEffect(FORK, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"])({}, eff.payload, {\n    detached: true\n  }));\n};\nfunction take(patternOrChannel, multicastPattern) {\n  if (patternOrChannel === void 0) {\n    patternOrChannel = \'*\';\n  }\n\n  if (false) {}\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* pattern */ "i"])(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      pattern: patternOrChannel\n    });\n  }\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* multicast */ "f"])(patternOrChannel) && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */ "g"])(multicastPattern) && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* pattern */ "i"])(multicastPattern)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel,\n      pattern: multicastPattern\n    });\n  }\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* channel */ "b"])(patternOrChannel)) {\n    return makeEffect(TAKE, {\n      channel: patternOrChannel\n    });\n  }\n\n  if (false) {}\n}\nvar takeMaybe = function takeMaybe() {\n  var eff = take.apply(void 0, arguments);\n  eff.payload.maybe = true;\n  return eff;\n};\nfunction put(channel$1, action) {\n  if (false) {}\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* undef */ "n"])(action)) {\n    action = channel$1; // `undefined` instead of `null` to make default parameter work\n\n    channel$1 = undefined;\n  }\n\n  return makeEffect(PUT, {\n    channel: channel$1,\n    action: action\n  });\n}\nvar putResolve = function putResolve() {\n  var eff = put.apply(void 0, arguments);\n  eff.payload.resolve = true;\n  return eff;\n};\nfunction all(effects) {\n  var eff = makeEffect(ALL, effects);\n  eff.combinator = true;\n  return eff;\n}\nfunction race(effects) {\n  var eff = makeEffect(RACE, effects);\n  eff.combinator = true;\n  return eff;\n} // this match getFnCallDescriptor logic\n\nvar validateFnDescriptor = function validateFnDescriptor(effectName, fnDescriptor) {\n  check(fnDescriptor, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */ "g"], effectName + ": argument fn is undefined or null");\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"])(fnDescriptor)) {\n    return;\n  }\n\n  var context = null;\n  var fn;\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* array */ "a"])(fnDescriptor)) {\n    context = fnDescriptor[0];\n    fn = fnDescriptor[1];\n    check(fn, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */ "g"], effectName + ": argument of type [context, fn] has undefined or null `fn`");\n  } else if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* object */ "h"])(fnDescriptor)) {\n    context = fnDescriptor.context;\n    fn = fnDescriptor.fn;\n    check(fn, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* notUndef */ "g"], effectName + ": argument of type {context, fn} has undefined or null `fn`");\n  } else {\n    check(fnDescriptor, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"], effectName + ": argument fn is not function");\n    return;\n  }\n\n  if (context && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* string */ "k"])(fn)) {\n    check(context[fn], _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"], effectName + ": context arguments has no such method - \\"" + fn + "\\"");\n    return;\n  }\n\n  check(fn, _redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"], effectName + ": unpacked fn argument (from [context, fn] or {context, fn}) is not a function");\n};\n\nfunction getFnCallDescriptor(fnDescriptor, args) {\n  var context = null;\n  var fn;\n\n  if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"])(fnDescriptor)) {\n    fn = fnDescriptor;\n  } else {\n    if (Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* array */ "a"])(fnDescriptor)) {\n      context = fnDescriptor[0];\n      fn = fnDescriptor[1];\n    } else {\n      context = fnDescriptor.context;\n      fn = fnDescriptor.fn;\n    }\n\n    if (context && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* string */ "k"])(fn) && Object(_redux_saga_is__WEBPACK_IMPORTED_MODULE_2__[/* func */ "d"])(context[fn])) {\n      fn = context[fn];\n    }\n  }\n\n  return {\n    context: context,\n    fn: fn,\n    args: args\n  };\n}\n\nvar isNotDelayEffect = function isNotDelayEffect(fn) {\n  return fn !== delay;\n};\n\nfunction call(fnDescriptor) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (false) { var arg0; }\n\n  return makeEffect(CALL, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction apply(context, fn, args) {\n  if (args === void 0) {\n    args = [];\n  }\n\n  var fnDescriptor = [context, fn];\n\n  if (false) {}\n\n  return makeEffect(CALL, getFnCallDescriptor([context, fn], args));\n}\nfunction cps(fnDescriptor) {\n  if (false) {}\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  return makeEffect(CPS, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction fork(fnDescriptor) {\n  if (false) {}\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return makeEffect(FORK, getFnCallDescriptor(fnDescriptor, args));\n}\nfunction spawn(fnDescriptor) {\n  if (false) {}\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  return detach(fork.apply(void 0, [fnDescriptor].concat(args)));\n}\nfunction join(taskOrTasks) {\n  if (false) {}\n\n  return makeEffect(JOIN, taskOrTasks);\n}\nfunction cancel(taskOrTasks) {\n  if (taskOrTasks === void 0) {\n    taskOrTasks = _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SELF_CANCELLATION */ "h"];\n  }\n\n  if (false) {}\n\n  return makeEffect(CANCEL, taskOrTasks);\n}\nfunction select(selector) {\n  if (selector === void 0) {\n    selector = identity;\n  }\n\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  if (false) {}\n\n  return makeEffect(SELECT, {\n    selector: selector,\n    args: args\n  });\n}\n/**\n  channel(pattern, [buffer])    => creates a proxy channel for store actions\n**/\n\nfunction actionChannel(pattern$1, buffer$1) {\n  if (false) {}\n\n  return makeEffect(ACTION_CHANNEL, {\n    pattern: pattern$1,\n    buffer: buffer$1\n  });\n}\nfunction cancelled() {\n  return makeEffect(CANCELLED, {});\n}\nfunction flush(channel$1) {\n  if (false) {}\n\n  return makeEffect(FLUSH, channel$1);\n}\nfunction getContext(prop) {\n  if (false) {}\n\n  return makeEffect(GET_CONTEXT, prop);\n}\nfunction setContext(props) {\n  if (false) {}\n\n  return makeEffect(SET_CONTEXT, props);\n}\nvar delay =\n/*#__PURE__*/\ncall.bind(null, _redux_saga_delay_p__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"]);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) { var throwOnDirectAccess, ReactIs; } else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(46)();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcz9kN2JjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLEtBQXFDLEVBQUUscUNBTzFDO0FBQ0Q7QUFDQTtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLEVBQTRCO0FBQ3ZEIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return array; });\n/* unused harmony export buffer */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return channel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return effect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return func; });\n/* unused harmony export iterable */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return iterator; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return multicast; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return notUndef; });\n/* unused harmony export number */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return object; });\n/* unused harmony export observable */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return pattern; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return promise; });\n/* unused harmony export sagaAction */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return string; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return stringableFunc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return symbol; });\n/* unused harmony export task */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return undef; });\n/* harmony import */ var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n\n\nvar undef = function undef(v) {\n  return v === null || v === undefined;\n};\nvar notUndef = function notUndef(v) {\n  return v !== null && v !== undefined;\n};\nvar func = function func(f) {\n  return typeof f === \'function\';\n};\nvar number = function number(n) {\n  return typeof n === \'number\';\n};\nvar string = function string(s) {\n  return typeof s === \'string\';\n};\nvar array = Array.isArray;\nvar object = function object(obj) {\n  return obj && !array(obj) && typeof obj === \'object\';\n};\nvar promise = function promise(p) {\n  return p && func(p.then);\n};\nvar iterator = function iterator(it) {\n  return it && func(it.next) && func(it.throw);\n};\nvar iterable = function iterable(it) {\n  return it && func(Symbol) ? func(it[Symbol.iterator]) : array(it);\n};\nvar task = function task(t) {\n  return t && t[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* TASK */ "i"]];\n};\nvar sagaAction = function sagaAction(a) {\n  return Boolean(a && a[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* SAGA_ACTION */ "f"]]);\n};\nvar observable = function observable(ob) {\n  return ob && func(ob.subscribe);\n};\nvar buffer = function buffer(buf) {\n  return buf && func(buf.isEmpty) && func(buf.take) && func(buf.put);\n};\nvar pattern = function pattern(pat) {\n  return pat && (string(pat) || symbol(pat) || func(pat) || array(pat) && pat.every(pattern));\n};\nvar channel = function channel(ch) {\n  return ch && func(ch.take) && func(ch.close);\n};\nvar stringableFunc = function stringableFunc(f) {\n  return func(f) && f.hasOwnProperty(\'toString\');\n};\nvar symbol = function symbol(sym) {\n  return Boolean(sym) && typeof Symbol === \'function\' && sym.constructor === Symbol && sym !== Symbol.prototype;\n};\nvar multicast = function multicast(ch) {\n  return channel(ch) && ch[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* MULTICAST */ "e"]];\n};\nvar effect = function effect(eff) {\n  return eff && eff[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* IO */ "c"]];\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHJlZHV4LXNhZ2EvaXMvZGlzdC9yZWR1eC1zYWdhLWlzLmVzbS5qcz9iOGZkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUF1RTs7QUFFdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnRUFBSTtBQUNwQjtBQUNBO0FBQ0Esd0JBQXdCLHVFQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscUVBQVM7QUFDcEM7QUFDQTtBQUNBLG9CQUFvQiw4REFBRTtBQUN0Qjs7QUFFZ00iLCJmaWxlIjoiMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRBU0ssIFNBR0FfQUNUSU9OLCBNVUxUSUNBU1QsIElPIH0gZnJvbSAnQHJlZHV4LXNhZ2Evc3ltYm9scyc7XG5cbnZhciB1bmRlZiA9IGZ1bmN0aW9uIHVuZGVmKHYpIHtcbiAgcmV0dXJuIHYgPT09IG51bGwgfHwgdiA9PT0gdW5kZWZpbmVkO1xufTtcbnZhciBub3RVbmRlZiA9IGZ1bmN0aW9uIG5vdFVuZGVmKHYpIHtcbiAgcmV0dXJuIHYgIT09IG51bGwgJiYgdiAhPT0gdW5kZWZpbmVkO1xufTtcbnZhciBmdW5jID0gZnVuY3Rpb24gZnVuYyhmKSB7XG4gIHJldHVybiB0eXBlb2YgZiA9PT0gJ2Z1bmN0aW9uJztcbn07XG52YXIgbnVtYmVyID0gZnVuY3Rpb24gbnVtYmVyKG4pIHtcbiAgcmV0dXJuIHR5cGVvZiBuID09PSAnbnVtYmVyJztcbn07XG52YXIgc3RyaW5nID0gZnVuY3Rpb24gc3RyaW5nKHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBzID09PSAnc3RyaW5nJztcbn07XG52YXIgYXJyYXkgPSBBcnJheS5pc0FycmF5O1xudmFyIG9iamVjdCA9IGZ1bmN0aW9uIG9iamVjdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiAhYXJyYXkob2JqKSAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jztcbn07XG52YXIgcHJvbWlzZSA9IGZ1bmN0aW9uIHByb21pc2UocCkge1xuICByZXR1cm4gcCAmJiBmdW5jKHAudGhlbik7XG59O1xudmFyIGl0ZXJhdG9yID0gZnVuY3Rpb24gaXRlcmF0b3IoaXQpIHtcbiAgcmV0dXJuIGl0ICYmIGZ1bmMoaXQubmV4dCkgJiYgZnVuYyhpdC50aHJvdyk7XG59O1xudmFyIGl0ZXJhYmxlID0gZnVuY3Rpb24gaXRlcmFibGUoaXQpIHtcbiAgcmV0dXJuIGl0ICYmIGZ1bmMoU3ltYm9sKSA/IGZ1bmMoaXRbU3ltYm9sLml0ZXJhdG9yXSkgOiBhcnJheShpdCk7XG59O1xudmFyIHRhc2sgPSBmdW5jdGlvbiB0YXNrKHQpIHtcbiAgcmV0dXJuIHQgJiYgdFtUQVNLXTtcbn07XG52YXIgc2FnYUFjdGlvbiA9IGZ1bmN0aW9uIHNhZ2FBY3Rpb24oYSkge1xuICByZXR1cm4gQm9vbGVhbihhICYmIGFbU0FHQV9BQ1RJT05dKTtcbn07XG52YXIgb2JzZXJ2YWJsZSA9IGZ1bmN0aW9uIG9ic2VydmFibGUob2IpIHtcbiAgcmV0dXJuIG9iICYmIGZ1bmMob2Iuc3Vic2NyaWJlKTtcbn07XG52YXIgYnVmZmVyID0gZnVuY3Rpb24gYnVmZmVyKGJ1Zikge1xuICByZXR1cm4gYnVmICYmIGZ1bmMoYnVmLmlzRW1wdHkpICYmIGZ1bmMoYnVmLnRha2UpICYmIGZ1bmMoYnVmLnB1dCk7XG59O1xudmFyIHBhdHRlcm4gPSBmdW5jdGlvbiBwYXR0ZXJuKHBhdCkge1xuICByZXR1cm4gcGF0ICYmIChzdHJpbmcocGF0KSB8fCBzeW1ib2wocGF0KSB8fCBmdW5jKHBhdCkgfHwgYXJyYXkocGF0KSAmJiBwYXQuZXZlcnkocGF0dGVybikpO1xufTtcbnZhciBjaGFubmVsID0gZnVuY3Rpb24gY2hhbm5lbChjaCkge1xuICByZXR1cm4gY2ggJiYgZnVuYyhjaC50YWtlKSAmJiBmdW5jKGNoLmNsb3NlKTtcbn07XG52YXIgc3RyaW5nYWJsZUZ1bmMgPSBmdW5jdGlvbiBzdHJpbmdhYmxlRnVuYyhmKSB7XG4gIHJldHVybiBmdW5jKGYpICYmIGYuaGFzT3duUHJvcGVydHkoJ3RvU3RyaW5nJyk7XG59O1xudmFyIHN5bWJvbCA9IGZ1bmN0aW9uIHN5bWJvbChzeW0pIHtcbiAgcmV0dXJuIEJvb2xlYW4oc3ltKSAmJiB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIHN5bS5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIHN5bSAhPT0gU3ltYm9sLnByb3RvdHlwZTtcbn07XG52YXIgbXVsdGljYXN0ID0gZnVuY3Rpb24gbXVsdGljYXN0KGNoKSB7XG4gIHJldHVybiBjaGFubmVsKGNoKSAmJiBjaFtNVUxUSUNBU1RdO1xufTtcbnZhciBlZmZlY3QgPSBmdW5jdGlvbiBlZmZlY3QoZWZmKSB7XG4gIHJldHVybiBlZmYgJiYgZWZmW0lPXTtcbn07XG5cbmV4cG9ydCB7IGFycmF5LCBidWZmZXIsIGNoYW5uZWwsIGVmZmVjdCwgZnVuYywgaXRlcmFibGUsIGl0ZXJhdG9yLCBtdWx0aWNhc3QsIG5vdFVuZGVmLCBudW1iZXIsIG9iamVjdCwgb2JzZXJ2YWJsZSwgcGF0dGVybiwgcHJvbWlzZSwgc2FnYUFjdGlvbiwgc3RyaW5nLCBzdHJpbmdhYmxlRnVuYywgc3ltYm9sLCB0YXNrLCB1bmRlZiB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///3\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CANCEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return CHANNEL_END_TYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return IO; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return MATCH; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return MULTICAST; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return SAGA_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return SAGA_LOCATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return SELF_CANCELLATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return TASK; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return TASK_CANCEL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return TERMINATE; });\nvar createSymbol = function createSymbol(name) {\n  return "@@redux-saga/" + name;\n};\n\nvar CANCEL =\n/*#__PURE__*/\ncreateSymbol(\'CANCEL_PROMISE\');\nvar CHANNEL_END_TYPE =\n/*#__PURE__*/\ncreateSymbol(\'CHANNEL_END\');\nvar IO =\n/*#__PURE__*/\ncreateSymbol(\'IO\');\nvar MATCH =\n/*#__PURE__*/\ncreateSymbol(\'MATCH\');\nvar MULTICAST =\n/*#__PURE__*/\ncreateSymbol(\'MULTICAST\');\nvar SAGA_ACTION =\n/*#__PURE__*/\ncreateSymbol(\'SAGA_ACTION\');\nvar SELF_CANCELLATION =\n/*#__PURE__*/\ncreateSymbol(\'SELF_CANCELLATION\');\nvar TASK =\n/*#__PURE__*/\ncreateSymbol(\'TASK\');\nvar TASK_CANCEL =\n/*#__PURE__*/\ncreateSymbol(\'TASK_CANCEL\');\nvar TERMINATE =\n/*#__PURE__*/\ncreateSymbol(\'TERMINATE\');\nvar SAGA_LOCATION =\n/*#__PURE__*/\ncreateSymbol(\'LOCATION\');\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHJlZHV4LXNhZ2Evc3ltYm9scy9kaXN0L3JlZHV4LXNhZ2Etc3ltYm9scy5lc20uanM/ZjE4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUkiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBjcmVhdGVTeW1ib2wgPSBmdW5jdGlvbiBjcmVhdGVTeW1ib2wobmFtZSkge1xuICByZXR1cm4gXCJAQHJlZHV4LXNhZ2EvXCIgKyBuYW1lO1xufTtcblxudmFyIENBTkNFTCA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVTeW1ib2woJ0NBTkNFTF9QUk9NSVNFJyk7XG52YXIgQ0hBTk5FTF9FTkRfVFlQRSA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVTeW1ib2woJ0NIQU5ORUxfRU5EJyk7XG52YXIgSU8gPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdJTycpO1xudmFyIE1BVENIID1cbi8qI19fUFVSRV9fKi9cbmNyZWF0ZVN5bWJvbCgnTUFUQ0gnKTtcbnZhciBNVUxUSUNBU1QgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdNVUxUSUNBU1QnKTtcbnZhciBTQUdBX0FDVElPTiA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVTeW1ib2woJ1NBR0FfQUNUSU9OJyk7XG52YXIgU0VMRl9DQU5DRUxMQVRJT04gPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdTRUxGX0NBTkNFTExBVElPTicpO1xudmFyIFRBU0sgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdUQVNLJyk7XG52YXIgVEFTS19DQU5DRUwgPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdUQVNLX0NBTkNFTCcpO1xudmFyIFRFUk1JTkFURSA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVTeW1ib2woJ1RFUk1JTkFURScpO1xudmFyIFNBR0FfTE9DQVRJT04gPVxuLyojX19QVVJFX18qL1xuY3JlYXRlU3ltYm9sKCdMT0NBVElPTicpO1xuXG5leHBvcnQgeyBDQU5DRUwsIENIQU5ORUxfRU5EX1RZUEUsIElPLCBNQVRDSCwgTVVMVElDQVNULCBTQUdBX0FDVElPTiwgU0FHQV9MT0NBVElPTiwgU0VMRl9DQU5DRUxMQVRJT04sIFRBU0ssIFRBU0tfQ0FOQ0VMLCBURVJNSU5BVEUgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(2);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/PropTypes.js\n\nvar subscriptionShape = prop_types_default.a.shape({\n  trySubscribe: prop_types_default.a.func.isRequired,\n  tryUnsubscribe: prop_types_default.a.func.isRequired,\n  notifyNestedSubs: prop_types_default.a.func.isRequired,\n  isSubscribed: prop_types_default.a.func.isRequired\n});\nvar storeShape = prop_types_default.a.shape({\n  subscribe: prop_types_default.a.func.isRequired,\n  dispatch: prop_types_default.a.func.isRequired,\n  getState: prop_types_default.a.func.isRequired\n});\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/warning.js\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== \'undefined\' && typeof console.error === \'function\') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // "break on all exceptions" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Provider.js\n\n\n\n\n\nvar prefixUnsafeLifecycleMethods = typeof react_default.a.forwardRef !== "undefined";\nvar didWarnAboutReceivingStore = false;\n\nfunction warnAboutReceivingStore() {\n  if (didWarnAboutReceivingStore) {\n    return;\n  }\n\n  didWarnAboutReceivingStore = true;\n  warning(\'<Provider> does not support changing `store` on the fly. \' + \'It is most likely that you see this error because you updated to \' + \'Redux 2.x and React Redux 2.x which no longer hot reload reducers \' + \'automatically. See https://github.com/reduxjs/react-redux/releases/\' + \'tag/v2.0.0 for the migration instructions.\');\n}\n\nfunction createProvider(storeKey) {\n  var _Provider$childContex;\n\n  if (storeKey === void 0) {\n    storeKey = \'store\';\n  }\n\n  var subscriptionKey = storeKey + "Subscription";\n\n  var Provider =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;\n    };\n\n    function Provider(props, context) {\n      var _this;\n\n      _this = _Component.call(this, props, context) || this;\n      _this[storeKey] = props.store;\n      return _this;\n    }\n\n    _proto.render = function render() {\n      return react["Children"].only(this.props.children);\n    };\n\n    return Provider;\n  }(react["Component"]);\n\n  if (false) { var eventName; }\n\n  Provider.propTypes = {\n    store: storeShape.isRequired,\n    children: prop_types_default.a.element.isRequired\n  };\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = storeShape.isRequired, _Provider$childContex[subscriptionKey] = subscriptionShape, _Provider$childContex);\n  return Provider;\n}\n/* harmony default export */ var components_Provider = (createProvider());\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return self;\n}\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(14);\n\n// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(39);\nvar hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);\n\n// EXTERNAL MODULE: ./node_modules/invariant/browser.js\nvar browser = __webpack_require__(15);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// EXTERNAL MODULE: ./node_modules/react-is/index.js\nvar react_is = __webpack_require__(23);\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/Subscription.js\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux\'s createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  var current = [];\n  var next = [];\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i]();\n      }\n    },\n    get: function get() {\n      return next;\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(store, parentSub, onStateChange) {\n    this.store = store;\n    this.parentSub = parentSub;\n    this.onStateChange = onStateChange;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  _proto.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  _proto.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  _proto.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  _proto.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/components/connectAdvanced.js\n\n\n\n\n\n\n\n\n\n\nvar connectAdvanced_prefixUnsafeLifecycleMethods = typeof react_default.a.forwardRef !== "undefined";\nvar hotReloadingVersion = 0;\nvar dummyState = {};\n\nfunction noop() {}\n\nfunction makeSelectorStateful(sourceSelector, store) {\n  // wrap the selector in an object that tracks its results between runs.\n  var selector = {\n    run: function runComponentSelector(props) {\n      try {\n        var nextProps = sourceSelector(store.getState(), props);\n\n        if (nextProps !== selector.props || selector.error) {\n          selector.shouldComponentUpdate = true;\n          selector.props = nextProps;\n          selector.error = null;\n        }\n      } catch (error) {\n        selector.shouldComponentUpdate = true;\n        selector.error = error;\n      }\n    }\n  };\n  return selector;\n}\n\nfunction connectAdvanced(\n/*\n  selectorFactory is a func that is responsible for returning the selector function used to\n  compute new props from state, props, and dispatch. For example:\n     export default connectAdvanced((dispatch, options) => (state, props) => ({\n      thing: state.things[props.thingId],\n      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\n    }))(YourComponent)\n   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\n  outside of their selector as an optimization. Options passed to connectAdvanced are passed to\n  the selectorFactory, along with displayName and WrappedComponent, as the second argument.\n   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\n  props. Do not use connectAdvanced directly without memoizing results between calls to your\n  selector, otherwise the Connect component will re-render on every state or props change.\n*/\nselectorFactory, // options object:\n_ref) {\n  var _contextTypes, _childContextTypes;\n\n  if (_ref === void 0) {\n    _ref = {};\n  }\n\n  var _ref2 = _ref,\n      _ref2$getDisplayName = _ref2.getDisplayName,\n      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {\n    return "ConnectAdvanced(" + name + ")";\n  } : _ref2$getDisplayName,\n      _ref2$methodName = _ref2.methodName,\n      methodName = _ref2$methodName === void 0 ? \'connectAdvanced\' : _ref2$methodName,\n      _ref2$renderCountProp = _ref2.renderCountProp,\n      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,\n      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,\n      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,\n      _ref2$storeKey = _ref2.storeKey,\n      storeKey = _ref2$storeKey === void 0 ? \'store\' : _ref2$storeKey,\n      _ref2$withRef = _ref2.withRef,\n      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,\n      connectOptions = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef"]);\n\n  var subscriptionKey = storeKey + \'Subscription\';\n  var version = hotReloadingVersion++;\n  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = storeShape, _contextTypes[subscriptionKey] = subscriptionShape, _contextTypes);\n  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = subscriptionShape, _childContextTypes);\n  return function wrapWithConnect(WrappedComponent) {\n    browser_default()(Object(react_is["isValidElementType"])(WrappedComponent), "You must pass a component to the function returned by " + (methodName + ". Instead received " + JSON.stringify(WrappedComponent)));\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || \'Component\';\n    var displayName = getDisplayName(wrappedComponentName);\n\n    var selectorFactoryOptions = Object(esm_extends["a" /* default */])({}, connectOptions, {\n      getDisplayName: getDisplayName,\n      methodName: methodName,\n      renderCountProp: renderCountProp,\n      shouldHandleStateChanges: shouldHandleStateChanges,\n      storeKey: storeKey,\n      withRef: withRef,\n      displayName: displayName,\n      wrappedComponentName: wrappedComponentName,\n      WrappedComponent: WrappedComponent // TODO Actually fix our use of componentWillReceiveProps\n\n      /* eslint-disable react/no-deprecated */\n\n    });\n\n    var Connect =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(Connect, _Component);\n\n      function Connect(props, context) {\n        var _this;\n\n        _this = _Component.call(this, props, context) || this;\n        _this.version = version;\n        _this.state = {};\n        _this.renderCount = 0;\n        _this.store = props[storeKey] || context[storeKey];\n        _this.propsMode = Boolean(props[storeKey]);\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n        browser_default()(_this.store, "Could not find \\"" + storeKey + "\\" in either the context or props of " + ("\\"" + displayName + "\\". Either wrap the root component in a <Provider>, ") + ("or explicitly pass \\"" + storeKey + "\\" as a prop to \\"" + displayName + "\\"."));\n\n        _this.initSelector();\n\n        _this.initSubscription();\n\n        return _this;\n      }\n\n      var _proto = Connect.prototype;\n\n      _proto.getChildContext = function getChildContext() {\n        var _ref3;\n\n        // If this component received store from props, its subscription should be transparent\n        // to any descendants receiving store+subscription from context; it passes along\n        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows\n        // Connect to control ordering of notifications to flow top-down.\n        var subscription = this.propsMode ? null : this.subscription;\n        return _ref3 = {}, _ref3[subscriptionKey] = subscription || this.context[subscriptionKey], _ref3;\n      };\n\n      _proto.componentDidMount = function componentDidMount() {\n        if (!shouldHandleStateChanges) return; // componentWillMount fires during server side rendering, but componentDidMount and\n        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.\n        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.\n        // To handle the case where a child component may have triggered a state change by\n        // dispatching an action in its componentWillMount, we have to re-run the select and maybe\n        // re-render.\n\n        this.subscription.trySubscribe();\n        this.selector.run(this.props);\n        if (this.selector.shouldComponentUpdate) this.forceUpdate();\n      }; // Note: this is renamed below to the UNSAFE_ version in React >=16.3.0\n\n\n      _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        this.selector.run(nextProps);\n      };\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate() {\n        return this.selector.shouldComponentUpdate;\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        if (this.subscription) this.subscription.tryUnsubscribe();\n        this.subscription = null;\n        this.notifyNestedSubs = noop;\n        this.store = null;\n        this.selector.run = noop;\n        this.selector.shouldComponentUpdate = false;\n      };\n\n      _proto.getWrappedInstance = function getWrappedInstance() {\n        browser_default()(withRef, "To access the wrapped instance, you need to specify " + ("{ withRef: true } in the options argument of the " + methodName + "() call."));\n        return this.wrappedInstance;\n      };\n\n      _proto.setWrappedInstance = function setWrappedInstance(ref) {\n        this.wrappedInstance = ref;\n      };\n\n      _proto.initSelector = function initSelector() {\n        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);\n        this.selector = makeSelectorStateful(sourceSelector, this.store);\n        this.selector.run(this.props);\n      };\n\n      _proto.initSubscription = function initSubscription() {\n        if (!shouldHandleStateChanges) return; // parentSub\'s source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn\'t use subscription from context, or vice versa.\n\n        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];\n        this.subscription = new Subscription(this.store, parentSub, this.onStateChange.bind(this)); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `this.subscription` will then be null. An\n        // extra null check every change can be avoided by copying the method onto `this` and then\n        // replacing it with a no-op on unmount. This can probably be avoided if Subscription\'s\n        // listeners logic is changed to not call listeners that have been unsubscribed in the\n        // middle of the notification loop.\n\n        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);\n      };\n\n      _proto.onStateChange = function onStateChange() {\n        this.selector.run(this.props);\n\n        if (!this.selector.shouldComponentUpdate) {\n          this.notifyNestedSubs();\n        } else {\n          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;\n          this.setState(dummyState);\n        }\n      };\n\n      _proto.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {\n        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it\n        // needs to notify nested subs. Once called, it unimplements itself until further state\n        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does\n        // a boolean check every time avoids an extra method call most of the time, resulting\n        // in some perf boost.\n        this.componentDidUpdate = undefined;\n        this.notifyNestedSubs();\n      };\n\n      _proto.isSubscribed = function isSubscribed() {\n        return Boolean(this.subscription) && this.subscription.isSubscribed();\n      };\n\n      _proto.addExtraProps = function addExtraProps(props) {\n        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props; // make a shallow copy so that fields added don\'t leak to the original selector.\n        // this is especially important for \'ref\' since that\'s a reference back to the component\n        // instance. a singleton memoized selector would then be holding a reference to the\n        // instance, preventing the instance from being garbage collected, and that would be bad\n\n        var withExtras = Object(esm_extends["a" /* default */])({}, props);\n\n        if (withRef) withExtras.ref = this.setWrappedInstance;\n        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;\n        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;\n        return withExtras;\n      };\n\n      _proto.render = function render() {\n        var selector = this.selector;\n        selector.shouldComponentUpdate = false;\n\n        if (selector.error) {\n          throw selector.error;\n        } else {\n          return Object(react["createElement"])(WrappedComponent, this.addExtraProps(selector.props));\n        }\n      };\n\n      return Connect;\n    }(react["Component"]);\n\n    if (connectAdvanced_prefixUnsafeLifecycleMethods) {\n      // Use UNSAFE_ event name where supported\n      Connect.prototype.UNSAFE_componentWillReceiveProps = Connect.prototype.componentWillReceiveProps;\n      delete Connect.prototype.componentWillReceiveProps;\n    }\n    /* eslint-enable react/no-deprecated */\n\n\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = displayName;\n    Connect.childContextTypes = childContextTypes;\n    Connect.contextTypes = contextTypes;\n    Connect.propTypes = contextTypes;\n\n    if (false) { var eventName; }\n\n    return hoist_non_react_statics_cjs_default()(Connect, WrappedComponent);\n  };\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/shallowEqual.js\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== \'object\' || objA === null || typeof objB !== \'object\' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(10);\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/isPlainObject.js\n/**\r\n * @param {any} obj The object to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== \'object\' || obj === null) return false;\n  var proto = Object.getPrototypeOf(obj);\n  if (proto === null) return true;\n  var baseProto = proto;\n\n  while (Object.getPrototypeOf(baseProto) !== null) {\n    baseProto = Object.getPrototypeOf(baseProto);\n  }\n\n  return proto === baseProto;\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/verifyPlainObject.js\n\n\nfunction verifyPlainObject(value, displayName, methodName) {\n  if (!isPlainObject(value)) {\n    warning(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");\n  }\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/wrapMapToProps.js\n\nfunction wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch, options) {\n    var constant = getConstant(dispatch, options);\n\n    function constantSelector() {\n      return constant;\n    }\n\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n// \n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\n\nfunction getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n// \n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//    \n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//    \n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//    \n\nfunction wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, _ref) {\n    var displayName = _ref.displayName;\n\n    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);\n    }; // allow detectFactoryAndVerify to get ownProps\n\n\n    proxy.dependsOnOwnProps = true;\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      var props = proxy(stateOrDispatch, ownProps);\n\n      if (typeof props === \'function\') {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n\n      if (false) {}\n      return props;\n    };\n\n    return proxy;\n  };\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapDispatchToProps.js\n\n\nfunction whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === \'function\' ? wrapMapToPropsFunc(mapDispatchToProps, \'mapDispatchToProps\') : undefined;\n}\nfunction whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {\n    return {\n      dispatch: dispatch\n    };\n  }) : undefined;\n}\nfunction whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === \'object\' ? wrapMapToPropsConstant(function (dispatch) {\n    return Object(redux["bindActionCreators"])(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\n/* harmony default export */ var connect_mapDispatchToProps = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapStateToProps.js\n\nfunction whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === \'function\' ? wrapMapToPropsFunc(mapStateToProps, \'mapStateToProps\') : undefined;\n}\nfunction whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(function () {\n    return {};\n  }) : undefined;\n}\n/* harmony default export */ var connect_mapStateToProps = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mergeProps.js\n\n\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return Object(esm_extends["a" /* default */])({}, ownProps, stateProps, dispatchProps);\n}\nfunction wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n    var hasRunOnce = false;\n    var mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (false) {}\n      }\n\n      return mergedProps;\n    };\n  };\n}\nfunction whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === \'function\' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\nfunction whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\n/* harmony default export */ var connect_mergeProps = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/verifySubselectors.js\n\n\nfunction verify(selector, methodName, displayName) {\n  if (!selector) {\n    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");\n  } else if (methodName === \'mapStateToProps\' || methodName === \'mapDispatchToProps\') {\n    if (!selector.hasOwnProperty(\'dependsOnOwnProps\')) {\n      warning("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");\n    }\n  }\n}\n\nfunction verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {\n  verify(mapStateToProps, \'mapStateToProps\', displayName);\n  verify(mapDispatchToProps, \'mapDispatchToProps\', displayName);\n  verify(mergeProps, \'mergeProps\', displayName);\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/selectorFactory.js\n\n\nfunction impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n  };\n}\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n  var areStatesEqual = _ref.areStatesEqual,\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\n      areStatePropsEqual = _ref.areStatePropsEqual;\n  var hasRunAtLeastOnce = false;\n  var state;\n  var ownProps;\n  var stateProps;\n  var dispatchProps;\n  var mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    var nextStateProps = mapStateToProps(state, ownProps);\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    var stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n} // TODO: Add more comments\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced\'s shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nfunction finalPropsSelectorFactory(dispatch, _ref2) {\n  var initMapStateToProps = _ref2.initMapStateToProps,\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n      initMergeProps = _ref2.initMergeProps,\n      options = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);\n\n  var mapStateToProps = initMapStateToProps(dispatch, options);\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  var mergeProps = initMergeProps(dispatch, options);\n\n  if (false) {}\n\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/connect.js\n\n\n\n\n\n\n\n\n/*\n  connect is a facade over connectAdvanced. It turns its args into a compatible\n  selectorFactory, which has the signature:\n\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n  \n  connect passes its args to connectAdvanced as options, which will in turn pass them to\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\n  selectorFactory returns a final props selector from its mapStateToProps,\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n  mergePropsFactories, and pure args.\n\n  The resulting final props selector is called by the Connect component instance whenever\n  it receives new props or store state.\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n} // createConnect with default args builds the \'official\' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\n\n\nfunction createConnect(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? connect_mapStateToProps : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? connect_mapDispatchToProps : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === void 0 ? connect_mergeProps : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === void 0 ? finalPropsSelectorFactory : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {\n    if (_ref2 === void 0) {\n      _ref2 = {};\n    }\n\n    var _ref3 = _ref2,\n        _ref3$pure = _ref3.pure,\n        pure = _ref3$pure === void 0 ? true : _ref3$pure,\n        _ref3$areStatesEqual = _ref3.areStatesEqual,\n        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,\n        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,\n        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,\n        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,\n        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,\n        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,\n        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,\n        extraOptions = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, \'mapStateToProps\');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, \'mapDispatchToProps\');\n    var initMergeProps = match(mergeProps, mergePropsFactories, \'mergeProps\');\n    return connectHOC(selectorFactory, Object(esm_extends["a" /* default */])({\n      // used in error messages\n      methodName: \'connect\',\n      // used to compute Connect\'s displayName from the wrapped component\'s displayName.\n      getDisplayName: function getDisplayName(name) {\n        return "Connect(" + name + ")";\n      },\n      // if mapStateToProps is falsy, the Connect component doesn\'t subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n    }, extraOptions));\n  };\n}\n/* harmony default export */ var connect_connect = (createConnect());\n// CONCATENATED MODULE: ./node_modules/react-redux/es/index.js\n/* concated harmony reexport Provider */__webpack_require__.d(__webpack_exports__, "a", function() { return components_Provider; });\n/* unused concated harmony import createProvider */\n/* unused concated harmony import connectAdvanced */\n/* concated harmony reexport connect */__webpack_require__.d(__webpack_exports__, "b", function() { return connect_connect; });\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n')},,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js\nvar redux_saga_symbols_esm = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/is/dist/redux-saga-is.esm.js\nvar redux_saga_is_esm = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/core/dist/io-6de156f3.js\nvar io_6de156f3 = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js\nvar redux_saga_delay_p_esm = __webpack_require__(25);\n\n// CONCATENATED MODULE: ./node_modules/@redux-saga/core/dist/redux-saga-effects.esm.js\n\n\n\n\n\n\n\nvar done = function done(value) {\n  return {\n    done: true,\n    value: value\n  };\n};\n\nvar qEnd = {};\nfunction safeName(patternOrChannel) {\n  if (Object(redux_saga_is_esm["b" /* channel */])(patternOrChannel)) {\n    return \'channel\';\n  }\n\n  if (Object(redux_saga_is_esm["l" /* stringableFunc */])(patternOrChannel)) {\n    return String(patternOrChannel);\n  }\n\n  if (Object(redux_saga_is_esm["d" /* func */])(patternOrChannel)) {\n    return patternOrChannel.name;\n  }\n\n  return String(patternOrChannel);\n}\nfunction fsmIterator(fsm, startState, name) {\n  var stateUpdater,\n      errorState,\n      effect,\n      nextState = startState;\n\n  function next(arg, error) {\n    if (nextState === qEnd) {\n      return done(arg);\n    }\n\n    if (error && !errorState) {\n      nextState = qEnd;\n      throw error;\n    } else {\n      stateUpdater && stateUpdater(arg);\n      var currentState = error ? fsm[errorState](error) : fsm[nextState]();\n      nextState = currentState.nextState;\n      effect = currentState.effect;\n      stateUpdater = currentState.stateUpdater;\n      errorState = currentState.errorState;\n      return nextState === qEnd ? done(arg) : effect;\n    }\n  }\n\n  return Object(io_6de156f3["M" /* q */])(next, function (error) {\n    return next(null, error);\n  }, name);\n}\n\nfunction takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: Object(io_6de156f3["i" /* K */])(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["j" /* L */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: \'q1\',\n        effect: yFork(action)\n      };\n    }\n  }, \'q1\', "takeEvery(" + safeName(patternOrChannel) + ", " + worker.name + ")");\n}\n\nfunction takeLatest(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: Object(io_6de156f3["i" /* K */])(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["j" /* L */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yCancel = function yCancel(task) {\n    return {\n      done: false,\n      value: Object(io_6de156f3["k" /* M */])(task)\n    };\n  };\n\n  var task, action;\n\n  var setTask = function setTask(t) {\n    return task = t;\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return task ? {\n        nextState: \'q3\',\n        effect: yCancel(task)\n      } : {\n        nextState: \'q1\',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: \'q1\',\n        effect: yFork(action),\n        stateUpdater: setTask\n      };\n    }\n  }, \'q1\', "takeLatest(" + safeName(patternOrChannel) + ", " + worker.name + ")");\n}\n\nfunction takeLeading(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: Object(io_6de156f3["i" /* K */])(patternOrChannel)\n  };\n\n  var yCall = function yCall(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["l" /* N */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action;\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: \'q1\',\n        effect: yCall(action)\n      };\n    }\n  }, \'q1\', "takeLeading(" + safeName(patternOrChannel) + ", " + worker.name + ")");\n}\n\nfunction throttle(delayLength, pattern, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, channel;\n  var yActionChannel = {\n    done: false,\n    value: Object(io_6de156f3["m" /* O */])(pattern, Object(io_6de156f3["o" /* Q */])(1))\n  };\n\n  var yTake = function yTake() {\n    return {\n      done: false,\n      value: Object(io_6de156f3["i" /* K */])(channel)\n    };\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["j" /* L */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yDelay = {\n    done: false,\n    value: Object(io_6de156f3["s" /* U */])(delayLength)\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setChannel = function setChannel(ch) {\n    return channel = ch;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yActionChannel,\n        stateUpdater: setChannel\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: \'q3\',\n        effect: yTake(),\n        stateUpdater: setAction\n      };\n    },\n    q3: function q3() {\n      return {\n        nextState: \'q4\',\n        effect: yFork(action)\n      };\n    },\n    q4: function q4() {\n      return {\n        nextState: \'q2\',\n        effect: yDelay\n      };\n    }\n  }, \'q1\', "throttle(" + safeName(pattern) + ", " + worker.name + ")");\n}\n\nfunction retry(maxTries, delayLength, fn) {\n  var counter = maxTries;\n\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var yCall = {\n    done: false,\n    value: io_6de156f3["l" /* N */].apply(void 0, [fn].concat(args))\n  };\n  var yDelay = {\n    done: false,\n    value: Object(io_6de156f3["s" /* U */])(delayLength)\n  };\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yCall,\n        errorState: \'q10\'\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: qEnd\n      };\n    },\n    q10: function q10(error) {\n      counter -= 1;\n\n      if (counter <= 0) {\n        throw error;\n      }\n\n      return {\n        nextState: \'q1\',\n        effect: yDelay\n      };\n    }\n  }, \'q1\', "retry(" + fn.name + ")");\n}\n\nfunction debounceHelper(delayLength, patternOrChannel, worker) {\n  for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action, raceOutput;\n  var yTake = {\n    done: false,\n    value: Object(io_6de156f3["i" /* K */])(patternOrChannel)\n  };\n  var yRace = {\n    done: false,\n    value: Object(io_6de156f3["t" /* V */])({\n      action: Object(io_6de156f3["i" /* K */])(patternOrChannel),\n      debounce: Object(io_6de156f3["s" /* U */])(delayLength)\n    })\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: io_6de156f3["j" /* L */].apply(void 0, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yNoop = function yNoop(value) {\n    return {\n      done: false,\n      value: value\n    };\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setRaceOutput = function setRaceOutput(ro) {\n    return raceOutput = ro;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return {\n        nextState: \'q2\',\n        effect: yTake,\n        stateUpdater: setAction\n      };\n    },\n    q2: function q2() {\n      return {\n        nextState: \'q3\',\n        effect: yRace,\n        stateUpdater: setRaceOutput\n      };\n    },\n    q3: function q3() {\n      return raceOutput.debounce ? {\n        nextState: \'q1\',\n        effect: yFork(action)\n      } : {\n        nextState: \'q2\',\n        effect: yNoop(raceOutput.action),\n        stateUpdater: setAction\n      };\n    }\n  }, \'q1\', "debounce(" + safeName(patternOrChannel) + ", " + worker.name + ")");\n}\n\nvar redux_saga_effects_esm_validateTakeEffect = function validateTakeEffect(fn, patternOrChannel, worker) {\n  Object(io_6de156f3["y" /* c */])(patternOrChannel, redux_saga_is_esm["g" /* notUndef */], fn.name + " requires a pattern or channel");\n  Object(io_6de156f3["y" /* c */])(worker, redux_saga_is_esm["g" /* notUndef */], fn.name + " requires a saga parameter");\n};\n\nfunction takeEvery$1(patternOrChannel, worker) {\n  if (false) {}\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [takeEvery, patternOrChannel, worker].concat(args));\n}\nfunction takeLatest$1(patternOrChannel, worker) {\n  if (false) {}\n\n  for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [takeLatest, patternOrChannel, worker].concat(args));\n}\nfunction takeLeading$1(patternOrChannel, worker) {\n  if (false) {}\n\n  for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n    args[_key3 - 2] = arguments[_key3];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [takeLeading, patternOrChannel, worker].concat(args));\n}\nfunction throttle$1(ms, pattern, worker) {\n  if (false) {}\n\n  for (var _len4 = arguments.length, args = new Array(_len4 > 3 ? _len4 - 3 : 0), _key4 = 3; _key4 < _len4; _key4++) {\n    args[_key4 - 3] = arguments[_key4];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [throttle, ms, pattern, worker].concat(args));\n}\nfunction retry$1(maxTries, delayLength, worker) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 3 ? _len5 - 3 : 0), _key5 = 3; _key5 < _len5; _key5++) {\n    args[_key5 - 3] = arguments[_key5];\n  }\n\n  return io_6de156f3["l" /* N */].apply(void 0, [retry, maxTries, delayLength, worker].concat(args));\n}\nfunction debounce(delayLength, pattern, worker) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 3 ? _len6 - 3 : 0), _key6 = 3; _key6 < _len6; _key6++) {\n    args[_key6 - 3] = arguments[_key6];\n  }\n\n  return io_6de156f3["j" /* L */].apply(void 0, [debounceHelper, delayLength, pattern, worker].concat(args));\n}\n\n\n\n// CONCATENATED MODULE: ./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js\n/* unused concated harmony import actionChannel */\n/* unused concated harmony import all */\n/* unused concated harmony import apply */\n/* concated harmony reexport call */__webpack_require__.d(__webpack_exports__, "a", function() { return io_6de156f3["l" /* N */]; });\n/* unused concated harmony import cancel */\n/* unused concated harmony import cancelled */\n/* unused concated harmony import cps */\n/* concated harmony reexport delay */__webpack_require__.d(__webpack_exports__, "b", function() { return io_6de156f3["s" /* U */]; });\n/* unused concated harmony import effectTypes */\n/* unused concated harmony import flush */\n/* concated harmony reexport fork */__webpack_require__.d(__webpack_exports__, "c", function() { return io_6de156f3["j" /* L */]; });\n/* unused concated harmony import getContext */\n/* unused concated harmony import join */\n/* concated harmony reexport put */__webpack_require__.d(__webpack_exports__, "d", function() { return io_6de156f3["u" /* Y */]; });\n/* unused concated harmony import putResolve */\n/* concated harmony reexport race */__webpack_require__.d(__webpack_exports__, "e", function() { return io_6de156f3["t" /* V */]; });\n/* concated harmony reexport select */__webpack_require__.d(__webpack_exports__, "f", function() { return io_6de156f3["w" /* a3 */]; });\n/* unused concated harmony import setContext */\n/* unused concated harmony import spawn */\n/* concated harmony reexport take */__webpack_require__.d(__webpack_exports__, "g", function() { return io_6de156f3["i" /* K */]; });\n/* unused concated harmony import takeMaybe */\n/* unused concated harmony import debounce */\n/* unused concated harmony import retry */\n/* concated harmony reexport takeEvery */__webpack_require__.d(__webpack_exports__, "h", function() { return takeEvery$1; });\n/* concated harmony reexport takeLatest */__webpack_require__.d(__webpack_exports__, "i", function() { return takeLatest$1; });\n/* unused concated harmony import takeLeading */\n/* unused concated harmony import throttle */\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__DO_NOT_USE__ActionTypes", function() { return ActionTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyMiddleware", function() { return applyMiddleware; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindActionCreators", function() { return bindActionCreators; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineReducers", function() { return combineReducers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compose", function() { return compose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStore", function() { return createStore; });\n/* harmony import */ var symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31);\n\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split(\'\').join(\'.\');\n};\n\nvar ActionTypes = {\n  INIT: "@@redux/INIT" + randomString(),\n  REPLACE: "@@redux/REPLACE" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== \'object\' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === \'function\' && typeof enhancer === \'function\' || typeof enhancer === \'function\' && typeof arguments[3] === \'function\') {\n    throw new Error(\'It looks like you are passing several store enhancers to \' + \'createStore(). This is not supported. Instead, compose them \' + \'together to a single function.\');\n  }\n\n  if (typeof preloadedState === \'function\' && typeof enhancer === \'undefined\') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== \'undefined\') {\n    if (typeof enhancer !== \'function\') {\n      throw new Error(\'Expected the enhancer to be a function.\');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== \'function\') {\n    throw new Error(\'Expected the reducer to be a function.\');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(\'You may not call store.getState() while the reducer is executing. \' + \'The reducer has already received the state as an argument. \' + \'Pass it down from the top reducer instead of reading it from the store.\');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== \'function\') {\n      throw new Error(\'Expected the listener to be a function.\');\n    }\n\n    if (isDispatching) {\n      throw new Error(\'You may not call store.subscribe() while the reducer is executing. \' + \'If you would like to be notified after the store has been updated, subscribe from a \' + \'component and invoke store.getState() in the callback to access the latest state. \' + \'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.\');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(\'You may not unsubscribe from a store listener while the reducer is executing. \' + \'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.\');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(\'Actions must be plain objects. \' + \'Use custom middleware for async actions.\');\n    }\n\n    if (typeof action.type === \'undefined\') {\n      throw new Error(\'Actions may not have an undefined "type" property. \' + \'Have you misspelled a constant?\');\n    }\n\n    if (isDispatching) {\n      throw new Error(\'Reducers may not dispatch actions.\');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== \'function\') {\n      throw new Error(\'Expected the nextReducer to be a function.\');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== \'object\' || observer === null) {\n          throw new TypeError(\'Expected the observer to be an object.\');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an "INIT" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== \'undefined\' && typeof console.error === \'function\') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // "break on all exceptions" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && "action \\"" + String(actionType) + "\\"" || \'an action\';\n  return "Given " + actionDescription + ", reducer \\"" + key + "\\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? \'preloadedState argument passed to createStore\' : \'previous state received by the reducer\';\n\n  if (reducerKeys.length === 0) {\n    return \'Store does not have a valid reducer. Make sure the argument passed \' + \'to combineReducers is an object whose values are reducers.\';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return "The " + argumentName + " has unexpected type of \\"" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + "\\". Expected argument to be an object with the following " + ("keys: \\"" + reducerKeys.join(\'", "\') + "\\"");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return "Unexpected " + (unexpectedKeys.length > 1 ? \'keys\' : \'key\') + " " + ("\\"" + unexpectedKeys.join(\'", "\') + "\\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\\"" + reducerKeys.join(\'", "\') + "\\". Unexpected keys will be ignored.");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === \'undefined\') {\n      throw new Error("Reducer \\"" + key + "\\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don\'t want to set a value for this reducer, " + "you can use null instead of undefined.");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === \'undefined\') {\n      throw new Error("Reducer \\"" + key + "\\" returned undefined when probed with a random type. " + ("Don\'t try to handle " + ActionTypes.INIT + " or other actions in \\"redux/*\\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (false) {}\n\n    if (typeof reducers[key] === \'function\') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don\'t warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (false) {}\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (false) { var warningMessage; }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === \'undefined\') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === \'function\') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== \'object\' || actionCreators === null) {\n    throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? \'null\' : typeof actionCreators) + ". " + "Did you write \\"import ActionCreators from\\" instead of \\"import * as ActionCreators from\\"?");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === \'function\') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(\'Dispatching while constructing your middleware is not allowed. \' + \'Other middleware would not be applied to this dispatch.\');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== \'production\', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (false) {}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///10\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _extends; });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcz9jMzFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWU7QUFDZjtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIxMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WlColumn; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(68);\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_scss__WEBPACK_IMPORTED_MODULE_1__);\n/**\n * WlColumn: Shows a column on ui.\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.25.0\n */\n\n/**\n * External dependencies.\n */\n\n/**\n * Internal dependencies.\n */\n\n\nconst WlColumn = ({\n  children,\n  className = ""\n}) => {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n    className: "wl-col " + className\n  }, children);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwcGluZ3MvYmxvY2tzL3dsLWNvbHVtbi9pbmRleC5qcz9hODVjIl0sIm5hbWVzIjpbIldsQ29sdW1uIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7O0FBTUE7OztBQUdBO0FBRUE7Ozs7QUFHQTtBQUVPLE1BQU1BLFFBQVEsR0FBRyxDQUFDO0FBQUVDLFVBQUY7QUFBWUMsV0FBUyxHQUFHO0FBQXhCLENBQUQsS0FBa0M7QUFDeEQsU0FBTztBQUFLLGFBQVMsRUFBRSxZQUFZQTtBQUE1QixLQUF3Q0QsUUFBeEMsQ0FBUDtBQUNELENBRk0iLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdsQ29sdW1uOiBTaG93cyBhIGNvbHVtbiBvbiB1aS5cbiAqIEBhdXRob3IgTmF2ZWVuIE11dGh1c2FteSA8bmF2ZWVuQHdvcmRsaWZ0LmlvPlxuICogQHNpbmNlIDMuMjUuMFxuICovXG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzLlxuICovXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzLlxuICovXG5pbXBvcnQgXCIuL2luZGV4LnNjc3NcIjtcblxuZXhwb3J0IGNvbnN0IFdsQ29sdW1uID0gKHsgY2hpbGRyZW4sIGNsYXNzTmFtZSA9IFwiXCIgfSkgPT4ge1xuICByZXR1cm4gPGRpdiBjbGFzc05hbWU9e1wid2wtY29sIFwiICsgY2xhc3NOYW1lfT57Y2hpbGRyZW59PC9kaXY+O1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _objectWithoutPropertiesLoose; });\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcz9jY2I1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n')},function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {}\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanM/NDBiNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLEtBQXFDLEVBQUUsRUFJMUM7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMseUJBQXlCLEVBQUU7QUFDckU7QUFDQTtBQUNBOztBQUVBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return WlContainer; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(67);\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_scss__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _helper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(24);\n/**\n * WlContainer:  Container for all the WlColumns, decides how to places\n * the elements in the container\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.25.0\n */\n\n/**\n * External dependencies.\n */\n\n/**\n * Internal dependencies.\n */\n\n\n\nconst WlContainer = ({\n  children,\n  className = "",\n  fullWidth = false\n}) => {\n  const classes = Object(_helper__WEBPACK_IMPORTED_MODULE_2__[/* classExtractor */ "a"])({\n    "wl-container--full-width": fullWidth\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n    className: "wl-container " + classes\n  }, children);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwcGluZ3MvYmxvY2tzL3dsLWNvbnRhaW5lci9pbmRleC5qcz9lYzJhIl0sIm5hbWVzIjpbIldsQ29udGFpbmVyIiwiY2hpbGRyZW4iLCJjbGFzc05hbWUiLCJmdWxsV2lkdGgiLCJjbGFzc2VzIiwiY2xhc3NFeHRyYWN0b3IiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7O0FBT0E7OztBQUdBO0FBRUE7Ozs7QUFHQTtBQUNBO0FBRU8sTUFBTUEsV0FBVyxHQUFHLENBQUM7QUFBRUMsVUFBRjtBQUFZQyxXQUFTLEdBQUcsRUFBeEI7QUFBNEJDLFdBQVMsR0FBRztBQUF4QyxDQUFELEtBQXFEO0FBQzlFLFFBQU1DLE9BQU8sR0FBR0Msc0VBQWMsQ0FBQztBQUM3QixnQ0FBNEJGO0FBREMsR0FBRCxDQUE5QjtBQUdBLFNBQU87QUFBSyxhQUFTLEVBQUUsa0JBQWtCQztBQUFsQyxLQUE0Q0gsUUFBNUMsQ0FBUDtBQUNELENBTE0iLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdsQ29udGFpbmVyOiAgQ29udGFpbmVyIGZvciBhbGwgdGhlIFdsQ29sdW1ucywgZGVjaWRlcyBob3cgdG8gcGxhY2VzXG4gKiB0aGUgZWxlbWVudHMgaW4gdGhlIGNvbnRhaW5lclxuICogQGF1dGhvciBOYXZlZW4gTXV0aHVzYW15IDxuYXZlZW5Ad29yZGxpZnQuaW8+XG4gKiBAc2luY2UgMy4yNS4wXG4gKi9cblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXMuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXMuXG4gKi9cbmltcG9ydCBcIi4vaW5kZXguc2Nzc1wiO1xuaW1wb3J0IHsgY2xhc3NFeHRyYWN0b3IgfSBmcm9tIFwiLi4vaGVscGVyXCI7XG5cbmV4cG9ydCBjb25zdCBXbENvbnRhaW5lciA9ICh7IGNoaWxkcmVuLCBjbGFzc05hbWUgPSBcIlwiLCBmdWxsV2lkdGggPSBmYWxzZSB9KSA9PiB7XG4gIGNvbnN0IGNsYXNzZXMgPSBjbGFzc0V4dHJhY3Rvcih7XG4gICAgXCJ3bC1jb250YWluZXItLWZ1bGwtd2lkdGhcIjogZnVsbFdpZHRoXG4gIH0pO1xuICByZXR1cm4gPGRpdiBjbGFzc05hbWU9e1wid2wtY29udGFpbmVyIFwiICsgY2xhc3Nlc30+e2NoaWxkcmVufTwvZGl2Pjtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///16\n')},,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return requestAddNewQuestion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return requestGetFaqItems; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return updateFaqItems; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return updateQuestionOnInputChange; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return questionSelectedByUser; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return closeEditScreen; });\n/* unused harmony export requestUpdateFaqItems */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return updateFaqItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return updateFaqModalVisibility; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return updateNotificationArea; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return resetTypedQuestion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return answerSelectedByUser; });\n/* harmony import */ var redux_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27);\n/* harmony import */ var _constants_action_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(21);\n/**\n * This file provides the actions used by FAQ meta box.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\n\n/**\n * External dependencies.\n */\n\n/**\n * Internal dependencies\n */\n\n\n/**\n * Action for adding new question.\n * @type {function(): {type: *}}\n */\n\nconst requestAddNewQuestion = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* REQUEST_FAQ_ADD_NEW_QUESTION */ "d"]);\n/**\n * Action for getting FAQ items from API.\n * @type {function(): {type: *}}\n */\n\nconst requestGetFaqItems = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* REQUEST_GET_FAQ_ITEMS */ "e"]);\n/**\n * Action for updating FAQ items in store.\n * @type {function(): {type: *}}\n */\n\nconst updateFaqItems = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* UPDATE_FAQ_ITEMS */ "i"]);\n/**\n * Action for updating question in state when user types the question.\n * @type {function(): {type: *}}\n */\n\nconst updateQuestionOnInputChange = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* UPDATE_QUESTION_ON_INPUT_CHANGE */ "l"]);\n/**\n * Action when the user selects the question from the list of questions.\n * @type {function(): {type: *}}\n */\n\nconst questionSelectedByUser = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* QUESTION_SELECTED_BY_USER */ "c"]);\n/**\n * Action when the user wants to close the edit screen\n * @type {function(): {type: *}}\n */\n\nconst closeEditScreen = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* CLOSE_EDIT_SCREEN */ "b"]);\n/**\n * Action when the ui wants to update the data in API.\n * @type {function(): {type: *}}\n */\n\nconst requestUpdateFaqItems = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* REQUEST_UPDATE_FAQ_ITEMS */ "f"]);\n/**\n * Action when the ui wants a single FAQ item.\n * @type {function(): {type: *}}\n */\n\nconst updateFaqItem = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* UPDATE_FAQ_ITEM */ "h"]);\n/**\n * Action when the ui wants to show/hide the modal.\n * @type {function(): {type: *}}\n */\n\nconst updateFaqModalVisibility = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* UPDATE_MODAL_STATUS */ "j"]);\n/**\n * Action for showing notification area.\n * @type {function(): {type: *}}\n */\n\nconst updateNotificationArea = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* UPDATE_NOTIFICATION_AREA */ "k"]);\n/**\n * Action for resetting input field.\n * @type {function(): {type: *}}\n */\n\nconst resetTypedQuestion = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* RESET_TYPED_QUESTION */ "g"]);\n/**\n * Action for opening modal if the answer is selected by the user\n */\n\nconst answerSelectedByUser = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"])(_constants_action_types__WEBPACK_IMPORTED_MODULE_1__[/* ANSWER_SELECTED_BY_USER */ "a"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2FjdGlvbnMvaW5kZXguanM/MjAwNiJdLCJuYW1lcyI6WyJyZXF1ZXN0QWRkTmV3UXVlc3Rpb24iLCJjcmVhdGVBY3Rpb24iLCJSRVFVRVNUX0ZBUV9BRERfTkVXX1FVRVNUSU9OIiwicmVxdWVzdEdldEZhcUl0ZW1zIiwiUkVRVUVTVF9HRVRfRkFRX0lURU1TIiwidXBkYXRlRmFxSXRlbXMiLCJVUERBVEVfRkFRX0lURU1TIiwidXBkYXRlUXVlc3Rpb25PbklucHV0Q2hhbmdlIiwiVVBEQVRFX1FVRVNUSU9OX09OX0lOUFVUX0NIQU5HRSIsInF1ZXN0aW9uU2VsZWN0ZWRCeVVzZXIiLCJRVUVTVElPTl9TRUxFQ1RFRF9CWV9VU0VSIiwiY2xvc2VFZGl0U2NyZWVuIiwiQ0xPU0VfRURJVF9TQ1JFRU4iLCJyZXF1ZXN0VXBkYXRlRmFxSXRlbXMiLCJSRVFVRVNUX1VQREFURV9GQVFfSVRFTVMiLCJ1cGRhdGVGYXFJdGVtIiwiVVBEQVRFX0ZBUV9JVEVNIiwidXBkYXRlRmFxTW9kYWxWaXNpYmlsaXR5IiwiVVBEQVRFX01PREFMX1NUQVRVUyIsInVwZGF0ZU5vdGlmaWNhdGlvbkFyZWEiLCJVUERBVEVfTk9USUZJQ0FUSU9OX0FSRUEiLCJyZXNldFR5cGVkUXVlc3Rpb24iLCJSRVNFVF9UWVBFRF9RVUVTVElPTiIsImFuc3dlclNlbGVjdGVkQnlVc2VyIiwiQU5TV0VSX1NFTEVDVEVEX0JZX1VTRVIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7OztBQU9BOzs7QUFHQTtBQUNBOzs7O0FBR0E7QUFlQTs7Ozs7QUFJTyxNQUFNQSxxQkFBcUIsR0FBR0MscUVBQVksQ0FBQ0MsNEZBQUQsQ0FBMUM7QUFFUDs7Ozs7QUFJTyxNQUFNQyxrQkFBa0IsR0FBR0YscUVBQVksQ0FBQ0cscUZBQUQsQ0FBdkM7QUFFUDs7Ozs7QUFJTyxNQUFNQyxjQUFjLEdBQUdKLHFFQUFZLENBQUNLLGdGQUFELENBQW5DO0FBRVA7Ozs7O0FBSU8sTUFBTUMsMkJBQTJCLEdBQUdOLHFFQUFZLENBQUNPLCtGQUFELENBQWhEO0FBRVA7Ozs7O0FBSU8sTUFBTUMsc0JBQXNCLEdBQUdSLHFFQUFZLENBQUNTLHlGQUFELENBQTNDO0FBRVA7Ozs7O0FBSU8sTUFBTUMsZUFBZSxHQUFHVixxRUFBWSxDQUFDVyxpRkFBRCxDQUFwQztBQUVQOzs7OztBQUlPLE1BQU1DLHFCQUFxQixHQUFHWixxRUFBWSxDQUFDYSx3RkFBRCxDQUExQztBQUVQOzs7OztBQUlPLE1BQU1DLGFBQWEsR0FBR2QscUVBQVksQ0FBQ2UsK0VBQUQsQ0FBbEM7QUFFUDs7Ozs7QUFJTyxNQUFNQyx3QkFBd0IsR0FBR2hCLHFFQUFZLENBQUNpQixtRkFBRCxDQUE3QztBQUVQOzs7OztBQUlPLE1BQU1DLHNCQUFzQixHQUFHbEIscUVBQVksQ0FBQ21CLHdGQUFELENBQTNDO0FBRVA7Ozs7O0FBSU8sTUFBTUMsa0JBQWtCLEdBQUdwQixxRUFBWSxDQUFDcUIsb0ZBQUQsQ0FBdkM7QUFFUDs7OztBQUdPLE1BQU1DLG9CQUFvQixHQUFHdEIscUVBQVksQ0FBQ3VCLHVGQUFELENBQXpDIiwiZmlsZSI6IjE5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGZpbGUgcHJvdmlkZXMgdGhlIGFjdGlvbnMgdXNlZCBieSBGQVEgbWV0YSBib3guXG4gKlxuICogQHNpbmNlIDMuMjYuMFxuICogQGF1dGhvciBOYXZlZW4gTXV0aHVzYW15IDxuYXZlZW5Ad29yZGxpZnQuaW8+XG4gKi9cblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXMuXG4gKi9cbmltcG9ydCB7IGNyZWF0ZUFjdGlvbiB9IGZyb20gXCJyZWR1eC1hY3Rpb25zXCI7XG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQge1xuICBBTlNXRVJfU0VMRUNURURfQllfVVNFUixcbiAgQ0xPU0VfRURJVF9TQ1JFRU4sXG4gIFFVRVNUSU9OX1NFTEVDVEVEX0JZX1VTRVIsXG4gIFJFUVVFU1RfRkFRX0FERF9ORVdfUVVFU1RJT04sXG4gIFJFUVVFU1RfR0VUX0ZBUV9JVEVNUyxcbiAgUkVRVUVTVF9VUERBVEVfRkFRX0lURU1TLFxuICBSRVNFVF9UWVBFRF9RVUVTVElPTixcbiAgVVBEQVRFX0ZBUV9JVEVNLFxuICBVUERBVEVfRkFRX0lURU1TLFxuICBVUERBVEVfTU9EQUxfU1RBVFVTLFxuICBVUERBVEVfTk9USUZJQ0FUSU9OX0FSRUEsXG4gIFVQREFURV9RVUVTVElPTl9PTl9JTlBVVF9DSEFOR0Vcbn0gZnJvbSBcIi4uL2NvbnN0YW50cy9hY3Rpb24tdHlwZXNcIjtcblxuLyoqXG4gKiBBY3Rpb24gZm9yIGFkZGluZyBuZXcgcXVlc3Rpb24uXG4gKiBAdHlwZSB7ZnVuY3Rpb24oKToge3R5cGU6ICp9fVxuICovXG5leHBvcnQgY29uc3QgcmVxdWVzdEFkZE5ld1F1ZXN0aW9uID0gY3JlYXRlQWN0aW9uKFJFUVVFU1RfRkFRX0FERF9ORVdfUVVFU1RJT04pO1xuXG4vKipcbiAqIEFjdGlvbiBmb3IgZ2V0dGluZyBGQVEgaXRlbXMgZnJvbSBBUEkuXG4gKiBAdHlwZSB7ZnVuY3Rpb24oKToge3R5cGU6ICp9fVxuICovXG5leHBvcnQgY29uc3QgcmVxdWVzdEdldEZhcUl0ZW1zID0gY3JlYXRlQWN0aW9uKFJFUVVFU1RfR0VUX0ZBUV9JVEVNUyk7XG5cbi8qKlxuICogQWN0aW9uIGZvciB1cGRhdGluZyBGQVEgaXRlbXMgaW4gc3RvcmUuXG4gKiBAdHlwZSB7ZnVuY3Rpb24oKToge3R5cGU6ICp9fVxuICovXG5leHBvcnQgY29uc3QgdXBkYXRlRmFxSXRlbXMgPSBjcmVhdGVBY3Rpb24oVVBEQVRFX0ZBUV9JVEVNUyk7XG5cbi8qKlxuICogQWN0aW9uIGZvciB1cGRhdGluZyBxdWVzdGlvbiBpbiBzdGF0ZSB3aGVuIHVzZXIgdHlwZXMgdGhlIHF1ZXN0aW9uLlxuICogQHR5cGUge2Z1bmN0aW9uKCk6IHt0eXBlOiAqfX1cbiAqL1xuZXhwb3J0IGNvbnN0IHVwZGF0ZVF1ZXN0aW9uT25JbnB1dENoYW5nZSA9IGNyZWF0ZUFjdGlvbihVUERBVEVfUVVFU1RJT05fT05fSU5QVVRfQ0hBTkdFKTtcblxuLyoqXG4gKiBBY3Rpb24gd2hlbiB0aGUgdXNlciBzZWxlY3RzIHRoZSBxdWVzdGlvbiBmcm9tIHRoZSBsaXN0IG9mIHF1ZXN0aW9ucy5cbiAqIEB0eXBlIHtmdW5jdGlvbigpOiB7dHlwZTogKn19XG4gKi9cbmV4cG9ydCBjb25zdCBxdWVzdGlvblNlbGVjdGVkQnlVc2VyID0gY3JlYXRlQWN0aW9uKFFVRVNUSU9OX1NFTEVDVEVEX0JZX1VTRVIpO1xuXG4vKipcbiAqIEFjdGlvbiB3aGVuIHRoZSB1c2VyIHdhbnRzIHRvIGNsb3NlIHRoZSBlZGl0IHNjcmVlblxuICogQHR5cGUge2Z1bmN0aW9uKCk6IHt0eXBlOiAqfX1cbiAqL1xuZXhwb3J0IGNvbnN0IGNsb3NlRWRpdFNjcmVlbiA9IGNyZWF0ZUFjdGlvbihDTE9TRV9FRElUX1NDUkVFTik7XG5cbi8qKlxuICogQWN0aW9uIHdoZW4gdGhlIHVpIHdhbnRzIHRvIHVwZGF0ZSB0aGUgZGF0YSBpbiBBUEkuXG4gKiBAdHlwZSB7ZnVuY3Rpb24oKToge3R5cGU6ICp9fVxuICovXG5leHBvcnQgY29uc3QgcmVxdWVzdFVwZGF0ZUZhcUl0ZW1zID0gY3JlYXRlQWN0aW9uKFJFUVVFU1RfVVBEQVRFX0ZBUV9JVEVNUyk7XG5cbi8qKlxuICogQWN0aW9uIHdoZW4gdGhlIHVpIHdhbnRzIGEgc2luZ2xlIEZBUSBpdGVtLlxuICogQHR5cGUge2Z1bmN0aW9uKCk6IHt0eXBlOiAqfX1cbiAqL1xuZXhwb3J0IGNvbnN0IHVwZGF0ZUZhcUl0ZW0gPSBjcmVhdGVBY3Rpb24oVVBEQVRFX0ZBUV9JVEVNKTtcblxuLyoqXG4gKiBBY3Rpb24gd2hlbiB0aGUgdWkgd2FudHMgdG8gc2hvdy9oaWRlIHRoZSBtb2RhbC5cbiAqIEB0eXBlIHtmdW5jdGlvbigpOiB7dHlwZTogKn19XG4gKi9cbmV4cG9ydCBjb25zdCB1cGRhdGVGYXFNb2RhbFZpc2liaWxpdHkgPSBjcmVhdGVBY3Rpb24oVVBEQVRFX01PREFMX1NUQVRVUyk7XG5cbi8qKlxuICogQWN0aW9uIGZvciBzaG93aW5nIG5vdGlmaWNhdGlvbiBhcmVhLlxuICogQHR5cGUge2Z1bmN0aW9uKCk6IHt0eXBlOiAqfX1cbiAqL1xuZXhwb3J0IGNvbnN0IHVwZGF0ZU5vdGlmaWNhdGlvbkFyZWEgPSBjcmVhdGVBY3Rpb24oVVBEQVRFX05PVElGSUNBVElPTl9BUkVBKTtcblxuLyoqXG4gKiBBY3Rpb24gZm9yIHJlc2V0dGluZyBpbnB1dCBmaWVsZC5cbiAqIEB0eXBlIHtmdW5jdGlvbigpOiB7dHlwZTogKn19XG4gKi9cbmV4cG9ydCBjb25zdCByZXNldFR5cGVkUXVlc3Rpb24gPSBjcmVhdGVBY3Rpb24oUkVTRVRfVFlQRURfUVVFU1RJT04pO1xuXG4vKipcbiAqIEFjdGlvbiBmb3Igb3BlbmluZyBtb2RhbCBpZiB0aGUgYW5zd2VyIGlzIHNlbGVjdGVkIGJ5IHRoZSB1c2VyXG4gKi9cbmV4cG9ydCBjb25zdCBhbnN3ZXJTZWxlY3RlZEJ5VXNlciA9IGNyZWF0ZUFjdGlvbihBTlNXRVJfU0VMRUNURURfQllfVVNFUik7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///19\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return REQUEST_FAQ_ADD_NEW_QUESTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return REQUEST_GET_FAQ_ITEMS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return UPDATE_FAQ_ITEMS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return UPDATE_QUESTION_ON_INPUT_CHANGE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return QUESTION_SELECTED_BY_USER; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return CLOSE_EDIT_SCREEN; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return REQUEST_UPDATE_FAQ_ITEMS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return UPDATE_FAQ_ITEM; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return UPDATE_MODAL_STATUS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return UPDATE_NOTIFICATION_AREA; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return RESET_TYPED_QUESTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ANSWER_SELECTED_BY_USER; });\n/**\n * This file provides the action types used by FAQ meta box.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\n\n/**\n * Action type for adding new question using sidebar FAQ\n * @type {string}\n */\nconst REQUEST_FAQ_ADD_NEW_QUESTION = "REQUEST_FAQ_ADD_NEW_QUESTION";\n/**\n * Action type for getting FAQ items.\n * @type {string}\n */\n\nconst REQUEST_GET_FAQ_ITEMS = "REQUEST_GET_FAQ_ITEMS";\n/**\n * Action for updating FAQ items in the store with new data\n * @type {string}\n */\n\nconst UPDATE_FAQ_ITEMS = "UPDATE_FAQ_ITEMS";\n/**\n * Action for updating new question typed by user.\n * @type {string}\n */\n\nconst UPDATE_QUESTION_ON_INPUT_CHANGE = "UPDATE_QUESTION_ON_INPUT_CHANGE";\n/**\n * Action for updating store when question is selected by user.\n * @type {string}\n */\n\nconst QUESTION_SELECTED_BY_USER = "QUESTION_SELECTED_BY_USER";\n/**\n * Action for updating store when the edit screen is closed.\n * @type {string}\n */\n\nconst CLOSE_EDIT_SCREEN = "CLOSE_EDIT_SCREEN";\n/**\n * Action type for updating FAQ items on ui changing the data.\n * @type {string}\n */\n\nconst REQUEST_UPDATE_FAQ_ITEMS = "REQUEST_UPDATE_FAQ_ITEMS";\n/**\n * Action type for updating FAQ item on store.\n * @type {string}\n */\n\nconst UPDATE_FAQ_ITEM = "UPDATE_FAQ_ITEM";\n/**\n * Action type for opening/closing the modal.\n * @type {string}\n */\n\nconst UPDATE_MODAL_STATUS = "UPDATE_MODAL_STATUS";\n/**\n * Action type for updating notification area.\n * @type {string}\n */\n\nconst UPDATE_NOTIFICATION_AREA = "UPDATE_NOTIFICATION_AREA";\n/**\n * Action type for resetting question input field.\n * @type {string}\n */\n\nconst RESET_TYPED_QUESTION = "RESET_TYPED_QUESTION";\n/**\n * Action type for when the answer is set by selecting.\n * @type {string}\n */\n\nconst ANSWER_SELECTED_BY_USER = "ANSWER_SELECTED_BY_USER";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2NvbnN0YW50cy9hY3Rpb24tdHlwZXMuanM/NGFhOCJdLCJuYW1lcyI6WyJSRVFVRVNUX0ZBUV9BRERfTkVXX1FVRVNUSU9OIiwiUkVRVUVTVF9HRVRfRkFRX0lURU1TIiwiVVBEQVRFX0ZBUV9JVEVNUyIsIlVQREFURV9RVUVTVElPTl9PTl9JTlBVVF9DSEFOR0UiLCJRVUVTVElPTl9TRUxFQ1RFRF9CWV9VU0VSIiwiQ0xPU0VfRURJVF9TQ1JFRU4iLCJSRVFVRVNUX1VQREFURV9GQVFfSVRFTVMiLCJVUERBVEVfRkFRX0lURU0iLCJVUERBVEVfTU9EQUxfU1RBVFVTIiwiVVBEQVRFX05PVElGSUNBVElPTl9BUkVBIiwiUkVTRVRfVFlQRURfUVVFU1RJT04iLCJBTlNXRVJfU0VMRUNURURfQllfVVNFUiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7QUFPQTs7OztBQUlPLE1BQU1BLDRCQUE0QixHQUFHLDhCQUFyQztBQUVQOzs7OztBQUlPLE1BQU1DLHFCQUFxQixHQUFHLHVCQUE5QjtBQUVQOzs7OztBQUlPLE1BQU1DLGdCQUFnQixHQUFHLGtCQUF6QjtBQUVQOzs7OztBQUlPLE1BQU1DLCtCQUErQixHQUFHLGlDQUF4QztBQUVQOzs7OztBQUlPLE1BQU1DLHlCQUF5QixHQUFHLDJCQUFsQztBQUVQOzs7OztBQUlPLE1BQU1DLGlCQUFpQixHQUFHLG1CQUExQjtBQUVQOzs7OztBQUlPLE1BQU1DLHdCQUF3QixHQUFHLDBCQUFqQztBQUVQOzs7OztBQUlPLE1BQU1DLGVBQWUsR0FBRyxpQkFBeEI7QUFFUDs7Ozs7QUFJTyxNQUFNQyxtQkFBbUIsR0FBRyxxQkFBNUI7QUFFUDs7Ozs7QUFJTyxNQUFNQyx3QkFBd0IsR0FBRywwQkFBakM7QUFFUDs7Ozs7QUFJTyxNQUFNQyxvQkFBb0IsR0FBRyxzQkFBN0I7QUFFUDs7Ozs7QUFJTyxNQUFNQyx1QkFBdUIsR0FBRyx5QkFBaEMiLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZmlsZSBwcm92aWRlcyB0aGUgYWN0aW9uIHR5cGVzIHVzZWQgYnkgRkFRIG1ldGEgYm94LlxuICpcbiAqIEBzaW5jZSAzLjI2LjBcbiAqIEBhdXRob3IgTmF2ZWVuIE11dGh1c2FteSA8bmF2ZWVuQHdvcmRsaWZ0LmlvPlxuICovXG5cbi8qKlxuICogQWN0aW9uIHR5cGUgZm9yIGFkZGluZyBuZXcgcXVlc3Rpb24gdXNpbmcgc2lkZWJhciBGQVFcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBSRVFVRVNUX0ZBUV9BRERfTkVXX1FVRVNUSU9OID0gXCJSRVFVRVNUX0ZBUV9BRERfTkVXX1FVRVNUSU9OXCI7XG5cbi8qKlxuICogQWN0aW9uIHR5cGUgZm9yIGdldHRpbmcgRkFRIGl0ZW1zLlxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IFJFUVVFU1RfR0VUX0ZBUV9JVEVNUyA9IFwiUkVRVUVTVF9HRVRfRkFRX0lURU1TXCI7XG5cbi8qKlxuICogQWN0aW9uIGZvciB1cGRhdGluZyBGQVEgaXRlbXMgaW4gdGhlIHN0b3JlIHdpdGggbmV3IGRhdGFcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBVUERBVEVfRkFRX0lURU1TID0gXCJVUERBVEVfRkFRX0lURU1TXCI7XG5cbi8qKlxuICogQWN0aW9uIGZvciB1cGRhdGluZyBuZXcgcXVlc3Rpb24gdHlwZWQgYnkgdXNlci5cbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBVUERBVEVfUVVFU1RJT05fT05fSU5QVVRfQ0hBTkdFID0gXCJVUERBVEVfUVVFU1RJT05fT05fSU5QVVRfQ0hBTkdFXCI7XG5cbi8qKlxuICogQWN0aW9uIGZvciB1cGRhdGluZyBzdG9yZSB3aGVuIHF1ZXN0aW9uIGlzIHNlbGVjdGVkIGJ5IHVzZXIuXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3QgUVVFU1RJT05fU0VMRUNURURfQllfVVNFUiA9IFwiUVVFU1RJT05fU0VMRUNURURfQllfVVNFUlwiO1xuXG4vKipcbiAqIEFjdGlvbiBmb3IgdXBkYXRpbmcgc3RvcmUgd2hlbiB0aGUgZWRpdCBzY3JlZW4gaXMgY2xvc2VkLlxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IENMT1NFX0VESVRfU0NSRUVOID0gXCJDTE9TRV9FRElUX1NDUkVFTlwiO1xuXG4vKipcbiAqIEFjdGlvbiB0eXBlIGZvciB1cGRhdGluZyBGQVEgaXRlbXMgb24gdWkgY2hhbmdpbmcgdGhlIGRhdGEuXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3QgUkVRVUVTVF9VUERBVEVfRkFRX0lURU1TID0gXCJSRVFVRVNUX1VQREFURV9GQVFfSVRFTVNcIjtcblxuLyoqXG4gKiBBY3Rpb24gdHlwZSBmb3IgdXBkYXRpbmcgRkFRIGl0ZW0gb24gc3RvcmUuXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3QgVVBEQVRFX0ZBUV9JVEVNID0gXCJVUERBVEVfRkFRX0lURU1cIjtcblxuLyoqXG4gKiBBY3Rpb24gdHlwZSBmb3Igb3BlbmluZy9jbG9zaW5nIHRoZSBtb2RhbC5cbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBVUERBVEVfTU9EQUxfU1RBVFVTID0gXCJVUERBVEVfTU9EQUxfU1RBVFVTXCI7XG5cbi8qKlxuICogQWN0aW9uIHR5cGUgZm9yIHVwZGF0aW5nIG5vdGlmaWNhdGlvbiBhcmVhLlxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IFVQREFURV9OT1RJRklDQVRJT05fQVJFQSA9IFwiVVBEQVRFX05PVElGSUNBVElPTl9BUkVBXCI7XG5cbi8qKlxuICogQWN0aW9uIHR5cGUgZm9yIHJlc2V0dGluZyBxdWVzdGlvbiBpbnB1dCBmaWVsZC5cbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBSRVNFVF9UWVBFRF9RVUVTVElPTiA9IFwiUkVTRVRfVFlQRURfUVVFU1RJT05cIjtcblxuLyoqXG4gKiBBY3Rpb24gdHlwZSBmb3Igd2hlbiB0aGUgYW5zd2VyIGlzIHNldCBieSBzZWxlY3RpbmcuXG4gKiBAdHlwZSB7c3RyaW5nfVxuICovXG5leHBvcnQgY29uc3QgQU5TV0VSX1NFTEVDVEVEX0JZX1VTRVIgPSBcIkFOU1dFUl9TRUxFQ1RFRF9CWV9VU0VSXCI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n')},function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6IjIyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(48);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NGNlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLElBQXFDO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLEVBQWtDO0FBQzdELENBQUMsTUFBTSxFQUVOIiwiZmlsZSI6IjIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///23\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return classExtractor; });\n/**\n * This file is used to provide helpers for styling.\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.25.0\n *\n */\n\n/**\n * classExtractor helps to return class name by applying boolean logic.\n * @param classConfig {Object} should be in format { "class-name": Boolean }\n * @returns {string} combined class name.\n */\nconst classExtractor = classConfig => {\n  let className = "";\n\n  for (let key of Object.keys(classConfig)) {\n    if (classConfig[key]) {\n      className += ` ${key}`;\n    }\n  }\n\n  return className;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwcGluZ3MvYmxvY2tzL2hlbHBlci5qcz82ZWYwIl0sIm5hbWVzIjpbImNsYXNzRXh0cmFjdG9yIiwiY2xhc3NDb25maWciLCJjbGFzc05hbWUiLCJrZXkiLCJPYmplY3QiLCJrZXlzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOzs7Ozs7O0FBT0E7Ozs7O0FBS08sTUFBTUEsY0FBYyxHQUFHQyxXQUFXLElBQUk7QUFDM0MsTUFBSUMsU0FBUyxHQUFHLEVBQWhCOztBQUNBLE9BQUssSUFBSUMsR0FBVCxJQUFnQkMsTUFBTSxDQUFDQyxJQUFQLENBQVlKLFdBQVosQ0FBaEIsRUFBMEM7QUFDeEMsUUFBSUEsV0FBVyxDQUFDRSxHQUFELENBQWYsRUFBc0I7QUFDcEJELGVBQVMsSUFBSyxJQUFHQyxHQUFJLEVBQXJCO0FBQ0Q7QUFDRjs7QUFDRCxTQUFPRCxTQUFQO0FBQ0QsQ0FSTSIsImZpbGUiOiIyNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBmaWxlIGlzIHVzZWQgdG8gcHJvdmlkZSBoZWxwZXJzIGZvciBzdHlsaW5nLlxuICogQGF1dGhvciBOYXZlZW4gTXV0aHVzYW15IDxuYXZlZW5Ad29yZGxpZnQuaW8+XG4gKiBAc2luY2UgMy4yNS4wXG4gKlxuICovXG5cbi8qKlxuICogY2xhc3NFeHRyYWN0b3IgaGVscHMgdG8gcmV0dXJuIGNsYXNzIG5hbWUgYnkgYXBwbHlpbmcgYm9vbGVhbiBsb2dpYy5cbiAqIEBwYXJhbSBjbGFzc0NvbmZpZyB7T2JqZWN0fSBzaG91bGQgYmUgaW4gZm9ybWF0IHsgXCJjbGFzcy1uYW1lXCI6IEJvb2xlYW4gfVxuICogQHJldHVybnMge3N0cmluZ30gY29tYmluZWQgY2xhc3MgbmFtZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGNsYXNzRXh0cmFjdG9yID0gY2xhc3NDb25maWcgPT4ge1xuICBsZXQgY2xhc3NOYW1lID0gXCJcIjtcbiAgZm9yIChsZXQga2V5IG9mIE9iamVjdC5rZXlzKGNsYXNzQ29uZmlnKSkge1xuICAgIGlmIChjbGFzc0NvbmZpZ1trZXldKSB7XG4gICAgICBjbGFzc05hbWUgKz0gYCAke2tleX1gO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY2xhc3NOYW1lO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///24\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var _redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n\n\nfunction delayP(ms, val) {\n  if (val === void 0) {\n    val = true;\n  }\n\n  var timeoutId;\n  var promise = new Promise(function (resolve) {\n    timeoutId = setTimeout(resolve, ms, val);\n  });\n\n  promise[_redux_saga_symbols__WEBPACK_IMPORTED_MODULE_0__[/* CANCEL */ "a"]] = function () {\n    clearTimeout(timeoutId);\n  };\n\n  return promise;\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (delayP);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHJlZHV4LXNhZ2EvZGVsYXktcC9kaXN0L3JlZHV4LXNhZ2EtZGVsYXktcC5lc20uanM/YjFlYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUE2Qzs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSCxVQUFVLGtFQUFNO0FBQ2hCO0FBQ0E7O0FBRUE7QUFDQTs7QUFFZSwrREFBTSxFQUFDIiwiZmlsZSI6IjI1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ0FOQ0VMIH0gZnJvbSAnQHJlZHV4LXNhZ2Evc3ltYm9scyc7XG5cbmZ1bmN0aW9uIGRlbGF5UChtcywgdmFsKSB7XG4gIGlmICh2YWwgPT09IHZvaWQgMCkge1xuICAgIHZhbCA9IHRydWU7XG4gIH1cblxuICB2YXIgdGltZW91dElkO1xuICB2YXIgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7XG4gICAgdGltZW91dElkID0gc2V0VGltZW91dChyZXNvbHZlLCBtcywgdmFsKTtcbiAgfSk7XG5cbiAgcHJvbWlzZVtDQU5DRUxdID0gZnVuY3Rpb24gKCkge1xuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICB9O1xuXG4gIHJldHVybiBwcm9taXNlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBkZWxheVA7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/invariant/browser.js\nvar browser = __webpack_require__(15);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/isFunction.js\nvar isFunction = __webpack_require__(38);\n\n// EXTERNAL MODULE: ./node_modules/redux-actions/es/utils/identity.js\nvar identity = __webpack_require__(33);\n\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/utils/isNull.js\n/* harmony default export */ var isNull = (function (value) {\n  return value === null;\n});\n// CONCATENATED MODULE: ./node_modules/redux-actions/es/createAction.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return createAction; });\n\n\n\n\nfunction createAction(type, payloadCreator, metaCreator) {\n  if (payloadCreator === void 0) {\n    payloadCreator = identity["a" /* default */];\n  }\n\n  browser_default()(Object(isFunction["a" /* default */])(payloadCreator) || isNull(payloadCreator), \'Expected payloadCreator to be a function, undefined or null\');\n  var finalPayloadCreator = isNull(payloadCreator) || payloadCreator === identity["a" /* default */] ? identity["a" /* default */] : function (head) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return head instanceof Error ? head : payloadCreator.apply(void 0, [head].concat(args));\n  };\n  var hasMeta = Object(isFunction["a" /* default */])(metaCreator);\n  var typeString = type.toString();\n\n  var actionCreator = function actionCreator() {\n    var payload = finalPayloadCreator.apply(void 0, arguments);\n    var action = {\n      type: type\n    };\n\n    if (payload instanceof Error) {\n      action.error = true;\n    }\n\n    if (payload !== undefined) {\n      action.payload = payload;\n    }\n\n    if (hasMeta) {\n      action.meta = metaCreator.apply(void 0, arguments);\n    }\n\n    return action;\n  };\n\n  actionCreator.toString = function () {\n    return typeString;\n  };\n\n  return actionCreator;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pc051bGwuanM/NjFhZSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy9jcmVhdGVBY3Rpb24uanM/Njk2MiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBZ0I7QUFDaEI7QUFDQSxDQUFDLEU7O0FDRkQ7QUFBa0M7QUFDVTtBQUNKO0FBQ0o7QUFDckI7QUFDZjtBQUNBLHFCQUFxQiwyQkFBUTtBQUM3Qjs7QUFFQSxFQUFFLGlCQUFTLENBQUMscUNBQVUsb0JBQW9CLE1BQU07QUFDaEQsNEJBQTRCLE1BQU0sdUNBQXVDLDJCQUFRLEdBQUcsMkJBQVE7QUFDNUYsMEZBQTBGLGFBQWE7QUFDdkc7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsZ0JBQWdCLHFDQUFVO0FBQzFCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIyNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09PSBudWxsO1xufSk7IiwiaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuaW1wb3J0IGlzRnVuY3Rpb24gZnJvbSAnLi91dGlscy9pc0Z1bmN0aW9uJztcbmltcG9ydCBpZGVudGl0eSBmcm9tICcuL3V0aWxzL2lkZW50aXR5JztcbmltcG9ydCBpc051bGwgZnJvbSAnLi91dGlscy9pc051bGwnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlQWN0aW9uKHR5cGUsIHBheWxvYWRDcmVhdG9yLCBtZXRhQ3JlYXRvcikge1xuICBpZiAocGF5bG9hZENyZWF0b3IgPT09IHZvaWQgMCkge1xuICAgIHBheWxvYWRDcmVhdG9yID0gaWRlbnRpdHk7XG4gIH1cblxuICBpbnZhcmlhbnQoaXNGdW5jdGlvbihwYXlsb2FkQ3JlYXRvcikgfHwgaXNOdWxsKHBheWxvYWRDcmVhdG9yKSwgJ0V4cGVjdGVkIHBheWxvYWRDcmVhdG9yIHRvIGJlIGEgZnVuY3Rpb24sIHVuZGVmaW5lZCBvciBudWxsJyk7XG4gIHZhciBmaW5hbFBheWxvYWRDcmVhdG9yID0gaXNOdWxsKHBheWxvYWRDcmVhdG9yKSB8fCBwYXlsb2FkQ3JlYXRvciA9PT0gaWRlbnRpdHkgPyBpZGVudGl0eSA6IGZ1bmN0aW9uIChoZWFkKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIGhlYWQgaW5zdGFuY2VvZiBFcnJvciA/IGhlYWQgOiBwYXlsb2FkQ3JlYXRvci5hcHBseSh2b2lkIDAsIFtoZWFkXS5jb25jYXQoYXJncykpO1xuICB9O1xuICB2YXIgaGFzTWV0YSA9IGlzRnVuY3Rpb24obWV0YUNyZWF0b3IpO1xuICB2YXIgdHlwZVN0cmluZyA9IHR5cGUudG9TdHJpbmcoKTtcblxuICB2YXIgYWN0aW9uQ3JlYXRvciA9IGZ1bmN0aW9uIGFjdGlvbkNyZWF0b3IoKSB7XG4gICAgdmFyIHBheWxvYWQgPSBmaW5hbFBheWxvYWRDcmVhdG9yLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcbiAgICB2YXIgYWN0aW9uID0ge1xuICAgICAgdHlwZTogdHlwZVxuICAgIH07XG5cbiAgICBpZiAocGF5bG9hZCBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICBhY3Rpb24uZXJyb3IgPSB0cnVlO1xuICAgIH1cblxuICAgIGlmIChwYXlsb2FkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGFjdGlvbi5wYXlsb2FkID0gcGF5bG9hZDtcbiAgICB9XG5cbiAgICBpZiAoaGFzTWV0YSkge1xuICAgICAgYWN0aW9uLm1ldGEgPSBtZXRhQ3JlYXRvci5hcHBseSh2b2lkIDAsIGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjdGlvbjtcbiAgfTtcblxuICBhY3Rpb25DcmVhdG9yLnRvU3RyaW5nID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0eXBlU3RyaW5nO1xuICB9O1xuXG4gIHJldHVybiBhY3Rpb25DcmVhdG9yO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///27\n')},,function(module,exports){eval("module.exports = Backbone;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJCYWNrYm9uZVwiPzViYzAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEJhY2tib25lOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///29\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/@redux-saga/symbols/dist/redux-saga-symbols.esm.js\nvar redux_saga_symbols_esm = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(11);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(14);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/is/dist/redux-saga-is.esm.js\nvar redux_saga_is_esm = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/core/dist/io-6de156f3.js\nvar io_6de156f3 = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(10);\n\n// CONCATENATED MODULE: ./node_modules/@redux-saga/deferred/dist/redux-saga-deferred.esm.js\nfunction deferred() {\n  var def = {};\n  def.promise = new Promise(function (resolve, reject) {\n    def.resolve = resolve;\n    def.reject = reject;\n  });\n  return def;\n}\nfunction arrayOfDeferred(length) {\n  var arr = [];\n\n  for (var i = 0; i < length; i++) {\n    arr.push(deferred());\n  }\n\n  return arr;\n}\n\n/* harmony default export */ var redux_saga_deferred_esm = (deferred);\n\n\n// EXTERNAL MODULE: ./node_modules/@redux-saga/delay-p/dist/redux-saga-delay-p.esm.js\nvar redux_saga_delay_p_esm = __webpack_require__(25);\n\n// CONCATENATED MODULE: ./node_modules/@redux-saga/core/dist/redux-saga-core.esm.js\n\n\n\n\n\n\n\n\n\n\n\nvar redux_saga_core_esm_queue = [];\n/**\n  Variable to hold a counting semaphore\n  - Incrementing adds a lock and puts the scheduler in a `suspended` state (if it\'s not\n    already suspended)\n  - Decrementing releases a lock. Zero locks puts the scheduler in a `released` state. This\n    triggers flushing the queued tasks.\n**/\n\nvar semaphore = 0;\n/**\n  Executes a task \'atomically\'. Tasks scheduled during this execution will be queued\n  and flushed after this task has finished (assuming the scheduler endup in a released\n  state).\n**/\n\nfunction exec(task) {\n  try {\n    suspend();\n    task();\n  } finally {\n    release();\n  }\n}\n/**\n  Executes or queues a task depending on the state of the scheduler (`suspended` or `released`)\n**/\n\n\nfunction asap(task) {\n  redux_saga_core_esm_queue.push(task);\n\n  if (!semaphore) {\n    suspend();\n    redux_saga_core_esm_flush();\n  }\n}\n/**\n * Puts the scheduler in a `suspended` state and executes a task immediately.\n */\n\nfunction immediately(task) {\n  try {\n    suspend();\n    return task();\n  } finally {\n    redux_saga_core_esm_flush();\n  }\n}\n/**\n  Puts the scheduler in a `suspended` state. Scheduled tasks will be queued until the\n  scheduler is released.\n**/\n\nfunction suspend() {\n  semaphore++;\n}\n/**\n  Puts the scheduler in a `released` state.\n**/\n\n\nfunction release() {\n  semaphore--;\n}\n/**\n  Releases the current lock. Executes all queued tasks if the scheduler is in the released state.\n**/\n\n\nfunction redux_saga_core_esm_flush() {\n  release();\n  var task;\n\n  while (!semaphore && (task = redux_saga_core_esm_queue.shift()) !== undefined) {\n    exec(task);\n  }\n}\n\nvar array = function array(patterns) {\n  return function (input) {\n    return patterns.some(function (p) {\n      return redux_saga_core_esm_matcher(p)(input);\n    });\n  };\n};\nvar predicate = function predicate(_predicate) {\n  return function (input) {\n    return _predicate(input);\n  };\n};\nvar string = function string(pattern) {\n  return function (input) {\n    return input.type === String(pattern);\n  };\n};\nvar symbol = function symbol(pattern) {\n  return function (input) {\n    return input.type === pattern;\n  };\n};\nvar redux_saga_core_esm_wildcard = function wildcard() {\n  return io_6de156f3["G" /* k */];\n};\nfunction redux_saga_core_esm_matcher(pattern) {\n  // prettier-ignore\n  var matcherCreator = pattern === \'*\' ? redux_saga_core_esm_wildcard : Object(redux_saga_is_esm["k" /* string */])(pattern) ? string : Object(redux_saga_is_esm["a" /* array */])(pattern) ? array : Object(redux_saga_is_esm["l" /* stringableFunc */])(pattern) ? string : Object(redux_saga_is_esm["d" /* func */])(pattern) ? predicate : Object(redux_saga_is_esm["m" /* symbol */])(pattern) ? symbol : null;\n\n  if (matcherCreator === null) {\n    throw new Error("invalid pattern: " + pattern);\n  }\n\n  return matcherCreator(pattern);\n}\n\nvar END = {\n  type: redux_saga_symbols_esm["b" /* CHANNEL_END_TYPE */]\n};\nvar redux_saga_core_esm_isEnd = function isEnd(a) {\n  return a && a.type === redux_saga_symbols_esm["b" /* CHANNEL_END_TYPE */];\n};\nvar CLOSED_CHANNEL_WITH_TAKERS = \'Cannot have a closed channel with pending takers\';\nvar INVALID_BUFFER = \'invalid buffer passed to channel factory function\';\nvar UNDEFINED_INPUT_ERROR = "Saga or channel was provided with an undefined action\\nHints:\\n  - check that your Action Creator returns a non-undefined value\\n  - if the Saga was started using runSaga, check that your subscribe source provides the action to its listeners";\nfunction redux_saga_core_esm_channel(buffer$1) {\n  if (buffer$1 === void 0) {\n    buffer$1 = Object(io_6de156f3["A" /* e */])();\n  }\n\n  var closed = false;\n  var takers = [];\n\n  if (false) {}\n\n  function checkForbiddenStates() {\n    if (closed && takers.length) {\n      throw Object(io_6de156f3["E" /* i */])(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n\n    if (takers.length && !buffer$1.isEmpty()) {\n      throw Object(io_6de156f3["E" /* i */])(\'Cannot have pending takers with non empty buffer\');\n    }\n  }\n\n  function put(input) {\n    if (false) {}\n\n    if (closed) {\n      return;\n    }\n\n    if (takers.length === 0) {\n      return buffer$1.put(input);\n    }\n\n    var cb = takers.shift();\n    cb(input);\n  }\n\n  function take(cb) {\n    if (false) {}\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n    } else if (!buffer$1.isEmpty()) {\n      cb(buffer$1.take());\n    } else {\n      takers.push(cb);\n\n      cb.cancel = function () {\n        Object(io_6de156f3["N" /* r */])(takers, cb);\n      };\n    }\n  }\n\n  function flush(cb) {\n    if (false) {}\n\n    if (closed && buffer$1.isEmpty()) {\n      cb(END);\n      return;\n    }\n\n    cb(buffer$1.flush());\n  }\n\n  function close() {\n    if (false) {}\n\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n    var arr = takers;\n    takers = [];\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      var taker = arr[i];\n      taker(END);\n    }\n  }\n\n  return {\n    take: take,\n    put: put,\n    flush: flush,\n    close: close\n  };\n}\nfunction eventChannel(subscribe, buffer) {\n  if (buffer === void 0) {\n    buffer = Object(io_6de156f3["J" /* n */])();\n  }\n\n  var closed = false;\n  var unsubscribe;\n  var chan = redux_saga_core_esm_channel(buffer);\n\n  var close = function close() {\n    if (closed) {\n      return;\n    }\n\n    closed = true;\n\n    if (Object(redux_saga_is_esm["d" /* func */])(unsubscribe)) {\n      unsubscribe();\n    }\n\n    chan.close();\n  };\n\n  unsubscribe = subscribe(function (input) {\n    if (redux_saga_core_esm_isEnd(input)) {\n      close();\n      return;\n    }\n\n    chan.put(input);\n  });\n\n  if (false) {}\n\n  unsubscribe = Object(io_6de156f3["K" /* o */])(unsubscribe);\n\n  if (closed) {\n    unsubscribe();\n  }\n\n  return {\n    take: chan.take,\n    flush: chan.flush,\n    close: close\n  };\n}\nfunction multicastChannel() {\n  var _ref;\n\n  var closed = false;\n  var currentTakers = [];\n  var nextTakers = currentTakers;\n\n  function checkForbiddenStates() {\n    if (closed && nextTakers.length) {\n      throw Object(io_6de156f3["E" /* i */])(CLOSED_CHANNEL_WITH_TAKERS);\n    }\n  }\n\n  var ensureCanMutateNextTakers = function ensureCanMutateNextTakers() {\n    if (nextTakers !== currentTakers) {\n      return;\n    }\n\n    nextTakers = currentTakers.slice();\n  };\n\n  var close = function close() {\n    if (false) {}\n\n    closed = true;\n    var takers = currentTakers = nextTakers;\n    nextTakers = [];\n    takers.forEach(function (taker) {\n      taker(END);\n    });\n  };\n\n  return _ref = {}, _ref[redux_saga_symbols_esm["e" /* MULTICAST */]] = true, _ref.put = function put(input) {\n    if (false) {}\n\n    if (closed) {\n      return;\n    }\n\n    if (redux_saga_core_esm_isEnd(input)) {\n      close();\n      return;\n    }\n\n    var takers = currentTakers = nextTakers;\n\n    for (var i = 0, len = takers.length; i < len; i++) {\n      var taker = takers[i];\n\n      if (taker[redux_saga_symbols_esm["d" /* MATCH */]](input)) {\n        taker.cancel();\n        taker(input);\n      }\n    }\n  }, _ref.take = function take(cb, matcher) {\n    if (matcher === void 0) {\n      matcher = redux_saga_core_esm_wildcard;\n    }\n\n    if (false) {}\n\n    if (closed) {\n      cb(END);\n      return;\n    }\n\n    cb[redux_saga_symbols_esm["d" /* MATCH */]] = matcher;\n    ensureCanMutateNextTakers();\n    nextTakers.push(cb);\n    cb.cancel = Object(io_6de156f3["K" /* o */])(function () {\n      ensureCanMutateNextTakers();\n      Object(io_6de156f3["N" /* r */])(nextTakers, cb);\n    });\n  }, _ref.close = close, _ref;\n}\nfunction stdChannel() {\n  var chan = multicastChannel();\n  var put = chan.put;\n\n  chan.put = function (input) {\n    if (input[redux_saga_symbols_esm["f" /* SAGA_ACTION */]]) {\n      put(input);\n      return;\n    }\n\n    asap(function () {\n      put(input);\n    });\n  };\n\n  return chan;\n}\n\nvar RUNNING = 0;\nvar CANCELLED = 1;\nvar ABORTED = 2;\nvar DONE = 3;\n\nfunction resolvePromise(promise, cb) {\n  var cancelPromise = promise[redux_saga_symbols_esm["a" /* CANCEL */]];\n\n  if (Object(redux_saga_is_esm["d" /* func */])(cancelPromise)) {\n    cb.cancel = cancelPromise;\n  }\n\n  promise.then(cb, function (error) {\n    cb(error, true);\n  });\n}\n\nvar current = 0;\nvar nextSagaId = (function () {\n  return ++current;\n});\n\nvar _effectRunnerMap;\n\nfunction getIteratorMetaInfo(iterator, fn) {\n  if (iterator.isSagaIterator) {\n    return {\n      name: iterator.meta.name\n    };\n  }\n\n  return Object(io_6de156f3["F" /* j */])(fn);\n}\n\nfunction createTaskIterator(_ref) {\n  var context = _ref.context,\n      fn = _ref.fn,\n      args = _ref.args;\n\n  // catch synchronous failures; see #152 and #441\n  try {\n    var result = fn.apply(context, args); // i.e. a generator function returns an iterator\n\n    if (Object(redux_saga_is_esm["e" /* iterator */])(result)) {\n      return result;\n    }\n\n    var resolved = false;\n\n    var next = function next(arg) {\n      if (!resolved) {\n        resolved = true; // Only promises returned from fork will be interpreted. See #1573\n\n        return {\n          value: result,\n          done: !Object(redux_saga_is_esm["j" /* promise */])(result)\n        };\n      } else {\n        return {\n          value: arg,\n          done: true\n        };\n      }\n    };\n\n    return Object(io_6de156f3["M" /* q */])(next);\n  } catch (err) {\n    // do not bubble up synchronous failures for detached forks\n    // instead create a failed task. See #152 and #441\n    return Object(io_6de156f3["M" /* q */])(function () {\n      throw err;\n    });\n  }\n}\n\nfunction runPutEffect(env, _ref2, cb) {\n  var channel = _ref2.channel,\n      action = _ref2.action,\n      resolve = _ref2.resolve;\n\n  /**\n   Schedule the put in case another saga is holding a lock.\n   The put will be executed atomically. ie nested puts will execute after\n   this put has terminated.\n   **/\n  asap(function () {\n    var result;\n\n    try {\n      result = (channel ? channel.put : env.dispatch)(action);\n    } catch (error) {\n      cb(error, true);\n      return;\n    }\n\n    if (resolve && Object(redux_saga_is_esm["j" /* promise */])(result)) {\n      resolvePromise(result, cb);\n    } else {\n      cb(result);\n    }\n  }); // Put effects are non cancellables\n}\n\nfunction runTakeEffect(env, _ref3, cb) {\n  var _ref3$channel = _ref3.channel,\n      channel = _ref3$channel === void 0 ? env.channel : _ref3$channel,\n      pattern = _ref3.pattern,\n      maybe = _ref3.maybe;\n\n  var takeCb = function takeCb(input) {\n    if (input instanceof Error) {\n      cb(input, true);\n      return;\n    }\n\n    if (redux_saga_core_esm_isEnd(input) && !maybe) {\n      cb(redux_saga_symbols_esm["k" /* TERMINATE */]);\n      return;\n    }\n\n    cb(input);\n  };\n\n  try {\n    channel.take(takeCb, Object(redux_saga_is_esm["g" /* notUndef */])(pattern) ? redux_saga_core_esm_matcher(pattern) : null);\n  } catch (err) {\n    cb(err, true);\n    return;\n  }\n\n  cb.cancel = takeCb.cancel;\n}\n\nfunction runCallEffect(env, _ref4, cb, _ref5) {\n  var context = _ref4.context,\n      fn = _ref4.fn,\n      args = _ref4.args;\n  var task = _ref5.task;\n\n  // catch synchronous failures; see #152\n  try {\n    var result = fn.apply(context, args);\n\n    if (Object(redux_saga_is_esm["j" /* promise */])(result)) {\n      resolvePromise(result, cb);\n      return;\n    }\n\n    if (Object(redux_saga_is_esm["e" /* iterator */])(result)) {\n      // resolve iterator\n      proc(env, result, task.context, current, Object(io_6de156f3["F" /* j */])(fn),\n      /* isRoot */\n      false, cb);\n      return;\n    }\n\n    cb(result);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runCPSEffect(env, _ref6, cb) {\n  var context = _ref6.context,\n      fn = _ref6.fn,\n      args = _ref6.args;\n\n  // CPS (ie node style functions) can define their own cancellation logic\n  // by setting cancel field on the cb\n  // catch synchronous failures; see #152\n  try {\n    var cpsCb = function cpsCb(err, res) {\n      if (Object(redux_saga_is_esm["n" /* undef */])(err)) {\n        cb(res);\n      } else {\n        cb(err, true);\n      }\n    };\n\n    fn.apply(context, args.concat(cpsCb));\n\n    if (cpsCb.cancel) {\n      cb.cancel = cpsCb.cancel;\n    }\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runForkEffect(env, _ref7, cb, _ref8) {\n  var context = _ref7.context,\n      fn = _ref7.fn,\n      args = _ref7.args,\n      detached = _ref7.detached;\n  var parent = _ref8.task;\n  var taskIterator = createTaskIterator({\n    context: context,\n    fn: fn,\n    args: args\n  });\n  var meta = getIteratorMetaInfo(taskIterator, fn);\n  immediately(function () {\n    var child = proc(env, taskIterator, parent.context, current, meta, detached, undefined);\n\n    if (detached) {\n      cb(child);\n    } else {\n      if (child.isRunning()) {\n        parent.queue.addTask(child);\n        cb(child);\n      } else if (child.isAborted()) {\n        parent.queue.abort(child.error());\n      } else {\n        cb(child);\n      }\n    }\n  }); // Fork effects are non cancellables\n}\n\nfunction runJoinEffect(env, taskOrTasks, cb, _ref9) {\n  var task = _ref9.task;\n\n  var joinSingleTask = function joinSingleTask(taskToJoin, cb) {\n    if (taskToJoin.isRunning()) {\n      var joiner = {\n        task: task,\n        cb: cb\n      };\n\n      cb.cancel = function () {\n        if (taskToJoin.isRunning()) Object(io_6de156f3["N" /* r */])(taskToJoin.joiners, joiner);\n      };\n\n      taskToJoin.joiners.push(joiner);\n    } else {\n      if (taskToJoin.isAborted()) {\n        cb(taskToJoin.error(), true);\n      } else {\n        cb(taskToJoin.result());\n      }\n    }\n  };\n\n  if (Object(redux_saga_is_esm["a" /* array */])(taskOrTasks)) {\n    if (taskOrTasks.length === 0) {\n      cb([]);\n      return;\n    }\n\n    var childCallbacks = Object(io_6de156f3["H" /* l */])(taskOrTasks, cb);\n    taskOrTasks.forEach(function (t, i) {\n      joinSingleTask(t, childCallbacks[i]);\n    });\n  } else {\n    joinSingleTask(taskOrTasks, cb);\n  }\n}\n\nfunction cancelSingleTask(taskToCancel) {\n  if (taskToCancel.isRunning()) {\n    taskToCancel.cancel();\n  }\n}\n\nfunction runCancelEffect(env, taskOrTasks, cb, _ref10) {\n  var task = _ref10.task;\n\n  if (taskOrTasks === redux_saga_symbols_esm["h" /* SELF_CANCELLATION */]) {\n    cancelSingleTask(task);\n  } else if (Object(redux_saga_is_esm["a" /* array */])(taskOrTasks)) {\n    taskOrTasks.forEach(cancelSingleTask);\n  } else {\n    cancelSingleTask(taskOrTasks);\n  }\n\n  cb(); // cancel effects are non cancellables\n}\n\nfunction runAllEffect(env, effects, cb, _ref11) {\n  var digestEffect = _ref11.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n\n  if (keys.length === 0) {\n    cb(Object(redux_saga_is_esm["a" /* array */])(effects) ? [] : {});\n    return;\n  }\n\n  var childCallbacks = Object(io_6de156f3["H" /* l */])(effects, cb);\n  keys.forEach(function (key) {\n    digestEffect(effects[key], effectId, childCallbacks[key], key);\n  });\n}\n\nfunction runRaceEffect(env, effects, cb, _ref12) {\n  var digestEffect = _ref12.digestEffect;\n  var effectId = current;\n  var keys = Object.keys(effects);\n  var response = Object(redux_saga_is_esm["a" /* array */])(effects) ? Object(io_6de156f3["I" /* m */])(keys.length) : {};\n  var childCbs = {};\n  var completed = false;\n  keys.forEach(function (key) {\n    var chCbAtKey = function chCbAtKey(res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      if (isErr || Object(io_6de156f3["O" /* s */])(res)) {\n        // Race Auto cancellation\n        cb.cancel();\n        cb(res, isErr);\n      } else {\n        cb.cancel();\n        completed = true;\n        response[key] = res;\n        cb(response);\n      }\n    };\n\n    chCbAtKey.cancel = io_6de156f3["P" /* t */];\n    childCbs[key] = chCbAtKey;\n  });\n\n  cb.cancel = function () {\n    // prevents unnecessary cancellation\n    if (!completed) {\n      completed = true;\n      keys.forEach(function (key) {\n        return childCbs[key].cancel();\n      });\n    }\n  };\n\n  keys.forEach(function (key) {\n    if (completed) {\n      return;\n    }\n\n    digestEffect(effects[key], effectId, childCbs[key], key);\n  });\n}\n\nfunction runSelectEffect(env, _ref13, cb) {\n  var selector = _ref13.selector,\n      args = _ref13.args;\n\n  try {\n    var state = selector.apply(void 0, [env.getState()].concat(args));\n    cb(state);\n  } catch (error) {\n    cb(error, true);\n  }\n}\n\nfunction runChannelEffect(env, _ref14, cb) {\n  var pattern = _ref14.pattern,\n      buffer = _ref14.buffer;\n  var chan = redux_saga_core_esm_channel(buffer);\n  var match = redux_saga_core_esm_matcher(pattern);\n\n  var taker = function taker(action) {\n    if (!redux_saga_core_esm_isEnd(action)) {\n      env.channel.take(taker, match);\n    }\n\n    chan.put(action);\n  };\n\n  var close = chan.close;\n\n  chan.close = function () {\n    taker.cancel();\n    close();\n  };\n\n  env.channel.take(taker, match);\n  cb(chan);\n}\n\nfunction runCancelledEffect(env, data, cb, _ref15) {\n  var task = _ref15.task;\n  cb(task.isCancelled());\n}\n\nfunction runFlushEffect(env, channel, cb) {\n  channel.flush(cb);\n}\n\nfunction runGetContextEffect(env, prop, cb, _ref16) {\n  var task = _ref16.task;\n  cb(task.context[prop]);\n}\n\nfunction runSetContextEffect(env, props, cb, _ref17) {\n  var task = _ref17.task;\n  Object(io_6de156f3["L" /* p */])(task.context, props);\n  cb();\n}\n\nvar effectRunnerMap = (_effectRunnerMap = {}, _effectRunnerMap[io_6de156f3["r" /* T */]] = runTakeEffect, _effectRunnerMap[io_6de156f3["n" /* P */]] = runPutEffect, _effectRunnerMap[io_6de156f3["a" /* A */]] = runAllEffect, _effectRunnerMap[io_6de156f3["p" /* R */]] = runRaceEffect, _effectRunnerMap[io_6de156f3["c" /* C */]] = runCallEffect, _effectRunnerMap[io_6de156f3["v" /* a */]] = runCPSEffect, _effectRunnerMap[io_6de156f3["f" /* F */]] = runForkEffect, _effectRunnerMap[io_6de156f3["h" /* J */]] = runJoinEffect, _effectRunnerMap[io_6de156f3["x" /* b */]] = runCancelEffect, _effectRunnerMap[io_6de156f3["q" /* S */]] = runSelectEffect, _effectRunnerMap[io_6de156f3["z" /* d */]] = runChannelEffect, _effectRunnerMap[io_6de156f3["B" /* f */]] = runCancelledEffect, _effectRunnerMap[io_6de156f3["C" /* g */]] = runFlushEffect, _effectRunnerMap[io_6de156f3["g" /* G */]] = runGetContextEffect, _effectRunnerMap[io_6de156f3["D" /* h */]] = runSetContextEffect, _effectRunnerMap);\n\n/**\n Used to track a parent task and its forks\n In the fork model, forked tasks are attached by default to their parent\n We model this using the concept of Parent task && main Task\n main task is the main flow of the current Generator, the parent tasks is the\n aggregation of the main tasks + all its forked tasks.\n Thus the whole model represents an execution tree with multiple branches (vs the\n linear execution tree in sequential (non parallel) programming)\n\n A parent tasks has the following semantics\n - It completes if all its forks either complete or all cancelled\n - If it\'s cancelled, all forks are cancelled as well\n - It aborts if any uncaught error bubbles up from forks\n - If it completes, the return value is the one returned by the main task\n **/\n\nfunction forkQueue(mainTask, onAbort, cont) {\n  var tasks = [];\n  var result;\n  var completed = false;\n  addTask(mainTask);\n\n  var getTasks = function getTasks() {\n    return tasks;\n  };\n\n  function abort(err) {\n    onAbort();\n    cancelAll();\n    cont(err, true);\n  }\n\n  function addTask(task) {\n    tasks.push(task);\n\n    task.cont = function (res, isErr) {\n      if (completed) {\n        return;\n      }\n\n      Object(io_6de156f3["N" /* r */])(tasks, task);\n      task.cont = io_6de156f3["P" /* t */];\n\n      if (isErr) {\n        abort(res);\n      } else {\n        if (task === mainTask) {\n          result = res;\n        }\n\n        if (!tasks.length) {\n          completed = true;\n          cont(result);\n        }\n      }\n    };\n  }\n\n  function cancelAll() {\n    if (completed) {\n      return;\n    }\n\n    completed = true;\n    tasks.forEach(function (t) {\n      t.cont = io_6de156f3["P" /* t */];\n      t.cancel();\n    });\n    tasks = [];\n  }\n\n  return {\n    addTask: addTask,\n    cancelAll: cancelAll,\n    abort: abort,\n    getTasks: getTasks\n  };\n}\n\n// there can be only a single saga error created at any given moment\n\nfunction formatLocation(fileName, lineNumber) {\n  return fileName + "?" + lineNumber;\n}\n\nfunction effectLocationAsString(effect) {\n  var location = Object(io_6de156f3["R" /* v */])(effect);\n\n  if (location) {\n    var code = location.code,\n        fileName = location.fileName,\n        lineNumber = location.lineNumber;\n    var source = code + "  " + formatLocation(fileName, lineNumber);\n    return source;\n  }\n\n  return \'\';\n}\n\nfunction sagaLocationAsString(sagaMeta) {\n  var name = sagaMeta.name,\n      location = sagaMeta.location;\n\n  if (location) {\n    return name + "  " + formatLocation(location.fileName, location.lineNumber);\n  }\n\n  return name;\n}\n\nfunction cancelledTasksAsString(sagaStack) {\n  var cancelledTasks = Object(io_6de156f3["Q" /* u */])(function (i) {\n    return i.cancelledTasks;\n  }, sagaStack);\n\n  if (!cancelledTasks.length) {\n    return \'\';\n  }\n\n  return [\'Tasks cancelled due to error:\'].concat(cancelledTasks).join(\'\\n\');\n}\n\nvar crashedEffect = null;\nvar redux_saga_core_esm_sagaStack = [];\nvar addSagaFrame = function addSagaFrame(frame) {\n  frame.crashedEffect = crashedEffect;\n  redux_saga_core_esm_sagaStack.push(frame);\n};\nvar clear = function clear() {\n  crashedEffect = null;\n  redux_saga_core_esm_sagaStack.length = 0;\n}; // this sets crashed effect for the soon-to-be-reported saga frame\n// this slightly streatches the singleton nature of this module into wrong direction\n// as it\'s even less obvious what\'s the data flow here, but it is what it is for now\n\nvar setCrashedEffect = function setCrashedEffect(effect) {\n  crashedEffect = effect;\n};\n/**\n  @returns {string}\n\n  @example\n  The above error occurred in task errorInPutSaga {pathToFile}\n  when executing effect put({type: \'REDUCER_ACTION_ERROR_IN_PUT\'}) {pathToFile}\n      created by fetchSaga {pathToFile}\n      created by rootSaga {pathToFile}\n*/\n\nvar redux_saga_core_esm_toString = function toString() {\n  var firstSaga = redux_saga_core_esm_sagaStack[0],\n      otherSagas = redux_saga_core_esm_sagaStack.slice(1);\n  var crashedEffectLocation = firstSaga.crashedEffect ? effectLocationAsString(firstSaga.crashedEffect) : null;\n  var errorMessage = "The above error occurred in task " + sagaLocationAsString(firstSaga.meta) + (crashedEffectLocation ? " \\n when executing effect " + crashedEffectLocation : \'\');\n  return [errorMessage].concat(otherSagas.map(function (s) {\n    return "    created by " + sagaLocationAsString(s.meta);\n  }), [cancelledTasksAsString(redux_saga_core_esm_sagaStack)]).join(\'\\n\');\n};\n\nfunction newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont) {\n  var _task;\n\n  if (cont === void 0) {\n    cont = io_6de156f3["P" /* t */];\n  }\n\n  var status = RUNNING;\n  var taskResult;\n  var taskError;\n  var deferredEnd = null;\n  var cancelledDueToErrorTasks = [];\n  var context = Object.create(parentContext);\n  var queue = forkQueue(mainTask, function onAbort() {\n    cancelledDueToErrorTasks.push.apply(cancelledDueToErrorTasks, queue.getTasks().map(function (t) {\n      return t.meta.name;\n    }));\n  }, end);\n  /**\n   This may be called by a parent generator to trigger/propagate cancellation\n   cancel all pending tasks (including the main task), then end the current task.\n    Cancellation propagates down to the whole execution tree held by this Parent task\n   It\'s also propagated to all joiners of this task and their execution tree/joiners\n    Cancellation is noop for terminated/Cancelled tasks tasks\n   **/\n\n  function cancel() {\n    if (status === RUNNING) {\n      // Setting status to CANCELLED does not necessarily mean that the task/iterators are stopped\n      // effects in the iterator\'s finally block will still be executed\n      status = CANCELLED;\n      queue.cancelAll(); // Ending with a TASK_CANCEL will propagate the Cancellation to all joiners\n\n      end(redux_saga_symbols_esm["j" /* TASK_CANCEL */], false);\n    }\n  }\n\n  function end(result, isErr) {\n    if (!isErr) {\n      // The status here may be RUNNING or CANCELLED\n      // If the status is CANCELLED, then we do not need to change it here\n      if (result === redux_saga_symbols_esm["j" /* TASK_CANCEL */]) {\n        status = CANCELLED;\n      } else if (status !== CANCELLED) {\n        status = DONE;\n      }\n\n      taskResult = result;\n      deferredEnd && deferredEnd.resolve(result);\n    } else {\n      status = ABORTED;\n      addSagaFrame({\n        meta: meta,\n        cancelledTasks: cancelledDueToErrorTasks\n      });\n\n      if (task.isRoot) {\n        var sagaStack = redux_saga_core_esm_toString(); // we\'ve dumped the saga stack to string and are passing it to user\'s code\n        // we know that it won\'t be needed anymore and we need to clear it\n\n        clear();\n        env.onError(result, {\n          sagaStack: sagaStack\n        });\n      }\n\n      taskError = result;\n      deferredEnd && deferredEnd.reject(result);\n    }\n\n    task.cont(result, isErr);\n    task.joiners.forEach(function (joiner) {\n      joiner.cb(result, isErr);\n    });\n    task.joiners = null;\n  }\n\n  function setContext(props) {\n    if (false) {}\n\n    Object(io_6de156f3["L" /* p */])(context, props);\n  }\n\n  function toPromise() {\n    if (deferredEnd) {\n      return deferredEnd.promise;\n    }\n\n    deferredEnd = redux_saga_deferred_esm();\n\n    if (status === ABORTED) {\n      deferredEnd.reject(taskError);\n    } else if (status !== RUNNING) {\n      deferredEnd.resolve(taskResult);\n    }\n\n    return deferredEnd.promise;\n  }\n\n  var task = (_task = {}, _task[redux_saga_symbols_esm["i" /* TASK */]] = true, _task.id = parentEffectId, _task.meta = meta, _task.isRoot = isRoot, _task.context = context, _task.joiners = [], _task.queue = queue, _task.cancel = cancel, _task.cont = cont, _task.end = end, _task.setContext = setContext, _task.toPromise = toPromise, _task.isRunning = function isRunning() {\n    return status === RUNNING;\n  }, _task.isCancelled = function isCancelled() {\n    return status === CANCELLED || status === RUNNING && mainTask.status === CANCELLED;\n  }, _task.isAborted = function isAborted() {\n    return status === ABORTED;\n  }, _task.result = function result() {\n    return taskResult;\n  }, _task.error = function error() {\n    return taskError;\n  }, _task);\n  return task;\n}\n\nfunction proc(env, iterator$1, parentContext, parentEffectId, meta, isRoot, cont) {\n  if (false) {}\n\n  var finalRunEffect = env.finalizeRunEffect(runEffect);\n  /**\n    Tracks the current effect cancellation\n    Each time the generator progresses. calling runEffect will set a new value\n    on it. It allows propagating cancellation to child effects\n  **/\n\n  next.cancel = io_6de156f3["P" /* t */];\n  /** Creates a main task to track the main flow */\n\n  var mainTask = {\n    meta: meta,\n    cancel: cancelMain,\n    status: RUNNING\n  };\n  /**\n   Creates a new task descriptor for this generator.\n   A task is the aggregation of it\'s mainTask and all it\'s forked tasks.\n   **/\n\n  var task = newTask(env, mainTask, parentContext, parentEffectId, meta, isRoot, cont);\n  var executingContext = {\n    task: task,\n    digestEffect: digestEffect\n  };\n  /**\n    cancellation of the main task. We\'ll simply resume the Generator with a TASK_CANCEL\n  **/\n\n  function cancelMain() {\n    if (mainTask.status === RUNNING) {\n      mainTask.status = CANCELLED;\n      next(redux_saga_symbols_esm["j" /* TASK_CANCEL */]);\n    }\n  }\n  /**\n    attaches cancellation logic to this task\'s continuation\n    this will permit cancellation to propagate down the call chain\n  **/\n\n\n  if (cont) {\n    cont.cancel = task.cancel;\n  } // kicks up the generator\n\n\n  next(); // then return the task descriptor to the caller\n\n  return task;\n  /**\n   * This is the generator driver\n   * It\'s a recursive async/continuation function which calls itself\n   * until the generator terminates or throws\n   * @param {internal commands(TASK_CANCEL | TERMINATE) | any} arg - value, generator will be resumed with.\n   * @param {boolean} isErr - the flag shows if effect finished with an error\n   *\n   * receives either (command | effect result, false) or (any thrown thing, true)\n   */\n\n  function next(arg, isErr) {\n    try {\n      var result;\n\n      if (isErr) {\n        result = iterator$1.throw(arg); // user handled the error, we can clear bookkept values\n\n        clear();\n      } else if (Object(io_6de156f3["S" /* y */])(arg)) {\n        /**\n          getting TASK_CANCEL automatically cancels the main task\n          We can get this value here\n           - By cancelling the parent task manually\n          - By joining a Cancelled task\n        **/\n        mainTask.status = CANCELLED;\n        /**\n          Cancels the current effect; this will propagate the cancellation down to any called tasks\n        **/\n\n        next.cancel();\n        /**\n          If this Generator has a `return` method then invokes it\n          This will jump to the finally block\n        **/\n\n        result = Object(redux_saga_is_esm["d" /* func */])(iterator$1.return) ? iterator$1.return(redux_saga_symbols_esm["j" /* TASK_CANCEL */]) : {\n          done: true,\n          value: redux_saga_symbols_esm["j" /* TASK_CANCEL */]\n        };\n      } else if (Object(io_6de156f3["T" /* z */])(arg)) {\n        // We get TERMINATE flag, i.e. by taking from a channel that ended using `take` (and not `takem` used to trap End of channels)\n        result = Object(redux_saga_is_esm["d" /* func */])(iterator$1.return) ? iterator$1.return() : {\n          done: true\n        };\n      } else {\n        result = iterator$1.next(arg);\n      }\n\n      if (!result.done) {\n        digestEffect(result.value, parentEffectId, next);\n      } else {\n        /**\n          This Generator has ended, terminate the main task and notify the fork queue\n        **/\n        if (mainTask.status !== CANCELLED) {\n          mainTask.status = DONE;\n        }\n\n        mainTask.cont(result.value);\n      }\n    } catch (error) {\n      if (mainTask.status === CANCELLED) {\n        throw error;\n      }\n\n      mainTask.status = ABORTED;\n      mainTask.cont(error, true);\n    }\n  }\n\n  function runEffect(effect, effectId, currCb) {\n    /**\n      each effect runner must attach its own logic of cancellation to the provided callback\n      it allows this generator to propagate cancellation downward.\n       ATTENTION! effect runners must setup the cancel logic by setting cb.cancel = [cancelMethod]\n      And the setup must occur before calling the callback\n       This is a sort of inversion of control: called async functions are responsible\n      of completing the flow by calling the provided continuation; while caller functions\n      are responsible for aborting the current flow by calling the attached cancel function\n       Library users can attach their own cancellation logic to promises by defining a\n      promise[CANCEL] method in their returned promises\n      ATTENTION! calling cancel must have no effect on an already completed or cancelled effect\n    **/\n    if (Object(redux_saga_is_esm["j" /* promise */])(effect)) {\n      resolvePromise(effect, currCb);\n    } else if (Object(redux_saga_is_esm["e" /* iterator */])(effect)) {\n      // resolve iterator\n      proc(env, effect, task.context, effectId, meta,\n      /* isRoot */\n      false, currCb);\n    } else if (effect && effect[redux_saga_symbols_esm["c" /* IO */]]) {\n      var effectRunner = effectRunnerMap[effect.type];\n      effectRunner(env, effect.payload, currCb, executingContext);\n    } else {\n      // anything else returned as is\n      currCb(effect);\n    }\n  }\n\n  function digestEffect(effect, parentEffectId, cb, label) {\n    if (label === void 0) {\n      label = \'\';\n    }\n\n    var effectId = nextSagaId();\n    env.sagaMonitor && env.sagaMonitor.effectTriggered({\n      effectId: effectId,\n      parentEffectId: parentEffectId,\n      label: label,\n      effect: effect\n    });\n    /**\n      completion callback and cancel callback are mutually exclusive\n      We can\'t cancel an already completed effect\n      And We can\'t complete an already cancelled effectId\n    **/\n\n    var effectSettled; // Completion callback passed to the appropriate effect runner\n\n    function currCb(res, isErr) {\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      cb.cancel = io_6de156f3["P" /* t */]; // defensive measure\n\n      if (env.sagaMonitor) {\n        if (isErr) {\n          env.sagaMonitor.effectRejected(effectId, res);\n        } else {\n          env.sagaMonitor.effectResolved(effectId, res);\n        }\n      }\n\n      if (isErr) {\n        setCrashedEffect(effect);\n      }\n\n      cb(res, isErr);\n    } // tracks down the current cancel\n\n\n    currCb.cancel = io_6de156f3["P" /* t */]; // setup cancellation logic on the parent cb\n\n    cb.cancel = function () {\n      // prevents cancelling an already completed effect\n      if (effectSettled) {\n        return;\n      }\n\n      effectSettled = true;\n      currCb.cancel(); // propagates cancel downward\n\n      currCb.cancel = io_6de156f3["P" /* t */]; // defensive measure\n\n      env.sagaMonitor && env.sagaMonitor.effectCancelled(effectId);\n    };\n\n    finalRunEffect(effect, effectId, currCb);\n  }\n}\n\nvar RUN_SAGA_SIGNATURE = \'runSaga(options, saga, ...args)\';\nvar NON_GENERATOR_ERR = RUN_SAGA_SIGNATURE + ": saga argument must be a Generator function!";\nfunction runSaga(_ref, saga) {\n  var _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      dispatch = _ref.dispatch,\n      getState = _ref.getState,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      sagaMonitor = _ref.sagaMonitor,\n      effectMiddlewares = _ref.effectMiddlewares,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? io_6de156f3["b" /* B */] : _ref$onError;\n\n  if (false) {}\n\n  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var iterator$1 = saga.apply(void 0, args);\n\n  if (false) {}\n\n  var effectId = nextSagaId();\n\n  if (sagaMonitor) {\n    // monitors are expected to have a certain interface, let\'s fill-in any missing ones\n    sagaMonitor.rootSagaStarted = sagaMonitor.rootSagaStarted || io_6de156f3["P" /* t */];\n    sagaMonitor.effectTriggered = sagaMonitor.effectTriggered || io_6de156f3["P" /* t */];\n    sagaMonitor.effectResolved = sagaMonitor.effectResolved || io_6de156f3["P" /* t */];\n    sagaMonitor.effectRejected = sagaMonitor.effectRejected || io_6de156f3["P" /* t */];\n    sagaMonitor.effectCancelled = sagaMonitor.effectCancelled || io_6de156f3["P" /* t */];\n    sagaMonitor.actionDispatched = sagaMonitor.actionDispatched || io_6de156f3["P" /* t */];\n    sagaMonitor.rootSagaStarted({\n      effectId: effectId,\n      saga: saga,\n      args: args\n    });\n  }\n\n  if (false) { var MIDDLEWARE_TYPE_ERROR; }\n\n  var finalizeRunEffect;\n\n  if (effectMiddlewares) {\n    var middleware = redux["compose"].apply(void 0, effectMiddlewares);\n\n    finalizeRunEffect = function finalizeRunEffect(runEffect) {\n      return function (effect, effectId, currCb) {\n        var plainRunEffect = function plainRunEffect(eff) {\n          return runEffect(eff, effectId, currCb);\n        };\n\n        return middleware(plainRunEffect)(effect);\n      };\n    };\n  } else {\n    finalizeRunEffect = io_6de156f3["e" /* E */];\n  }\n\n  var env = {\n    channel: channel,\n    dispatch: Object(io_6de156f3["d" /* D */])(dispatch),\n    getState: getState,\n    sagaMonitor: sagaMonitor,\n    onError: onError,\n    finalizeRunEffect: finalizeRunEffect\n  };\n  return immediately(function () {\n    var task = proc(env, iterator$1, context, effectId, Object(io_6de156f3["F" /* j */])(saga),\n    /* isRoot */\n    true, undefined);\n\n    if (sagaMonitor) {\n      sagaMonitor.effectResolved(effectId, task);\n    }\n\n    return task;\n  });\n}\n\nfunction sagaMiddlewareFactory(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$context = _ref.context,\n      context = _ref$context === void 0 ? {} : _ref$context,\n      _ref$channel = _ref.channel,\n      channel = _ref$channel === void 0 ? stdChannel() : _ref$channel,\n      sagaMonitor = _ref.sagaMonitor,\n      options = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref, ["context", "channel", "sagaMonitor"]);\n\n  var boundRunSaga;\n\n  if (false) {}\n\n  function sagaMiddleware(_ref2) {\n    var getState = _ref2.getState,\n        dispatch = _ref2.dispatch;\n    boundRunSaga = runSaga.bind(null, Object(esm_extends["a" /* default */])({}, options, {\n      context: context,\n      channel: channel,\n      dispatch: dispatch,\n      getState: getState,\n      sagaMonitor: sagaMonitor\n    }));\n    return function (next) {\n      return function (action) {\n        if (sagaMonitor && sagaMonitor.actionDispatched) {\n          sagaMonitor.actionDispatched(action);\n        }\n\n        var result = next(action); // hit reducers\n\n        channel.put(action);\n        return result;\n      };\n    };\n  }\n\n  sagaMiddleware.run = function () {\n    if (false) {}\n\n    return boundRunSaga.apply(void 0, arguments);\n  };\n\n  sagaMiddleware.setContext = function (props) {\n    if (false) {}\n\n    Object(io_6de156f3["L" /* p */])(context, props);\n  };\n\n  return sagaMiddleware;\n}\n\n/* harmony default export */ var redux_saga_core_esm = (sagaMiddlewareFactory);\n\n\n// CONCATENATED MODULE: ./node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js\n/* unused concated harmony import CANCEL */\n/* unused concated harmony import SAGA_LOCATION */\n/* unused concated harmony import buffers */\n/* unused concated harmony import detach */\n/* unused concated harmony import END */\n/* unused concated harmony import channel */\n/* concated harmony reexport eventChannel */__webpack_require__.d(__webpack_exports__, "b", function() { return eventChannel; });\n/* unused concated harmony import isEnd */\n/* unused concated harmony import multicastChannel */\n/* unused concated harmony import runSaga */\n/* unused concated harmony import stdChannel */\n\n\n\n\n\n/* harmony default export */ var redux_saga_core_npm_proxy_esm = __webpack_exports__["a"] = (redux_saga_core_esm);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///30\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(40);\n/* global window */\n\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {}\n\nvar result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(root);\n/* harmony default export */ __webpack_exports__[\"a\"] = (result);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(22), __webpack_require__(55)(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvaW5kZXguanM/NmMyMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ3FDOztBQUVyQzs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQyxVQUFVLElBQTZCO0FBQ3hDO0FBQ0EsQ0FBQyxNQUFNLEVBRU47O0FBRUQsYUFBYSxvRUFBUTtBQUNOLCtEQUFNLEVBQUMiLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgd2luZG93ICovXG5pbXBvcnQgcG9ueWZpbGwgZnJvbSAnLi9wb255ZmlsbC5qcyc7XG5cbnZhciByb290O1xuXG5pZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBzZWxmO1xufSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gd2luZG93O1xufSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gZ2xvYmFsO1xufSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gbW9kdWxlO1xufSBlbHNlIHtcbiAgcm9vdCA9IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG59XG5cbnZhciByZXN1bHQgPSBwb255ZmlsbChyb290KTtcbmV4cG9ydCBkZWZhdWx0IHJlc3VsdDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///31\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./node_modules/immer/dist/immer.module.js\nvar immer_module = __webpack_require__(36);\n\n// CONCATENATED MODULE: ./node_modules/@reduxjs/toolkit/node_modules/reselect/es/index.js\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}\n// EXTERNAL MODULE: ./node_modules/redux-devtools-extension/index.js\nvar redux_devtools_extension = __webpack_require__(51);\n\n// EXTERNAL MODULE: ./node_modules/redux-thunk/es/index.js\nvar es = __webpack_require__(37);\n\n// EXTERNAL MODULE: ./node_modules/redux-immutable-state-invariant/dist/index.js\nvar dist = __webpack_require__(63);\n\n// CONCATENATED MODULE: ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\n/* unused harmony export configureStore */\n/* unused harmony export createAction */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createReducer; });\n/* unused harmony export createSerializableStateInvariantMiddleware */\n/* unused harmony export createSlice */\n/* unused harmony export findNonSerializableValue */\n/* unused harmony export getDefaultMiddleware */\n/* unused harmony export getType */\n/* unused harmony export isPlain */\n/* unused concated harmony import __DO_NOT_USE__ActionTypes */\n/* unused concated harmony import applyMiddleware */\n/* unused concated harmony import bindActionCreators */\n/* unused concated harmony import combineReducers */\n/* unused concated harmony import compose */\n/* unused concated harmony import createStore */\n/* unused concated harmony import createNextState */\n/* unused concated harmony import createSelector */\n\n\n\n\n\n\n\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * protoype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\nfunction isPlainObject(value) {\n  if (typeof value !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n}\n\n/**\r\n * Returns true if the passed value is \"plain\", i.e. a value that is either\r\n * directly JSON-serializable (boolean, number, string, array, plain object)\r\n * or `undefined`.\r\n *\r\n * @param val The value to check.\r\n *\r\n * @public\r\n */\n\nfunction isPlain(val) {\n  return typeof val === 'undefined' || val === null || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val) || isPlainObject(val);\n}\n/**\r\n * @public\r\n */\n\nfunction findNonSerializableValue(value, path, isSerializable, getEntries) {\n  if (path === void 0) {\n    path = [];\n  }\n\n  if (isSerializable === void 0) {\n    isSerializable = isPlain;\n  }\n\n  var foundNestedSerializable;\n\n  if (!isSerializable(value)) {\n    return {\n      keyPath: path.join('.') || '<root>',\n      value: value\n    };\n  }\n\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n\n  var entries = getEntries != null ? getEntries(value) : Object.entries(value);\n\n  for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        property = _ref2[0],\n        nestedValue = _ref2[1];\n    var nestedPath = path.concat(property);\n\n    if (!isSerializable(nestedValue)) {\n      return {\n        keyPath: nestedPath.join('.'),\n        value: nestedValue\n      };\n    }\n\n    if (typeof nestedValue === 'object') {\n      foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries);\n\n      if (foundNestedSerializable) {\n        return foundNestedSerializable;\n      }\n    }\n  }\n\n  return false;\n}\n/**\r\n * Creates a middleware that, after every state change, checks if the new\r\n * state is serializable. If a non-serializable value is found within the\r\n * state, an error is printed to the console.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\n\nfunction createSerializableStateInvariantMiddleware(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$isSerializab = _options.isSerializable,\n      isSerializable = _options$isSerializab === void 0 ? isPlain : _options$isSerializab,\n      getEntries = _options.getEntries,\n      _options$ignoredActio = _options.ignoredActions,\n      ignoredActions = _options$ignoredActio === void 0 ? [] : _options$ignoredActio;\n  return function (storeAPI) {\n    return function (next) {\n      return function (action) {\n        if (ignoredActions.length && ignoredActions.indexOf(action.type) !== -1) {\n          return next(action);\n        }\n\n        var foundActionNonSerializableValue = findNonSerializableValue(action, [], isSerializable, getEntries);\n\n        if (foundActionNonSerializableValue) {\n          var keyPath = foundActionNonSerializableValue.keyPath,\n              value = foundActionNonSerializableValue.value;\n          console.error(\"A non-serializable value was detected in an action, in the path: `\" + keyPath + \"`. Value:\", value, '\\nTake a look at the logic that dispatched this action: ', action, '\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)');\n        }\n\n        var result = next(action);\n        var state = storeAPI.getState();\n        var foundStateNonSerializableValue = findNonSerializableValue(state, [], isSerializable, getEntries);\n\n        if (foundStateNonSerializableValue) {\n          var _keyPath = foundStateNonSerializableValue.keyPath,\n              _value = foundStateNonSerializableValue.value;\n          console.error(\"A non-serializable value was detected in the state, in the path: `\" + _keyPath + \"`. Value:\", _value, \"\\nTake a look at the reducer(s) handling this action type: \" + action.type + \".\\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)\");\n        }\n\n        return result;\n      };\n    };\n  };\n}\n\nfunction isBoolean(x) {\n  return typeof x === 'boolean';\n}\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n *\r\n * @public\r\n */\n\n\nfunction getDefaultMiddleware(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$thunk = _options.thunk,\n      thunk = _options$thunk === void 0 ? true : _options$thunk,\n      _options$immutableChe = _options.immutableCheck,\n      immutableCheck = _options$immutableChe === void 0 ? true : _options$immutableChe,\n      _options$serializable = _options.serializableCheck,\n      serializableCheck = _options$serializable === void 0 ? true : _options$serializable;\n  var middlewareArray = [];\n\n  if (thunk) {\n    if (isBoolean(thunk)) {\n      middlewareArray.push(es[\"a\" /* default */]);\n    } else {\n      middlewareArray.push(es[\"a\" /* default */].withExtraArgument(thunk.extraArgument));\n    }\n  }\n\n  if (false) { var serializableOptions, immutableOptions; }\n\n  return middlewareArray;\n}\n\nvar IS_PRODUCTION = \"production\" === 'production';\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param config The store configuration.\r\n * @returns A configured Redux store.\r\n *\r\n * @public\r\n */\n\nfunction configureStore(options) {\n  var _ref = options || {},\n      _ref$reducer = _ref.reducer,\n      reducer = _ref$reducer === void 0 ? undefined : _ref$reducer,\n      _ref$middleware = _ref.middleware,\n      middleware = _ref$middleware === void 0 ? getDefaultMiddleware() : _ref$middleware,\n      _ref$devTools = _ref.devTools,\n      devTools = _ref$devTools === void 0 ? true : _ref$devTools,\n      _ref$preloadedState = _ref.preloadedState,\n      preloadedState = _ref$preloadedState === void 0 ? undefined : _ref$preloadedState,\n      _ref$enhancers = _ref.enhancers,\n      enhancers = _ref$enhancers === void 0 ? undefined : _ref$enhancers;\n\n  var rootReducer;\n\n  if (typeof reducer === 'function') {\n    rootReducer = reducer;\n  } else if (isPlainObject(reducer)) {\n    rootReducer = Object(redux[\"combineReducers\"])(reducer);\n  } else {\n    throw new Error('\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');\n  }\n\n  var middlewareEnhancer = redux[\"applyMiddleware\"].apply(void 0, middleware);\n  var finalCompose = redux[\"compose\"];\n\n  if (devTools) {\n    finalCompose = Object(redux_devtools_extension[\"composeWithDevTools\"])(_extends({\n      // Enable capture of stack traces for dispatched Redux actions\n      trace: !IS_PRODUCTION\n    }, typeof devTools === 'object' && devTools));\n  }\n\n  var storeEnhancers = [middlewareEnhancer];\n\n  if (Array.isArray(enhancers)) {\n    storeEnhancers = [middlewareEnhancer].concat(enhancers);\n  } else if (typeof enhancers === 'function') {\n    storeEnhancers = enhancers(storeEnhancers);\n  }\n\n  var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);\n  return Object(redux[\"createStore\"])(rootReducer, preloadedState, composedEnhancer);\n}\n\nfunction createAction(type, prepareAction) {\n  function actionCreator() {\n    if (prepareAction) {\n      var prepared = prepareAction.apply(void 0, arguments);\n\n      if (!prepared) {\n        throw new Error('prepareAction did not return an object');\n      }\n\n      return _extends({\n        type: type,\n        payload: prepared.payload\n      }, 'meta' in prepared && {\n        meta: prepared.meta\n      }, {}, 'error' in prepared && {\n        error: prepared.error\n      });\n    }\n\n    return {\n      type: type,\n      payload: arguments.length <= 0 ? undefined : arguments[0]\n    };\n  }\n\n  actionCreator.toString = function () {\n    return \"\" + type;\n  };\n\n  actionCreator.type = type;\n\n  actionCreator.match = function (action) {\n    return action.type === type;\n  };\n\n  return actionCreator;\n}\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n *\r\n * @public\r\n */\n\nfunction getType(actionCreator) {\n  return \"\" + actionCreator;\n}\n\nfunction executeReducerBuilderCallback(builderCallback) {\n  var actionsMap = {};\n  var builder = {\n    addCase: function addCase(typeOrActionCreator, reducer) {\n      var type = typeof typeOrActionCreator === 'string' ? typeOrActionCreator : typeOrActionCreator.type;\n\n      if (type in actionsMap) {\n        throw new Error('addCase cannot be called with two reducers for the same action type');\n      }\n\n      actionsMap[type] = reducer;\n      return builder;\n    }\n  };\n  builderCallback(builder);\n  return actionsMap;\n}\n\nfunction createReducer(initialState, mapOrBuilderCallback) {\n  var actionsMap = typeof mapOrBuilderCallback === 'function' ? executeReducerBuilderCallback(mapOrBuilderCallback) : mapOrBuilderCallback;\n  return function (state, action) {\n    if (state === void 0) {\n      state = initialState;\n    }\n\n    // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\n    // than an Immutable<S>, and TypeScript cannot find out how to reconcile\n    // these two types.\n    return Object(immer_module[\"a\" /* default */])(state, function (draft) {\n      var caseReducer = actionsMap[action.type];\n      return caseReducer ? caseReducer(draft, action) : undefined;\n    });\n  };\n}\n\nfunction getType$1(slice, actionKey) {\n  return slice + \"/\" + actionKey;\n}\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and a \"slice name\", and automatically generates\r\n * action creators and action types that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n *\r\n * @public\r\n */\n\n\nfunction createSlice(options) {\n  var name = options.name,\n      initialState = options.initialState;\n\n  if (!name) {\n    throw new Error('`name` is a required option for createSlice');\n  }\n\n  var reducers = options.reducers || {};\n  var extraReducers = typeof options.extraReducers === 'undefined' ? {} : typeof options.extraReducers === 'function' ? executeReducerBuilderCallback(options.extraReducers) : options.extraReducers;\n  var reducerNames = Object.keys(reducers);\n  var sliceCaseReducersByName = {};\n  var sliceCaseReducersByType = {};\n  var actionCreators = {};\n  reducerNames.forEach(function (reducerName) {\n    var maybeReducerWithPrepare = reducers[reducerName];\n    var type = getType$1(name, reducerName);\n    var caseReducer;\n    var prepareCallback;\n\n    if ('reducer' in maybeReducerWithPrepare) {\n      caseReducer = maybeReducerWithPrepare.reducer;\n      prepareCallback = maybeReducerWithPrepare.prepare;\n    } else {\n      caseReducer = maybeReducerWithPrepare;\n    }\n\n    sliceCaseReducersByName[reducerName] = caseReducer;\n    sliceCaseReducersByType[type] = caseReducer;\n    actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);\n  });\n\n  var finalCaseReducers = _extends({}, extraReducers, {}, sliceCaseReducersByType);\n\n  var reducer = createReducer(initialState, finalCaseReducers);\n  return {\n    name: name,\n    reducer: reducer,\n    actions: actionCreators,\n    caseReducers: sliceCaseReducersByName\n  };\n}\n\n\n//# sourceMappingURL=redux-toolkit.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///32\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony default export */ __webpack_exports__["a"] = (function (value) {\n  return value;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pZGVudGl0eS5qcz8wMTJmIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFnQjtBQUNoQjtBQUNBLENBQUMiLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZTtcbn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///33\n')},,function(module,exports,__webpack_require__){"use strict";eval("/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcz8zMjBjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGlCQUFpQixRQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdCQUFnQixzQkFBc0I7QUFDdEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLG9CQUFvQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIzNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5vYmplY3QtYXNzaWduXG4oYykgU2luZHJlIFNvcmh1c1xuQGxpY2Vuc2UgTUlUXG4qL1xuXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycyAqL1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xudmFyIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG5mdW5jdGlvbiB0b09iamVjdCh2YWwpIHtcblx0aWYgKHZhbCA9PT0gbnVsbCB8fCB2YWwgPT09IHVuZGVmaW5lZCkge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ09iamVjdC5hc3NpZ24gY2Fubm90IGJlIGNhbGxlZCB3aXRoIG51bGwgb3IgdW5kZWZpbmVkJyk7XG5cdH1cblxuXHRyZXR1cm4gT2JqZWN0KHZhbCk7XG59XG5cbmZ1bmN0aW9uIHNob3VsZFVzZU5hdGl2ZSgpIHtcblx0dHJ5IHtcblx0XHRpZiAoIU9iamVjdC5hc3NpZ24pIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBEZXRlY3QgYnVnZ3kgcHJvcGVydHkgZW51bWVyYXRpb24gb3JkZXIgaW4gb2xkZXIgVjggdmVyc2lvbnMuXG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD00MTE4XG5cdFx0dmFyIHRlc3QxID0gbmV3IFN0cmluZygnYWJjJyk7ICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ldy13cmFwcGVyc1xuXHRcdHRlc3QxWzVdID0gJ2RlJztcblx0XHRpZiAoT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDEpWzBdID09PSAnNScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QyID0ge307XG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCAxMDsgaSsrKSB7XG5cdFx0XHR0ZXN0MlsnXycgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG5cdFx0fVxuXHRcdHZhciBvcmRlcjIgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uIChuKSB7XG5cdFx0XHRyZXR1cm4gdGVzdDJbbl07XG5cdFx0fSk7XG5cdFx0aWYgKG9yZGVyMi5qb2luKCcnKSAhPT0gJzAxMjM0NTY3ODknKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MyA9IHt9O1xuXHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGxldHRlcikge1xuXHRcdFx0dGVzdDNbbGV0dGVyXSA9IGxldHRlcjtcblx0XHR9KTtcblx0XHRpZiAoT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKCcnKSAhPT1cblx0XHRcdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlcnIpIHtcblx0XHQvLyBXZSBkb24ndCBleHBlY3QgYW55IG9mIHRoZSBhYm92ZSB0byB0aHJvdywgYnV0IGJldHRlciB0byBiZSBzYWZlLlxuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNob3VsZFVzZU5hdGl2ZSgpID8gT2JqZWN0LmFzc2lnbiA6IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSkge1xuXHR2YXIgZnJvbTtcblx0dmFyIHRvID0gdG9PYmplY3QodGFyZ2V0KTtcblx0dmFyIHN5bWJvbHM7XG5cblx0Zm9yICh2YXIgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcblx0XHRmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG5cblx0XHRmb3IgKHZhciBrZXkgaW4gZnJvbSkge1xuXHRcdFx0aWYgKGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSkge1xuXHRcdFx0XHR0b1trZXldID0gZnJvbVtrZXldO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcblx0XHRcdHN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZnJvbSk7XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdFx0aWYgKHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSkge1xuXHRcdFx0XHRcdHRvW3N5bWJvbHNbaV1dID0gZnJvbVtzeW1ib2xzW2ldXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiB0bztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///35\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export Immer */\n/* unused harmony export applyPatches */\n/* unused harmony export createDraft */\n/* unused harmony export finishDraft */\n/* unused harmony export immerable */\n/* unused harmony export isDraft */\n/* unused harmony export isDraftable */\n/* unused harmony export nothing */\n/* unused harmony export original */\n/* unused harmony export produce */\n/* unused harmony export produceWithPatches */\n/* unused harmony export setAutoFreeze */\n/* unused harmony export setUseProxies */\nvar obj;\nvar NOTHING = typeof Symbol !== "undefined" ? Symbol("immer-nothing") : ( obj = {}, obj["immer-nothing"] = true, obj );\nvar DRAFTABLE = typeof Symbol !== "undefined" && Symbol.for ? Symbol.for("immer-draftable") : "__$immer_draftable";\nvar DRAFT_STATE = typeof Symbol !== "undefined" && Symbol.for ? Symbol.for("immer-state") : "__$immer_state";\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value) { return false; }\n  return isPlainObject(value) || !!value[DRAFTABLE] || !!value.constructor[DRAFTABLE];\n}\nfunction isPlainObject(value) {\n  if (!value || typeof value !== "object") { return false; }\n  if (Array.isArray(value)) { return true; }\n  var proto = Object.getPrototypeOf(value);\n  return !proto || proto === Object.prototype;\n}\nfunction original(value) {\n  if (value && value[DRAFT_STATE]) {\n    return value[DRAFT_STATE].base;\n  } // otherwise return undefined\n\n}\nvar assign = Object.assign || function assign(target, value) {\n  for (var key in value) {\n    if (has(value, key)) {\n      target[key] = value[key];\n    }\n  }\n\n  return target;\n};\nvar ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : typeof Object.getOwnPropertySymbols !== "undefined" ? function (obj) { return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj)); } : Object.getOwnPropertyNames;\nfunction shallowCopy(base, invokeGetters) {\n  if ( invokeGetters === void 0 ) invokeGetters = false;\n\n  if (Array.isArray(base)) { return base.slice(); }\n  var clone = Object.create(Object.getPrototypeOf(base));\n  ownKeys(base).forEach(function (key) {\n    if (key === DRAFT_STATE) {\n      return; // Never copy over draft state.\n    }\n\n    var desc = Object.getOwnPropertyDescriptor(base, key);\n    var value = desc.value;\n\n    if (desc.get) {\n      if (!invokeGetters) {\n        throw new Error("Immer drafts cannot have computed properties");\n      }\n\n      value = desc.get.call(base);\n    }\n\n    if (desc.enumerable) {\n      clone[key] = value;\n    } else {\n      Object.defineProperty(clone, key, {\n        value: value,\n        writable: true,\n        configurable: true\n      });\n    }\n  });\n  return clone;\n}\nfunction each(value, cb) {\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) { cb(i, value[i], value); }\n  } else {\n    ownKeys(value).forEach(function (key) { return cb(key, value[key], value); });\n  }\n}\nfunction isEnumerable(base, prop) {\n  var desc = Object.getOwnPropertyDescriptor(base, prop);\n  return !!desc && desc.enumerable;\n}\nfunction has(thing, prop) {\n  return Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction is(x, y) {\n  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction clone(obj) {\n  if (!isDraftable(obj)) { return obj; }\n  if (Array.isArray(obj)) { return obj.map(clone); }\n  var cloned = Object.create(Object.getPrototypeOf(obj));\n\n  for (var key in obj) { cloned[key] = clone(obj[key]); }\n\n  return cloned;\n}\nfunction deepFreeze(obj) {\n  if (!isDraftable(obj) || isDraft(obj) || Object.isFrozen(obj)) { return; }\n  Object.freeze(obj);\n  if (Array.isArray(obj)) { obj.forEach(deepFreeze); }else { for (var key in obj) { deepFreeze(obj[key]); } }\n}\n\n/** Each scope represents a `produce` call. */\n\nvar ImmerScope = function ImmerScope(parent) {\n  this.drafts = [];\n  this.parent = parent; // Whenever the modified draft contains a draft from another scope, we\n  // need to prevent auto-freezing so the unowned draft can be finalized.\n\n  this.canAutoFreeze = true; // To avoid prototype lookups:\n\n  this.patches = null;\n};\n\nImmerScope.prototype.usePatches = function usePatches (patchListener) {\n  if (patchListener) {\n    this.patches = [];\n    this.inversePatches = [];\n    this.patchListener = patchListener;\n  }\n};\n\nImmerScope.prototype.revoke = function revoke$1 () {\n  this.leave();\n  this.drafts.forEach(revoke);\n  this.drafts = null; // Make draft-related methods throw.\n};\n\nImmerScope.prototype.leave = function leave () {\n  if (this === ImmerScope.current) {\n    ImmerScope.current = this.parent;\n  }\n};\nImmerScope.current = null;\n\nImmerScope.enter = function () {\n  return this.current = new ImmerScope(this.current);\n};\n\nfunction revoke(draft) {\n  draft[DRAFT_STATE].revoke();\n}\n\n// but share them all instead\n\nvar descriptors = {};\nfunction willFinalize(scope, result, isReplaced) {\n  scope.drafts.forEach(function (draft) {\n    draft[DRAFT_STATE].finalizing = true;\n  });\n\n  if (!isReplaced) {\n    if (scope.patches) {\n      markChangesRecursively(scope.drafts[0]);\n    } // This is faster when we don\'t care about which attributes changed.\n\n\n    markChangesSweep(scope.drafts);\n  } // When a child draft is returned, look for changes.\n  else if (isDraft(result) && result[DRAFT_STATE].scope === scope) {\n      markChangesSweep(scope.drafts);\n    }\n}\nfunction createProxy(base, parent) {\n  var isArray = Array.isArray(base);\n  var draft = clonePotentialDraft(base);\n  each(draft, function (prop) {\n    proxyProperty(draft, prop, isArray || isEnumerable(base, prop));\n  }); // See "proxy.js" for property documentation.\n\n  var scope = parent ? parent.scope : ImmerScope.current;\n  var state = {\n    scope: scope,\n    modified: false,\n    finalizing: false,\n    // es5 only\n    finalized: false,\n    assigned: {},\n    parent: parent,\n    base: base,\n    draft: draft,\n    copy: null,\n    revoke: revoke$1,\n    revoked: false // es5 only\n\n  };\n  createHiddenProperty(draft, DRAFT_STATE, state);\n  scope.drafts.push(draft);\n  return draft;\n}\n\nfunction revoke$1() {\n  this.revoked = true;\n}\n\nfunction source(state) {\n  return state.copy || state.base;\n} // Access a property without creating an Immer draft.\n\n\nfunction peek(draft, prop) {\n  var state = draft[DRAFT_STATE];\n\n  if (state && !state.finalizing) {\n    state.finalizing = true;\n    var value = draft[prop];\n    state.finalizing = false;\n    return value;\n  }\n\n  return draft[prop];\n}\n\nfunction get(state, prop) {\n  assertUnrevoked(state);\n  var value = peek(source(state), prop);\n  if (state.finalizing) { return value; } // Create a draft if the value is unmodified.\n\n  if (value === peek(state.base, prop) && isDraftable(value)) {\n    prepareCopy(state);\n    return state.copy[prop] = createProxy(value, state);\n  }\n\n  return value;\n}\n\nfunction set(state, prop, value) {\n  assertUnrevoked(state);\n  state.assigned[prop] = true;\n\n  if (!state.modified) {\n    if (is(value, peek(source(state), prop))) { return; }\n    markChanged(state);\n    prepareCopy(state);\n  }\n\n  state.copy[prop] = value;\n}\n\nfunction markChanged(state) {\n  if (!state.modified) {\n    state.modified = true;\n    if (state.parent) { markChanged(state.parent); }\n  }\n}\n\nfunction prepareCopy(state) {\n  if (!state.copy) { state.copy = clonePotentialDraft(state.base); }\n}\n\nfunction clonePotentialDraft(base) {\n  var state = base && base[DRAFT_STATE];\n\n  if (state) {\n    state.finalizing = true;\n    var draft = shallowCopy(state.draft, true);\n    state.finalizing = false;\n    return draft;\n  }\n\n  return shallowCopy(base);\n}\n\nfunction proxyProperty(draft, prop, enumerable) {\n  var desc = descriptors[prop];\n\n  if (desc) {\n    desc.enumerable = enumerable;\n  } else {\n    descriptors[prop] = desc = {\n      configurable: true,\n      enumerable: enumerable,\n\n      get: function get$1() {\n        return get(this[DRAFT_STATE], prop);\n      },\n\n      set: function set$1(value) {\n        set(this[DRAFT_STATE], prop, value);\n      }\n\n    };\n  }\n\n  Object.defineProperty(draft, prop, desc);\n}\n\nfunction assertUnrevoked(state) {\n  if (state.revoked === true) { throw new Error("Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + JSON.stringify(source(state))); }\n} // This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\n\nfunction markChangesSweep(drafts) {\n  // The natural order of drafts in the `scope` array is based on when they\n  // were accessed. By processing drafts in reverse natural order, we have a\n  // better chance of processing leaf nodes first. When a leaf node is known to\n  // have changed, we can avoid any traversal of its ancestor nodes.\n  for (var i = drafts.length - 1; i >= 0; i--) {\n    var state = drafts[i][DRAFT_STATE];\n\n    if (!state.modified) {\n      if (Array.isArray(state.base)) {\n        if (hasArrayChanges(state)) { markChanged(state); }\n      } else if (hasObjectChanges(state)) { markChanged(state); }\n    }\n  }\n}\n\nfunction markChangesRecursively(object) {\n  if (!object || typeof object !== "object") { return; }\n  var state = object[DRAFT_STATE];\n  if (!state) { return; }\n  var base = state.base;\n  var draft = state.draft;\n  var assigned = state.assigned;\n\n  if (!Array.isArray(object)) {\n    // Look for added keys.\n    Object.keys(draft).forEach(function (key) {\n      // The `undefined` check is a fast path for pre-existing keys.\n      if (base[key] === undefined && !has(base, key)) {\n        assigned[key] = true;\n        markChanged(state);\n      } else if (!assigned[key]) {\n        // Only untouched properties trigger recursion.\n        markChangesRecursively(draft[key]);\n      }\n    }); // Look for removed keys.\n\n    Object.keys(base).forEach(function (key) {\n      // The `undefined` check is a fast path for pre-existing keys.\n      if (draft[key] === undefined && !has(draft, key)) {\n        assigned[key] = false;\n        markChanged(state);\n      }\n    });\n  } else if (hasArrayChanges(state)) {\n    markChanged(state);\n    assigned.length = true;\n\n    if (draft.length < base.length) {\n      for (var i = draft.length; i < base.length; i++) { assigned[i] = false; }\n    } else {\n      for (var i$1 = base.length; i$1 < draft.length; i$1++) { assigned[i$1] = true; }\n    }\n\n    for (var i$2 = 0; i$2 < draft.length; i$2++) {\n      // Only untouched indices trigger recursion.\n      if (assigned[i$2] === undefined) { markChangesRecursively(draft[i$2]); }\n    }\n  }\n}\n\nfunction hasObjectChanges(state) {\n  var base = state.base;\n  var draft = state.draft; // Search for added keys and changed keys. Start at the back, because\n  // non-numeric keys are ordered by time of definition on the object.\n\n  var keys = Object.keys(draft);\n\n  for (var i = keys.length - 1; i >= 0; i--) {\n    var key = keys[i];\n    var baseValue = base[key]; // The `undefined` check is a fast path for pre-existing keys.\n\n    if (baseValue === undefined && !has(base, key)) {\n      return true;\n    } // Once a base key is deleted, future changes go undetected, because its\n    // descriptor is erased. This branch detects any missed changes.\n    else {\n        var value = draft[key];\n        var state$1 = value && value[DRAFT_STATE];\n\n        if (state$1 ? state$1.base !== baseValue : !is(value, baseValue)) {\n          return true;\n        }\n      }\n  } // At this point, no keys were added or changed.\n  // Compare key count to determine if keys were deleted.\n\n\n  return keys.length !== Object.keys(base).length;\n}\n\nfunction hasArrayChanges(state) {\n  var draft = state.draft;\n  if (draft.length !== state.base.length) { return true; } // See #116\n  // If we first shorten the length, our array interceptors will be removed.\n  // If after that new items are added, result in the same original length,\n  // those last items will have no intercepting property.\n  // So if there is no own descriptor on the last position, we know that items were removed and added\n  // N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n  // the last one\n\n  var descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1); // descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\n  if (descriptor && !descriptor.get) { return true; } // For all other cases, we don\'t have to compare, as they would have been picked up by the index setters\n\n  return false;\n}\n\nfunction createHiddenProperty(target, prop, value) {\n  Object.defineProperty(target, prop, {\n    value: value,\n    enumerable: false,\n    writable: true\n  });\n}\n\nvar legacyProxy = /*#__PURE__*/Object.freeze({\n\twillFinalize: willFinalize,\n\tcreateProxy: createProxy\n});\n\nfunction willFinalize$1() {}\nfunction createProxy$1(base, parent) {\n  var scope = parent ? parent.scope : ImmerScope.current;\n  var state = {\n    // Track which produce call this is associated with.\n    scope: scope,\n    // True for both shallow and deep changes.\n    modified: false,\n    // Used during finalization.\n    finalized: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned: {},\n    // The parent draft state.\n    parent: parent,\n    // The base state.\n    base: base,\n    // The base proxy.\n    draft: null,\n    // Any property proxies.\n    drafts: {},\n    // The base copy with any updated values.\n    copy: null,\n    // Called by the `produce` function.\n    revoke: null\n  };\n  var ref = Array.isArray(base) ? // [state] is used for arrays, to make sure the proxy is array-ish and not violate invariants,\n  // although state itself is an object\n  Proxy.revocable([state], arrayTraps) : Proxy.revocable(state, objectTraps);\n  var revoke = ref.revoke;\n  var proxy = ref.proxy;\n  state.draft = proxy;\n  state.revoke = revoke;\n  scope.drafts.push(proxy);\n  return proxy;\n}\nvar objectTraps = {\n  get: get$1,\n\n  has: function has(target, prop) {\n    return prop in source$1(target);\n  },\n\n  ownKeys: function ownKeys(target) {\n    return Reflect.ownKeys(source$1(target));\n  },\n\n  set: set$1,\n  deleteProperty: deleteProperty,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor,\n\n  defineProperty: function defineProperty() {\n    throw new Error("Object.defineProperty() cannot be used on an Immer draft"); // prettier-ignore\n  },\n\n  getPrototypeOf: function getPrototypeOf(target) {\n    return Object.getPrototypeOf(target.base);\n  },\n\n  setPrototypeOf: function setPrototypeOf() {\n    throw new Error("Object.setPrototypeOf() cannot be used on an Immer draft"); // prettier-ignore\n  }\n\n};\nvar arrayTraps = {};\neach(objectTraps, function (key, fn) {\n  arrayTraps[key] = function () {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\n\narrayTraps.deleteProperty = function (state, prop) {\n  if (isNaN(parseInt(prop))) {\n    throw new Error("Immer only supports deleting array indices"); // prettier-ignore\n  }\n\n  return objectTraps.deleteProperty.call(this, state[0], prop);\n};\n\narrayTraps.set = function (state, prop, value) {\n  if (prop !== "length" && isNaN(parseInt(prop))) {\n    throw new Error("Immer only supports setting array indices and the \'length\' property"); // prettier-ignore\n  }\n\n  return objectTraps.set.call(this, state[0], prop, value);\n}; // returns the object we should be reading the current value from, which is base, until some change has been made\n\n\nfunction source$1(state) {\n  return state.copy || state.base;\n} // Access a property without creating an Immer draft.\n\n\nfunction peek$1(draft, prop) {\n  var state = draft[DRAFT_STATE];\n  var desc = Reflect.getOwnPropertyDescriptor(state ? source$1(state) : draft, prop);\n  return desc && desc.value;\n}\n\nfunction get$1(state, prop) {\n  if (prop === DRAFT_STATE) { return state; }\n  var drafts = state.drafts; // Check for existing draft in unmodified state.\n\n  if (!state.modified && has(drafts, prop)) {\n    return drafts[prop];\n  }\n\n  var value = source$1(state)[prop];\n\n  if (state.finalized || !isDraftable(value)) {\n    return value;\n  } // Check for existing draft in modified state.\n\n\n  if (state.modified) {\n    // Assigned values are never drafted. This catches any drafts we created, too.\n    if (value !== peek$1(state.base, prop)) { return value; } // Store drafts on the copy (when one exists).\n\n    drafts = state.copy;\n  }\n\n  return drafts[prop] = createProxy$1(value, state);\n}\n\nfunction set$1(state, prop, value) {\n  if (!state.modified) {\n    var baseValue = peek$1(state.base, prop); // Optimize based on value\'s truthiness. Truthy values are guaranteed to\n    // never be undefined, so we can avoid the `in` operator. Lastly, truthy\n    // values may be drafts, but falsy values are never drafts.\n\n    var isUnchanged = value ? is(baseValue, value) || value === state.drafts[prop] : is(baseValue, value) && prop in state.base;\n    if (isUnchanged) { return true; }\n    markChanged$1(state);\n  }\n\n  state.assigned[prop] = true;\n  state.copy[prop] = value;\n  return true;\n}\n\nfunction deleteProperty(state, prop) {\n  // The `undefined` check is a fast path for pre-existing keys.\n  if (peek$1(state.base, prop) !== undefined || prop in state.base) {\n    state.assigned[prop] = false;\n    markChanged$1(state);\n  } else if (state.assigned[prop]) {\n    // if an originally not assigned property was deleted\n    delete state.assigned[prop];\n  }\n\n  if (state.copy) { delete state.copy[prop]; }\n  return true;\n} // Note: We never coerce `desc.value` into an Immer draft, because we can\'t make\n// the same guarantee in ES5 mode.\n\n\nfunction getOwnPropertyDescriptor(state, prop) {\n  var owner = source$1(state);\n  var desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n\n  if (desc) {\n    desc.writable = true;\n    desc.configurable = !Array.isArray(owner) || prop !== "length";\n  }\n\n  return desc;\n}\n\nfunction markChanged$1(state) {\n  if (!state.modified) {\n    state.modified = true;\n    state.copy = assign(shallowCopy(state.base), state.drafts);\n    state.drafts = null;\n    if (state.parent) { markChanged$1(state.parent); }\n  }\n}\n\nvar modernProxy = /*#__PURE__*/Object.freeze({\n\twillFinalize: willFinalize$1,\n\tcreateProxy: createProxy$1\n});\n\nfunction generatePatches(state, basePath, patches, inversePatches) {\n  Array.isArray(state.base) ? generateArrayPatches(state, basePath, patches, inversePatches) : generateObjectPatches(state, basePath, patches, inversePatches);\n}\n\nfunction generateArrayPatches(state, basePath, patches, inversePatches) {\n  var assign, assign$1;\n\n  var base = state.base;\n  var copy = state.copy;\n  var assigned = state.assigned; // Reduce complexity by ensuring `base` is never longer.\n\n  if (copy.length < base.length) {\n    (assign = [copy, base], base = assign[0], copy = assign[1]);\n    (assign$1 = [inversePatches, patches], patches = assign$1[0], inversePatches = assign$1[1]);\n  }\n\n  var delta = copy.length - base.length; // Find the first replaced index.\n\n  var start = 0;\n\n  while (base[start] === copy[start] && start < base.length) {\n    ++start;\n  } // Find the last replaced index. Search from the end to optimize splice patches.\n\n\n  var end = base.length;\n\n  while (end > start && base[end - 1] === copy[end + delta - 1]) {\n    --end;\n  } // Process replaced indices.\n\n\n  for (var i = start; i < end; ++i) {\n    if (assigned[i] && copy[i] !== base[i]) {\n      var path = basePath.concat([i]);\n      patches.push({\n        op: "replace",\n        path: path,\n        value: copy[i]\n      });\n      inversePatches.push({\n        op: "replace",\n        path: path,\n        value: base[i]\n      });\n    }\n  }\n\n  var replaceCount = patches.length; // Process added indices.\n\n  for (var i$1 = end + delta - 1; i$1 >= end; --i$1) {\n    var path$1 = basePath.concat([i$1]);\n    patches[replaceCount + i$1 - end] = {\n      op: "add",\n      path: path$1,\n      value: copy[i$1]\n    };\n    inversePatches.push({\n      op: "remove",\n      path: path$1\n    });\n  }\n}\n\nfunction generateObjectPatches(state, basePath, patches, inversePatches) {\n  var base = state.base;\n  var copy = state.copy;\n  each(state.assigned, function (key, assignedValue) {\n    var origValue = base[key];\n    var value = copy[key];\n    var op = !assignedValue ? "remove" : key in base ? "replace" : "add";\n    if (origValue === value && op === "replace") { return; }\n    var path = basePath.concat(key);\n    patches.push(op === "remove" ? {\n      op: op,\n      path: path\n    } : {\n      op: op,\n      path: path,\n      value: value\n    });\n    inversePatches.push(op === "add" ? {\n      op: "remove",\n      path: path\n    } : op === "remove" ? {\n      op: "add",\n      path: path,\n      value: origValue\n    } : {\n      op: "replace",\n      path: path,\n      value: origValue\n    });\n  });\n}\n\nvar applyPatches = function (draft, patches) {\n  for (var i$1 = 0, list = patches; i$1 < list.length; i$1 += 1) {\n    var patch = list[i$1];\n\n    var path = patch.path;\n    var op = patch.op;\n    var value = clone(patch.value); // used to clone patch to ensure original patch is not modified, see #411\n\n    if (!path.length) { throw new Error("Illegal state"); }\n    var base = draft;\n\n    for (var i = 0; i < path.length - 1; i++) {\n      base = base[path[i]];\n      if (!base || typeof base !== "object") { throw new Error("Cannot apply patch, path doesn\'t resolve: " + path.join("/")); } // prettier-ignore\n    }\n\n    var key = path[path.length - 1];\n\n    switch (op) {\n      case "replace":\n        // if value is an object, then it\'s assigned by reference\n        // in the following add or remove ops, the value field inside the patch will also be modifyed\n        // so we use value from the cloned patch\n        base[key] = value;\n        break;\n\n      case "add":\n        if (Array.isArray(base)) {\n          // TODO: support "foo/-" paths for appending to an array\n          base.splice(key, 0, value);\n        } else {\n          base[key] = value;\n        }\n\n        break;\n\n      case "remove":\n        if (Array.isArray(base)) {\n          base.splice(key, 1);\n        } else {\n          delete base[key];\n        }\n\n        break;\n\n      default:\n        throw new Error("Unsupported patch operation: " + op);\n    }\n  }\n\n  return draft;\n};\n\nfunction verifyMinified() {}\n\nvar configDefaults = {\n  useProxies: typeof Proxy !== "undefined" && typeof Proxy.revocable !== "undefined" && typeof Reflect !== "undefined",\n  autoFreeze: typeof process !== "undefined" ? "production" !== "production" : verifyMinified.name === "verifyMinified",\n  onAssign: null,\n  onDelete: null,\n  onCopy: null\n};\nvar Immer = function Immer(config) {\n  assign(this, configDefaults, config);\n  this.setUseProxies(this.useProxies);\n  this.produce = this.produce.bind(this);\n};\n\nImmer.prototype.produce = function produce (base, recipe, patchListener) {\n    var this$1 = this;\n\n  // curried invocation\n  if (typeof base === "function" && typeof recipe !== "function") {\n    var defaultBase = recipe;\n    recipe = base;\n    var self = this;\n    return function curriedProduce(base) {\n        var this$1 = this;\n        if ( base === void 0 ) base = defaultBase;\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n      return self.produce(base, function (draft) { return recipe.call.apply(recipe, [ this$1, draft ].concat( args )); }); // prettier-ignore\n    };\n  } // prettier-ignore\n\n\n  {\n    if (typeof recipe !== "function") {\n      throw new Error("The first or second argument to `produce` must be a function");\n    }\n\n    if (patchListener !== undefined && typeof patchListener !== "function") {\n      throw new Error("The third argument to `produce` must be a function or undefined");\n    }\n  }\n  var result; // Only plain objects, arrays, and "immerable classes" are drafted.\n\n  if (isDraftable(base)) {\n    var scope = ImmerScope.enter();\n    var proxy = this.createProxy(base);\n    var hasError = true;\n\n    try {\n      result = recipe(proxy);\n      hasError = false;\n    } finally {\n      // finally instead of catch + rethrow better preserves original stack\n      if (hasError) { scope.revoke(); }else { scope.leave(); }\n    }\n\n    if (result instanceof Promise) {\n      return result.then(function (result) {\n        scope.usePatches(patchListener);\n        return this$1.processResult(result, scope);\n      }, function (error) {\n        scope.revoke();\n        throw error;\n      });\n    }\n\n    scope.usePatches(patchListener);\n    return this.processResult(result, scope);\n  } else {\n    result = recipe(base);\n    if (result === NOTHING) { return undefined; }\n    if (result === undefined) { result = base; }\n    this.maybeFreeze(result, true);\n    return result;\n  }\n};\n\nImmer.prototype.produceWithPatches = function produceWithPatches (arg1, arg2, arg3) {\n    var this$1 = this;\n\n  if (typeof arg1 === "function") {\n    return function (state) {\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n        return this$1.produceWithPatches(state, function (draft) { return arg1.apply(void 0, [ draft ].concat( args )); });\n      };\n  } // non-curried form\n\n\n  if (arg3) { throw new Error("A patch listener cannot be passed to produceWithPatches"); }\n  var patches, inversePatches;\n  var nextState = this.produce(arg1, arg2, function (p, ip) {\n    patches = p;\n    inversePatches = ip;\n  });\n  return [nextState, patches, inversePatches];\n};\n\nImmer.prototype.createDraft = function createDraft (base) {\n  if (!isDraftable(base)) {\n    throw new Error("First argument to `createDraft` must be a plain object, an array, or an immerable object"); // prettier-ignore\n  }\n\n  var scope = ImmerScope.enter();\n  var proxy = this.createProxy(base);\n  proxy[DRAFT_STATE].isManual = true;\n  scope.leave();\n  return proxy;\n};\n\nImmer.prototype.finishDraft = function finishDraft (draft, patchListener) {\n  var state = draft && draft[DRAFT_STATE];\n\n  if (!state || !state.isManual) {\n    throw new Error("First argument to `finishDraft` must be a draft returned by `createDraft`"); // prettier-ignore\n  }\n\n  if (state.finalized) {\n    throw new Error("The given draft is already finalized"); // prettier-ignore\n  }\n\n  var scope = state.scope;\n  scope.usePatches(patchListener);\n  return this.processResult(undefined, scope);\n};\n\nImmer.prototype.setAutoFreeze = function setAutoFreeze (value) {\n  this.autoFreeze = value;\n};\n\nImmer.prototype.setUseProxies = function setUseProxies (value) {\n  this.useProxies = value;\n  assign(this, value ? modernProxy : legacyProxy);\n};\n\nImmer.prototype.applyPatches = function applyPatches$1 (base, patches) {\n  // If a patch replaces the entire state, take that replacement as base\n  // before applying patches\n  var i;\n\n  for (i = patches.length - 1; i >= 0; i--) {\n    var patch = patches[i];\n\n    if (patch.path.length === 0 && patch.op === "replace") {\n      base = patch.value;\n      break;\n    }\n  }\n\n  if (isDraft(base)) {\n    // N.B: never hits if some patch a replacement, patches are never drafts\n    return applyPatches(base, patches);\n  } // Otherwise, produce a copy of the base state.\n\n\n  return this.produce(base, function (draft) { return applyPatches(draft, patches.slice(i + 1)); });\n};\n/** @internal */\n\n\nImmer.prototype.processResult = function processResult (result, scope) {\n  var baseDraft = scope.drafts[0];\n  var isReplaced = result !== undefined && result !== baseDraft;\n  this.willFinalize(scope, result, isReplaced);\n\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified) {\n      scope.revoke();\n      throw new Error("An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft."); // prettier-ignore\n    }\n\n    if (isDraftable(result)) {\n      // Finalize the result in case it contains (or is) a subset of the draft.\n      result = this.finalize(result, null, scope);\n      this.maybeFreeze(result);\n    }\n\n    if (scope.patches) {\n      scope.patches.push({\n        op: "replace",\n        path: [],\n        value: result\n      });\n      scope.inversePatches.push({\n        op: "replace",\n        path: [],\n        value: baseDraft[DRAFT_STATE].base\n      });\n    }\n  } else {\n    // Finalize the base draft.\n    result = this.finalize(baseDraft, [], scope);\n  }\n\n  scope.revoke();\n\n  if (scope.patches) {\n    scope.patchListener(scope.patches, scope.inversePatches);\n  }\n\n  return result !== NOTHING ? result : undefined;\n};\n/**\n * @internal\n * Finalize a draft, returning either the unmodified base state or a modified\n * copy of the base state.\n */\n\n\nImmer.prototype.finalize = function finalize (draft, path, scope) {\n    var this$1 = this;\n\n  var state = draft[DRAFT_STATE];\n\n  if (!state) {\n    if (Object.isFrozen(draft)) { return draft; }\n    return this.finalizeTree(draft, null, scope);\n  } // Never finalize drafts owned by another scope.\n\n\n  if (state.scope !== scope) {\n    return draft;\n  }\n\n  if (!state.modified) {\n    this.maybeFreeze(state.base, true);\n    return state.base;\n  }\n\n  if (!state.finalized) {\n    state.finalized = true;\n    this.finalizeTree(state.draft, path, scope);\n\n    if (this.onDelete) {\n      // The `assigned` object is unreliable with ES5 drafts.\n      if (this.useProxies) {\n        var assigned = state.assigned;\n\n        for (var prop in assigned) {\n          if (!assigned[prop]) { this.onDelete(state, prop); }\n        }\n      } else {\n        var base = state.base;\n          var copy = state.copy;\n        each(base, function (prop) {\n          if (!has(copy, prop)) { this$1.onDelete(state, prop); }\n        });\n      }\n    }\n\n    if (this.onCopy) {\n      this.onCopy(state);\n    } // At this point, all descendants of `state.copy` have been finalized,\n    // so we can be sure that `scope.canAutoFreeze` is accurate.\n\n\n    if (this.autoFreeze && scope.canAutoFreeze) {\n      Object.freeze(state.copy);\n    }\n\n    if (path && scope.patches) {\n      generatePatches(state, path, scope.patches, scope.inversePatches);\n    }\n  }\n\n  return state.copy;\n};\n/**\n * @internal\n * Finalize all drafts in the given state tree.\n */\n\n\nImmer.prototype.finalizeTree = function finalizeTree (root, rootPath, scope) {\n    var this$1 = this;\n\n  var state = root[DRAFT_STATE];\n\n  if (state) {\n    if (!this.useProxies) {\n      // Create the final copy, with added keys and without deleted keys.\n      state.copy = shallowCopy(state.draft, true);\n    }\n\n    root = state.copy;\n  }\n\n  var needPatches = !!rootPath && !!scope.patches;\n\n  var finalizeProperty = function (prop, value, parent) {\n    if (value === parent) {\n      throw Error("Immer forbids circular references");\n    } // In the `finalizeTree` method, only the `root` object may be a draft.\n\n\n    var isDraftProp = !!state && parent === root;\n\n    if (isDraft(value)) {\n      var path = isDraftProp && needPatches && !state.assigned[prop] ? rootPath.concat(prop) : null; // Drafts owned by `scope` are finalized here.\n\n      value = this$1.finalize(value, path, scope); // Drafts from another scope must prevent auto-freezing.\n\n      if (isDraft(value)) {\n        scope.canAutoFreeze = false;\n      } // Preserve non-enumerable properties.\n\n\n      if (Array.isArray(parent) || isEnumerable(parent, prop)) {\n        parent[prop] = value;\n      } else {\n        Object.defineProperty(parent, prop, {\n          value: value\n        });\n      } // Unchanged drafts are never passed to the `onAssign` hook.\n\n\n      if (isDraftProp && value === state.base[prop]) { return; }\n    } // Unchanged draft properties are ignored.\n    else if (isDraftProp && is(value, state.base[prop])) {\n        return;\n      } // Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n      else if (isDraftable(value) && !Object.isFrozen(value)) {\n          each(value, finalizeProperty);\n          this$1.maybeFreeze(value);\n        }\n\n    if (isDraftProp && this$1.onAssign) {\n      this$1.onAssign(state, prop, value);\n    }\n  };\n\n  each(root, finalizeProperty);\n  return root;\n};\n\nImmer.prototype.maybeFreeze = function maybeFreeze (value, deep) {\n    if ( deep === void 0 ) deep = false;\n\n  if (this.autoFreeze && !isDraft(value)) {\n    if (deep) { deepFreeze(value); }else { Object.freeze(value); }\n  }\n};\n\nvar immer = new Immer();\n/**\n * The `produce` function takes a value and a "recipe function" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a "curried producer" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\n\nvar produce = immer.produce;\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\n\nvar produceWithPatches = immer.produceWithPatches.bind(immer);\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\n\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\n\nvar setUseProxies = immer.setUseProxies.bind(immer);\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\n\nvar applyPatches$1 = immer.applyPatches.bind(immer);\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\n\nvar createDraft = immer.createDraft.bind(immer);\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\n\nvar finishDraft = immer.finishDraft.bind(immer);\n\n/* harmony default export */ __webpack_exports__["a"] = (produce);\n\n//# sourceMappingURL=immer.module.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(49)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///36\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (thunk);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtdGh1bmsvZXMvaW5kZXguanM/YjA4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVlLDhEQUFLIiwiZmlsZSI6IjM3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKGV4dHJhQXJndW1lbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCxcbiAgICAgICAgZ2V0U3RhdGUgPSBfcmVmLmdldFN0YXRlO1xuICAgIHJldHVybiBmdW5jdGlvbiAobmV4dCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICByZXR1cm4gYWN0aW9uKGRpc3BhdGNoLCBnZXRTdGF0ZSwgZXh0cmFBcmd1bWVudCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV4dChhY3Rpb24pO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xufVxuXG52YXIgdGh1bmsgPSBjcmVhdGVUaHVua01pZGRsZXdhcmUoKTtcbnRodW5rLndpdGhFeHRyYUFyZ3VtZW50ID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlO1xuXG5leHBvcnQgZGVmYXVsdCB0aHVuazsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///37\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony default export */ __webpack_exports__[\"a\"] = (function (value) {\n  return typeof value === 'function';\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtYWN0aW9ucy9lcy91dGlscy9pc0Z1bmN0aW9uLmpzPzUxZjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWdCO0FBQ2hCO0FBQ0EsQ0FBQyIsImZpbGUiOiIzOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbn0pOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar reactIs = __webpack_require__(23);\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\n\nfunction getStatics(component) {\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  }\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanM/ZGE2YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsRUFBVTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG1CQUFtQixpQkFBaUI7QUFDcEM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciByZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBtaXhpbnM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWVcbn07XG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICBjb21wYXJlOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfVxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///39\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return symbolObservablePonyfill; });\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvcG9ueWZpbGwuanM/NDhiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiI0MC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN5bWJvbE9ic2VydmFibGVQb255ZmlsbChyb290KSB7XG5cdHZhciByZXN1bHQ7XG5cdHZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuXHRpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdGlmIChTeW1ib2wub2JzZXJ2YWJsZSkge1xuXHRcdFx0cmVzdWx0ID0gU3ltYm9sLm9ic2VydmFibGU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbCgnb2JzZXJ2YWJsZScpO1xuXHRcdFx0U3ltYm9sLm9ic2VydmFibGUgPSByZXN1bHQ7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJlc3VsdCA9ICdAQG9ic2VydmFibGUnO1xuXHR9XG5cblx0cmV0dXJuIHJlc3VsdDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///40\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 17 modules\nvar es = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./src/faq/components/faq-edit-button-group/index.scss\nvar faq_edit_button_group = __webpack_require__(129);\n\n// EXTERNAL MODULE: ./src/mappings/blocks/wl-container/index.js\nvar wl_container = __webpack_require__(16);\n\n// EXTERNAL MODULE: ./src/mappings/blocks/wl-column/index.js\nvar wl_column = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./src/faq/components/wl-action-button/index.js\nvar wl_action_button = __webpack_require__(77);\n\n// CONCATENATED MODULE: ./src/faq/components/faq-edit-button-group/index.js\n/**\n * FaqEditButtonGroup displaying single question\n * @since 3.26.0\n * @author Naveen Muthusamy\n *\n */\n\n/**\n * External dependencies.\n */\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\nconst FaqEditButtonGroup = ({\n  updateHandler,\n  deleteHandler\n}) => {\n  return react_default.a.createElement(wl_container["a" /* WlContainer */], {\n    fullWidth: true\n  }, react_default.a.createElement(wl_column["a" /* WlColumn */], {\n    className: "wl-col--width-40 wl-col--low-padding"\n  }, react_default.a.createElement(wl_action_button["a" /* default */], {\n    text: "delete",\n    className: "wl-action-button--normal wl-action-button--text-bold",\n    onClickHandler: () => {\n      deleteHandler();\n    }\n  })), react_default.a.createElement(wl_column["a" /* WlColumn */], {\n    className: "wl-col--width-10"\n  }), react_default.a.createElement(wl_column["a" /* WlColumn */], {\n    className: "wl-col--width-40 wl-col--low-padding"\n  }, react_default.a.createElement(wl_action_button["a" /* default */], {\n    text: "update",\n    className: "wl-action-button--primary wl-action-button--text-bold",\n    onClickHandler: () => {\n      updateHandler();\n    }\n  })));\n};\n\n/* harmony default export */ var components_faq_edit_button_group = (FaqEditButtonGroup);\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(2);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ./src/faq/actions/index.js\nvar actions = __webpack_require__(19);\n\n// CONCATENATED MODULE: ./src/faq/components/faq-edit-item/index.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return faqEditItemType; });\n/**\n * FaqEditItem for the faq item.\n * @since 3.26.0\n * @author Naveen Muthusamy\n *\n */\n\n/**\n * external dependencies\n */\n\n\n/**\n * Internal dependencies.\n */\n\n\n\n\n\n\nconst faqEditItemType = {\n  ANSWER: "ANSWER",\n  QUESTION: "QUESTION"\n};\n\nclass faq_edit_item_FaqEditItem extends react_default.a.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textAreaValue: this.props.value\n    };\n    this.changeValueOnUserType = this.changeValueOnUserType.bind(this);\n    this.updateFaqEditItem = this.updateFaqEditItem.bind(this);\n    this.deleteFaqItem = this.deleteFaqItem.bind(this);\n  }\n\n  updateFaqEditItem(textAreaValue = null) {\n    const action = Object(actions["g" /* updateFaqItem */])();\n    action.payload = {\n      id: this.props.id,\n      type: this.props.type,\n      value: this.state.textAreaValue\n    };\n\n    if (textAreaValue !== null) {\n      action.payload.value = textAreaValue;\n    }\n\n    this.props.dispatch(action);\n  }\n\n  deleteFaqItem() {\n    // Set the state, this is asynchronous, so we pass a default argument to action creator\n    this.setState({\n      textAreaValue: ""\n    });\n    this.updateFaqEditItem("");\n  }\n\n  changeValueOnUserType(event) {\n    this.setState({\n      textAreaValue: event.target.value\n    });\n  }\n\n  render() {\n    return react_default.a.createElement(react_default.a.Fragment, null, react_default.a.createElement("b", null, this.props.title), react_default.a.createElement("br", null), react_default.a.createElement(wl_container["a" /* WlContainer */], null, react_default.a.createElement(wl_column["a" /* WlColumn */], {\n      className: "wl-col--width-100 wl-col--less-padding"\n    }, react_default.a.createElement("textarea", {\n      rows: 3,\n      value: this.state.textAreaValue,\n      onChange: e => {\n        this.changeValueOnUserType(e);\n      },\n      style: {\n        "width": "95%"\n      }\n    }))), react_default.a.createElement(components_faq_edit_button_group, {\n      updateHandler: this.updateFaqEditItem,\n      deleteHandler: this.deleteFaqItem\n    }));\n  }\n\n}\n\nfaq_edit_item_FaqEditItem.propTypes = {\n  // Edit item type it can be question or answer.\n  type: prop_types_default.a.string,\n  // Faq item id.\n  id: prop_types_default.a.number\n};\n/* harmony default export */ var faq_edit_item = __webpack_exports__["a"] = (Object(es["b" /* connect */])()(faq_edit_item_FaqEditItem));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///41\n')},function(module,exports,__webpack_require__){"use strict";eval('/** @license React v16.12.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar h=__webpack_require__(35),n="function"===typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.forward_ref"):60112,y=n?Symbol.for("react.suspense"):60113;n&&Symbol.for("react.suspense_list");\nvar z=n?Symbol.for("react.memo"):60115,aa=n?Symbol.for("react.lazy"):60116;n&&Symbol.for("react.fundamental");n&&Symbol.for("react.responder");n&&Symbol.for("react.scope");var A="function"===typeof Symbol&&Symbol.iterator;\nfunction B(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var C={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},D={};\nfunction E(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}E.prototype.isReactComponent={};E.prototype.setState=function(a,b){if("object"!==typeof a&&"function"!==typeof a&&null!=a)throw Error(B(85));this.updater.enqueueSetState(this,a,b,"setState")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")};function F(){}F.prototype=E.prototype;function G(a,b,c){this.props=a;this.context=b;this.refs=D;this.updater=c||C}var H=G.prototype=new F;\nH.constructor=G;h(H,E.prototype);H.isPureReactComponent=!0;var I={current:null},J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,l=null;if(null!=b)for(e in void 0!==b.ref&&(l=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var k=Array(f),m=0;m<f;m++)k[m]=arguments[m+2];d.children=k}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:l,props:d,_owner:J.current}}\nfunction ba(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function N(a){return"object"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,function(a){return b[a]})}var O=/\\/+/g,P=[];function Q(a,b,c,e){if(P.length){var d=P.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction R(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>P.length&&P.push(a)}\nfunction S(a,b,c,e){var d=typeof a;if("undefined"===d||"boolean"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case "string":case "number":g=!0;break;case "object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,""===b?"."+T(a,0):b),1;g=0;b=""===b?".":b+":";if(Array.isArray(a))for(var l=0;l<a.length;l++){d=a[l];var f=b+T(d,l);g+=S(d,f,c,e)}else if(null===a||"object"!==typeof a?f=null:(f=A&&a[A]||a["@@iterator"],f="function"===typeof f?f:null),"function"===typeof f)for(a=f.call(a),l=\n0;!(d=a.next()).done;)d=d.value,f=b+T(d,l++),g+=S(d,f,c,e);else if("object"===d)throw c=""+a,Error(B(31,"[object Object]"===c?"object with keys {"+Object.keys(a).join(", ")+"}":c,""));return g}function U(a,b,c){return null==a?0:S(a,"",b,c)}function T(a,b){return"object"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function ca(a,b){a.func.call(a.context,b,a.count++)}\nfunction da(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?V(a,e,c,function(a){return a}):null!=a&&(N(a)&&(a=ba(a,d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(O,"$&/")+"/")+c)),e.push(a))}function V(a,b,c,e,d){var g="";null!=c&&(g=(""+c).replace(O,"$&/")+"/");b=Q(b,g,e,d);U(a,da,b);R(b)}function W(){var a=I.current;if(null===a)throw Error(B(321));return a}\nvar X={Children:{map:function(a,b,c){if(null==a)return a;var e=[];V(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=Q(null,null,b,c);U(a,ca,b);R(b)},count:function(a){return U(a,function(){return null},null)},toArray:function(a){var b=[];V(a,b,null,function(a){return a});return b},only:function(a){if(!N(a))throw Error(B(143));return a}},createRef:function(){return{current:null}},Component:E,PureComponent:G,createContext:function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,\n_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a},forwardRef:function(a){return{$$typeof:x,render:a}},lazy:function(a){return{$$typeof:aa,_ctor:a,_status:-1,_result:null}},memo:function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}},useCallback:function(a,b){return W().useCallback(a,b)},useContext:function(a,b){return W().useContext(a,b)},useEffect:function(a,b){return W().useEffect(a,b)},useImperativeHandle:function(a,\nb,c){return W().useImperativeHandle(a,b,c)},useDebugValue:function(){},useLayoutEffect:function(a,b){return W().useLayoutEffect(a,b)},useMemo:function(a,b){return W().useMemo(a,b)},useReducer:function(a,b,c){return W().useReducer(a,b,c)},useRef:function(a){return W().useRef(a)},useState:function(a){return W().useState(a)},Fragment:r,Profiler:u,StrictMode:t,Suspense:y,createElement:M,cloneElement:function(a,b,c){if(null===a||void 0===a)throw Error(B(267,a));var e=h({},a.props),d=a.key,g=a.ref,l=a._owner;\nif(null!=b){void 0!==b.ref&&(g=b.ref,l=J.current);void 0!==b.key&&(d=""+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(k in b)K.call(b,k)&&!L.hasOwnProperty(k)&&(e[k]=void 0===b[k]&&void 0!==f?f[k]:b[k])}var k=arguments.length-2;if(1===k)e.children=c;else if(1<k){f=Array(k);for(var m=0;m<k;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,key:d,ref:g,props:e,_owner:l}},createFactory:function(a){var b=M.bind(null,a);b.type=a;return b},isValidElement:N,version:"16.12.0",\n__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:I,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:h}},Y={default:X},Z=Y&&X||Y;module.exports=Z.default||Z;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///42\n')},,,,function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(47);\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanM/ZDdhMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsMkJBQTJCLG1CQUFPLENBQUMsRUFBNEI7O0FBRS9EO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjQ2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///46\n")},function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanM/NTliMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEiLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///47\n")},function(module,exports,__webpack_require__){"use strict";eval('/** @license React v16.12.0\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nObject.defineProperty(exports,"__esModule",{value:!0});\nvar b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.suspense_list"):\n60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.fundamental"):60117,w=b?Symbol.for("react.responder"):60118,x=b?Symbol.for("react.scope"):60119;function y(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function z(a){return y(a)===m}\nexports.typeOf=y;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;\nexports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===v||a.$$typeof===w||a.$$typeof===x)};exports.isAsyncMode=function(a){return z(a)||y(a)===l};exports.isConcurrentMode=z;exports.isContextConsumer=function(a){return y(a)===k};exports.isContextProvider=function(a){return y(a)===h};\nexports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return y(a)===n};exports.isFragment=function(a){return y(a)===e};exports.isLazy=function(a){return y(a)===t};exports.isMemo=function(a){return y(a)===r};exports.isPortal=function(a){return y(a)===d};exports.isProfiler=function(a){return y(a)===g};exports.isStrictMode=function(a){return y(a)===f};exports.isSuspense=function(a){return y(a)===p};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzP2E5M2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYSw0Q0FBNEMsU0FBUztBQUNsRTtBQUNBLGtNQUFrTSxjQUFjLGtDQUFrQyxpQkFBaUIsVUFBVSwwQkFBMEIsbURBQW1ELGtDQUFrQyw0Q0FBNEMsa0JBQWtCLGtCQUFrQixjQUFjO0FBQzFkLGlCQUFpQixvQkFBb0IseUJBQXlCLDBCQUEwQiwwQkFBMEIsa0JBQWtCLHFCQUFxQixtQkFBbUIsZUFBZSxlQUFlLGlCQUFpQixtQkFBbUIscUJBQXFCO0FBQ25RLHVDQUF1Qyw2UEFBNlAsZ0NBQWdDLHVCQUF1QiwyQkFBMkIsc0NBQXNDLGlCQUFpQixzQ0FBc0M7QUFDbmQsOEJBQThCLHFEQUFxRCxpQ0FBaUMsaUJBQWlCLCtCQUErQixpQkFBaUIsMkJBQTJCLGlCQUFpQiwyQkFBMkIsaUJBQWlCLDZCQUE2QixpQkFBaUIsK0JBQStCLGlCQUFpQixpQ0FBaUMsaUJBQWlCLCtCQUErQiIsImZpbGUiOiI0OC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTIuMFxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx3PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O2Z1bmN0aW9uIHkoYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiB6KGEpe3JldHVybiB5KGEpPT09bX1cbmV4cG9ydHMudHlwZU9mPXk7ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO2V4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09dnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14KX07ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKXx8eShhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT16O2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09aH07XG5leHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PXR9O2V4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///48\n')},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///49\n")},,function(module,exports,__webpack_require__){"use strict";eval("\n\nvar compose = __webpack_require__(10).compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\n    function() {\n      if (arguments.length === 0) return undefined;\n      if (typeof arguments[0] === 'object') return compose;\n      return compose.apply(null, arguments);\n    }\n);\n\nexports.devToolsEnhancer = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION__ :\n    function() { return function(noop) { return noop; } }\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtZGV2dG9vbHMtZXh0ZW5zaW9uL2luZGV4LmpzP2U0NzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsY0FBYyxtQkFBTyxDQUFDLEVBQU87O0FBRTdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix3QkFBd0IsYUFBYSxFQUFFO0FBQ3ZEIiwiZmlsZSI6IjUxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBjb21wb3NlID0gcmVxdWlyZSgncmVkdXgnKS5jb21wb3NlO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5jb21wb3NlV2l0aERldlRvb2xzID0gKFxuICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fID9cbiAgICB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fIDpcbiAgICBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT09ICdvYmplY3QnKSByZXR1cm4gY29tcG9zZTtcbiAgICAgIHJldHVybiBjb21wb3NlLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gICAgfVxuKTtcblxuZXhwb3J0cy5kZXZUb29sc0VuaGFuY2VyID0gKFxuICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXyA/XG4gICAgd2luZG93Ll9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX18gOlxuICAgIGZ1bmN0aW9uKCkgeyByZXR1cm4gZnVuY3Rpb24obm9vcCkgeyByZXR1cm4gbm9vcDsgfSB9XG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///51\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* unused harmony export FAQ_REQUEST_ADD_NEW_QUESTION */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return FAQ_EVENT_HANDLER_SELECTION_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return FAQ_ITEMS_CHANGED; });\n/**\n * Constants for the FAQ hooks.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\n\n/**\n * Event name when the text selection changed in any of text editor, emitted\n * from the hooks.\n * @type {string}\n */\nconst FAQ_REQUEST_ADD_NEW_QUESTION = "FAQ_REQUEST_ADD_NEW_QUESTION";\n/**\n * Event emitted by hook when the text selection is changed.\n * @type {string}\n */\n\nconst FAQ_EVENT_HANDLER_SELECTION_CHANGED = "FAQ_EVENT_HANDLER_SELECTION_CHANGED";\n/**\n * Event emitted by the store when the faq items are changed\n * @type {string}\n */\n\nconst FAQ_ITEMS_CHANGED = "FAQ_ITEMS_CHANGED";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2NvbnN0YW50cy9mYXEtaG9vay1jb25zdGFudHMuanM/MmQ5OCJdLCJuYW1lcyI6WyJGQVFfUkVRVUVTVF9BRERfTkVXX1FVRVNUSU9OIiwiRkFRX0VWRU5UX0hBTkRMRVJfU0VMRUNUSU9OX0NIQU5HRUQiLCJGQVFfSVRFTVNfQ0hBTkdFRCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7QUFPQTs7Ozs7QUFLTyxNQUFNQSw0QkFBNEIsR0FBRyw4QkFBckM7QUFFUDs7Ozs7QUFJTyxNQUFNQyxtQ0FBbUMsR0FBRyxxQ0FBNUM7QUFFUDs7Ozs7QUFJTyxNQUFNQyxpQkFBaUIsR0FBRyxtQkFBMUIiLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnN0YW50cyBmb3IgdGhlIEZBUSBob29rcy5cbiAqXG4gKiBAc2luY2UgMy4yNi4wXG4gKiBAYXV0aG9yIE5hdmVlbiBNdXRodXNhbXkgPG5hdmVlbkB3b3JkbGlmdC5pbz5cbiAqL1xuXG4vKipcbiAqIEV2ZW50IG5hbWUgd2hlbiB0aGUgdGV4dCBzZWxlY3Rpb24gY2hhbmdlZCBpbiBhbnkgb2YgdGV4dCBlZGl0b3IsIGVtaXR0ZWRcbiAqIGZyb20gdGhlIGhvb2tzLlxuICogQHR5cGUge3N0cmluZ31cbiAqL1xuZXhwb3J0IGNvbnN0IEZBUV9SRVFVRVNUX0FERF9ORVdfUVVFU1RJT04gPSBcIkZBUV9SRVFVRVNUX0FERF9ORVdfUVVFU1RJT05cIjtcblxuLyoqXG4gKiBFdmVudCBlbWl0dGVkIGJ5IGhvb2sgd2hlbiB0aGUgdGV4dCBzZWxlY3Rpb24gaXMgY2hhbmdlZC5cbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBGQVFfRVZFTlRfSEFORExFUl9TRUxFQ1RJT05fQ0hBTkdFRCA9IFwiRkFRX0VWRU5UX0hBTkRMRVJfU0VMRUNUSU9OX0NIQU5HRURcIjtcblxuLyoqXG4gKiBFdmVudCBlbWl0dGVkIGJ5IHRoZSBzdG9yZSB3aGVuIHRoZSBmYXEgaXRlbXMgYXJlIGNoYW5nZWRcbiAqIEB0eXBlIHtzdHJpbmd9XG4gKi9cbmV4cG9ydCBjb25zdCBGQVFfSVRFTVNfQ0hBTkdFRCA9IFwiRkFRX0lURU1TX0NIQU5HRURcIjtcblxuXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///52\n')},,,function(module,exports){eval('module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "exports", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanM/ODJiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsTW9kdWxlKSB7XG5cdGlmICghb3JpZ2luYWxNb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0dmFyIG1vZHVsZSA9IE9iamVjdC5jcmVhdGUob3JpZ2luYWxNb2R1bGUpO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImV4cG9ydHNcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///55\n')},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global) {!function(e,t){ true?t(exports):undefined}(this,function(e){"use strict";function t(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}function r(e,t){Object.defineProperty(this,"kind",{value:e,enumerable:!0}),t&&t.length&&Object.defineProperty(this,"path",{value:t,enumerable:!0})}function n(e,t,r){n.super_.call(this,"E",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0}),Object.defineProperty(this,"rhs",{value:r,enumerable:!0})}function o(e,t){o.super_.call(this,"N",e),Object.defineProperty(this,"rhs",{value:t,enumerable:!0})}function i(e,t){i.super_.call(this,"D",e),Object.defineProperty(this,"lhs",{value:t,enumerable:!0})}function a(e,t,r){a.super_.call(this,"A",e),Object.defineProperty(this,"index",{value:t,enumerable:!0}),Object.defineProperty(this,"item",{value:r,enumerable:!0})}function f(e,t,r){var n=e.slice((r||t)+1||e.length);return e.length=t<0?e.length+t:t,e.push.apply(e,n),e}function u(e){var t="undefined"==typeof e?"undefined":N(e);return"object"!==t?t:e===Math?"math":null===e?"null":Array.isArray(e)?"array":"[object Date]"===Object.prototype.toString.call(e)?"date":"function"==typeof e.toString&&/^\\/.*\\//.test(e.toString())?"regexp":"object"}function l(e,t,r,c,s,d,p){s=s||[],p=p||[];var g=s.slice(0);if("undefined"!=typeof d){if(c){if("function"==typeof c&&c(g,d))return;if("object"===("undefined"==typeof c?"undefined":N(c))){if(c.prefilter&&c.prefilter(g,d))return;if(c.normalize){var h=c.normalize(g,d,e,t);h&&(e=h[0],t=h[1])}}}g.push(d)}"regexp"===u(e)&&"regexp"===u(t)&&(e=e.toString(),t=t.toString());var y="undefined"==typeof e?"undefined":N(e),v="undefined"==typeof t?"undefined":N(t),b="undefined"!==y||p&&p[p.length-1].lhs&&p[p.length-1].lhs.hasOwnProperty(d),m="undefined"!==v||p&&p[p.length-1].rhs&&p[p.length-1].rhs.hasOwnProperty(d);if(!b&&m)r(new o(g,t));else if(!m&&b)r(new i(g,e));else if(u(e)!==u(t))r(new n(g,e,t));else if("date"===u(e)&&e-t!==0)r(new n(g,e,t));else if("object"===y&&null!==e&&null!==t)if(p.filter(function(t){return t.lhs===e}).length)e!==t&&r(new n(g,e,t));else{if(p.push({lhs:e,rhs:t}),Array.isArray(e)){var w;e.length;for(w=0;w<e.length;w++)w>=t.length?r(new a(g,w,new i(void 0,e[w]))):l(e[w],t[w],r,c,g,w,p);for(;w<t.length;)r(new a(g,w,new o(void 0,t[w++])))}else{var x=Object.keys(e),S=Object.keys(t);x.forEach(function(n,o){var i=S.indexOf(n);i>=0?(l(e[n],t[n],r,c,g,n,p),S=f(S,i)):l(e[n],void 0,r,c,g,n,p)}),S.forEach(function(e){l(void 0,t[e],r,c,g,e,p)})}p.length=p.length-1}else e!==t&&("number"===y&&isNaN(e)&&isNaN(t)||r(new n(g,e,t)))}function c(e,t,r,n){return n=n||[],l(e,t,function(e){e&&n.push(e)},r),n.length?n:void 0}function s(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case"A":s(o[r.path[n]],r.index,r.item);break;case"D":delete o[r.path[n]];break;case"E":case"N":o[r.path[n]]=r.rhs}}else switch(r.kind){case"A":s(e[t],r.index,r.item);break;case"D":e=f(e,t);break;case"E":case"N":e[t]=r.rhs}return e}function d(e,t,r){if(e&&t&&r&&r.kind){for(var n=e,o=-1,i=r.path?r.path.length-1:0;++o<i;)"undefined"==typeof n[r.path[o]]&&(n[r.path[o]]="number"==typeof r.path[o]?[]:{}),n=n[r.path[o]];switch(r.kind){case"A":s(r.path?n[r.path[o]]:n,r.index,r.item);break;case"D":delete n[r.path[o]];break;case"E":case"N":n[r.path[o]]=r.rhs}}}function p(e,t,r){if(r.path&&r.path.length){var n,o=e[t],i=r.path.length-1;for(n=0;n<i;n++)o=o[r.path[n]];switch(r.kind){case"A":p(o[r.path[n]],r.index,r.item);break;case"D":o[r.path[n]]=r.lhs;break;case"E":o[r.path[n]]=r.lhs;break;case"N":delete o[r.path[n]]}}else switch(r.kind){case"A":p(e[t],r.index,r.item);break;case"D":e[t]=r.lhs;break;case"E":e[t]=r.lhs;break;case"N":e=f(e,t)}return e}function g(e,t,r){if(e&&t&&r&&r.kind){var n,o,i=e;for(o=r.path.length-1,n=0;n<o;n++)"undefined"==typeof i[r.path[n]]&&(i[r.path[n]]={}),i=i[r.path[n]];switch(r.kind){case"A":p(i[r.path[n]],r.index,r.item);break;case"D":i[r.path[n]]=r.lhs;break;case"E":i[r.path[n]]=r.lhs;break;case"N":delete i[r.path[n]]}}}function h(e,t,r){if(e&&t){var n=function(n){r&&!r(e,t,n)||d(e,t,n)};l(e,t,n)}}function y(e){return"color: "+F[e].color+"; font-weight: bold"}function v(e){var t=e.kind,r=e.path,n=e.lhs,o=e.rhs,i=e.index,a=e.item;switch(t){case"E":return[r.join("."),n,"→",o];case"N":return[r.join("."),o];case"D":return[r.join(".")];case"A":return[r.join(".")+"["+i+"]",a];default:return[]}}function b(e,t,r,n){var o=c(e,t);try{n?r.groupCollapsed("diff"):r.group("diff")}catch(e){r.log("diff")}o?o.forEach(function(e){var t=e.kind,n=v(e);r.log.apply(r,["%c "+F[t].text,y(t)].concat(P(n)))}):r.log("—— no diff ——");try{r.groupEnd()}catch(e){r.log("—— diff end —— ")}}function m(e,t,r,n){switch("undefined"==typeof e?"undefined":N(e)){case"object":return"function"==typeof e[n]?e[n].apply(e,P(r)):e[n];case"function":return e(t);default:return e}}function w(e){var t=e.timestamp,r=e.duration;return function(e,n,o){var i=["action"];return i.push("%c"+String(e.type)),t&&i.push("%c@ "+n),r&&i.push("%c(in "+o.toFixed(2)+" ms)"),i.join(" ")}}function x(e,t){var r=t.logger,n=t.actionTransformer,o=t.titleFormatter,i=void 0===o?w(t):o,a=t.collapsed,f=t.colors,u=t.level,l=t.diff,c="undefined"==typeof t.titleFormatter;e.forEach(function(o,s){var d=o.started,p=o.startedTime,g=o.action,h=o.prevState,y=o.error,v=o.took,w=o.nextState,x=e[s+1];x&&(w=x.prevState,v=x.started-d);var S=n(g),k="function"==typeof a?a(function(){return w},g,o):a,j=D(p),E=f.title?"color: "+f.title(S)+";":"",A=["color: gray; font-weight: lighter;"];A.push(E),t.timestamp&&A.push("color: gray; font-weight: lighter;"),t.duration&&A.push("color: gray; font-weight: lighter;");var O=i(S,j,v);try{k?f.title&&c?r.groupCollapsed.apply(r,["%c "+O].concat(A)):r.groupCollapsed(O):f.title&&c?r.group.apply(r,["%c "+O].concat(A)):r.group(O)}catch(e){r.log(O)}var N=m(u,S,[h],"prevState"),P=m(u,S,[S],"action"),C=m(u,S,[y,h],"error"),F=m(u,S,[w],"nextState");if(N)if(f.prevState){var L="color: "+f.prevState(h)+"; font-weight: bold";r[N]("%c prev state",L,h)}else r[N]("prev state",h);if(P)if(f.action){var T="color: "+f.action(S)+"; font-weight: bold";r[P]("%c action    ",T,S)}else r[P]("action    ",S);if(y&&C)if(f.error){var M="color: "+f.error(y,h)+"; font-weight: bold;";r[C]("%c error     ",M,y)}else r[C]("error     ",y);if(F)if(f.nextState){var _="color: "+f.nextState(w)+"; font-weight: bold";r[F]("%c next state",_,w)}else r[F]("next state",w);l&&b(h,w,r,k);try{r.groupEnd()}catch(e){r.log("—— log end ——")}})}function S(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},L,e),r=t.logger,n=t.stateTransformer,o=t.errorTransformer,i=t.predicate,a=t.logErrors,f=t.diffPredicate;if("undefined"==typeof r)return function(){return function(e){return function(t){return e(t)}}};if(e.getState&&e.dispatch)return console.error("[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\\n// Logger with default options\\nimport { logger } from \'redux-logger\'\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\\nimport createLogger from \'redux-logger\'\\nconst logger = createLogger({\\n  // ...options\\n});\\nconst store = createStore(\\n  reducer,\\n  applyMiddleware(logger)\\n)\\n"),function(){return function(e){return function(t){return e(t)}}};var u=[];return function(e){var r=e.getState;return function(e){return function(l){if("function"==typeof i&&!i(r,l))return e(l);var c={};u.push(c),c.started=O.now(),c.startedTime=new Date,c.prevState=n(r()),c.action=l;var s=void 0;if(a)try{s=e(l)}catch(e){c.error=o(e)}else s=e(l);c.took=O.now()-c.started,c.nextState=n(r());var d=t.diff&&"function"==typeof f?f(r,l):t.diff;if(x(u,Object.assign({},t,{diff:d})),u.length=0,c.error)throw c.error;return s}}}}var k,j,E=function(e,t){return new Array(t+1).join(e)},A=function(e,t){return E("0",t-e.toString().length)+e},D=function(e){return A(e.getHours(),2)+":"+A(e.getMinutes(),2)+":"+A(e.getSeconds(),2)+"."+A(e.getMilliseconds(),3)},O="undefined"!=typeof performance&&null!==performance&&"function"==typeof performance.now?performance:Date,N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P=function(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)},C=[];k="object"===("undefined"==typeof global?"undefined":N(global))&&global?global:"undefined"!=typeof window?window:{},j=k.DeepDiff,j&&C.push(function(){"undefined"!=typeof j&&k.DeepDiff===c&&(k.DeepDiff=j,j=void 0)}),t(n,r),t(o,r),t(i,r),t(a,r),Object.defineProperties(c,{diff:{value:c,enumerable:!0},observableDiff:{value:l,enumerable:!0},applyDiff:{value:h,enumerable:!0},applyChange:{value:d,enumerable:!0},revertChange:{value:g,enumerable:!0},isConflict:{value:function(){return"undefined"!=typeof j},enumerable:!0},noConflict:{value:function(){return C&&(C.forEach(function(e){e()}),C=null),c},enumerable:!0}});var F={E:{color:"#2196F3",text:"CHANGED:"},N:{color:"#4CAF50",text:"ADDED:"},D:{color:"#F44336",text:"DELETED:"},A:{color:"#2196F3",text:"ARRAY:"}},L={level:"log",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(e){return e},actionTransformer:function(e){return e},errorTransformer:function(e){return e},colors:{title:function(){return"inherit"},prevState:function(){return"#9E9E9E"},action:function(){return"#03A9F4"},nextState:function(){return"#4CAF50"},error:function(){return"#F20404"}},diff:!1,diffPredicate:void 0,transformer:void 0},T=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.dispatch,r=e.getState;return"function"==typeof t||"function"==typeof r?S()({dispatch:t,getState:r}):void console.error("\\n[redux-logger v3] BREAKING CHANGE\\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\\n[redux-logger v3] Change\\n[redux-logger v3] import createLogger from \'redux-logger\'\\n[redux-logger v3] to\\n[redux-logger v3] import { createLogger } from \'redux-logger\'\\n")};e.defaults=L,e.createLogger=S,e.logger=T,e.default=T,Object.defineProperty(e,"__esModule",{value:!0})});\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(22)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///56\n')},,,,,,,function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = immutableStateInvariantMiddleware;\n\nvar _invariant = __webpack_require__(15);\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _jsonStringifySafe = __webpack_require__(64);\n\nvar _jsonStringifySafe2 = _interopRequireDefault(_jsonStringifySafe);\n\nvar _isImmutable = __webpack_require__(65);\n\nvar _isImmutable2 = _interopRequireDefault(_isImmutable);\n\nvar _trackForMutations = __webpack_require__(66);\n\nvar _trackForMutations2 = _interopRequireDefault(_trackForMutations);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BETWEEN_DISPATCHES_MESSAGE = ['A state mutation was detected between dispatches, in the path `%s`.', 'This may cause incorrect behavior.', '(http://redux.js.org/docs/Troubleshooting.html#never-mutate-reducer-arguments)'].join(' ');\n\nvar INSIDE_DISPATCH_MESSAGE = ['A state mutation was detected inside a dispatch, in the path: `%s`.', 'Take a look at the reducer(s) handling the action %s.', '(http://redux.js.org/docs/Troubleshooting.html#never-mutate-reducer-arguments)'].join(' ');\n\nfunction immutableStateInvariantMiddleware() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$isImmutable = options.isImmutable,\n      isImmutable = _options$isImmutable === undefined ? _isImmutable2.default : _options$isImmutable,\n      ignore = options.ignore;\n\n  var track = _trackForMutations2.default.bind(null, isImmutable, ignore);\n\n  return function (_ref) {\n    var getState = _ref.getState;\n\n    var state = getState();\n    var tracker = track(state);\n\n    var result = void 0;\n    return function (next) {\n      return function (action) {\n        state = getState();\n\n        result = tracker.detectMutations();\n        // Track before potentially not meeting the invariant\n        tracker = track(state);\n\n        (0, _invariant2.default)(!result.wasMutated, BETWEEN_DISPATCHES_MESSAGE, (result.path || []).join('.'));\n\n        var dispatchedAction = next(action);\n        state = getState();\n\n        result = tracker.detectMutations();\n        // Track before potentially not meeting the invariant\n        tracker = track(state);\n\n        result.wasMutated && (0, _invariant2.default)(!result.wasMutated, INSIDE_DISPATCH_MESSAGE, (result.path || []).join('.'), (0, _jsonStringifySafe2.default)(action));\n\n        return dispatchedAction;\n      };\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtaW1tdXRhYmxlLXN0YXRlLWludmFyaWFudC9kaXN0L2luZGV4LmpzPzA1MGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyxFQUFXOztBQUVwQzs7QUFFQSx5QkFBeUIsbUJBQU8sQ0FBQyxFQUFxQjs7QUFFdEQ7O0FBRUEsbUJBQW1CLG1CQUFPLENBQUMsRUFBZTs7QUFFMUM7O0FBRUEseUJBQXlCLG1CQUFPLENBQUMsRUFBcUI7O0FBRXREOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3Rjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI2My5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGltbXV0YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZTtcblxudmFyIF9pbnZhcmlhbnQgPSByZXF1aXJlKCdpbnZhcmlhbnQnKTtcblxudmFyIF9pbnZhcmlhbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW52YXJpYW50KTtcblxudmFyIF9qc29uU3RyaW5naWZ5U2FmZSA9IHJlcXVpcmUoJ2pzb24tc3RyaW5naWZ5LXNhZmUnKTtcblxudmFyIF9qc29uU3RyaW5naWZ5U2FmZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9qc29uU3RyaW5naWZ5U2FmZSk7XG5cbnZhciBfaXNJbW11dGFibGUgPSByZXF1aXJlKCcuL2lzSW1tdXRhYmxlJyk7XG5cbnZhciBfaXNJbW11dGFibGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaXNJbW11dGFibGUpO1xuXG52YXIgX3RyYWNrRm9yTXV0YXRpb25zID0gcmVxdWlyZSgnLi90cmFja0Zvck11dGF0aW9ucycpO1xuXG52YXIgX3RyYWNrRm9yTXV0YXRpb25zMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RyYWNrRm9yTXV0YXRpb25zKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIEJFVFdFRU5fRElTUEFUQ0hFU19NRVNTQUdFID0gWydBIHN0YXRlIG11dGF0aW9uIHdhcyBkZXRlY3RlZCBiZXR3ZWVuIGRpc3BhdGNoZXMsIGluIHRoZSBwYXRoIGAlc2AuJywgJ1RoaXMgbWF5IGNhdXNlIGluY29ycmVjdCBiZWhhdmlvci4nLCAnKGh0dHA6Ly9yZWR1eC5qcy5vcmcvZG9jcy9Ucm91Ymxlc2hvb3RpbmcuaHRtbCNuZXZlci1tdXRhdGUtcmVkdWNlci1hcmd1bWVudHMpJ10uam9pbignICcpO1xuXG52YXIgSU5TSURFX0RJU1BBVENIX01FU1NBR0UgPSBbJ0Egc3RhdGUgbXV0YXRpb24gd2FzIGRldGVjdGVkIGluc2lkZSBhIGRpc3BhdGNoLCBpbiB0aGUgcGF0aDogYCVzYC4nLCAnVGFrZSBhIGxvb2sgYXQgdGhlIHJlZHVjZXIocykgaGFuZGxpbmcgdGhlIGFjdGlvbiAlcy4nLCAnKGh0dHA6Ly9yZWR1eC5qcy5vcmcvZG9jcy9Ucm91Ymxlc2hvb3RpbmcuaHRtbCNuZXZlci1tdXRhdGUtcmVkdWNlci1hcmd1bWVudHMpJ10uam9pbignICcpO1xuXG5mdW5jdGlvbiBpbW11dGFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmUoKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIF9vcHRpb25zJGlzSW1tdXRhYmxlID0gb3B0aW9ucy5pc0ltbXV0YWJsZSxcbiAgICAgIGlzSW1tdXRhYmxlID0gX29wdGlvbnMkaXNJbW11dGFibGUgPT09IHVuZGVmaW5lZCA/IF9pc0ltbXV0YWJsZTIuZGVmYXVsdCA6IF9vcHRpb25zJGlzSW1tdXRhYmxlLFxuICAgICAgaWdub3JlID0gb3B0aW9ucy5pZ25vcmU7XG5cbiAgdmFyIHRyYWNrID0gX3RyYWNrRm9yTXV0YXRpb25zMi5kZWZhdWx0LmJpbmQobnVsbCwgaXNJbW11dGFibGUsIGlnbm9yZSk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIGdldFN0YXRlID0gX3JlZi5nZXRTdGF0ZTtcblxuICAgIHZhciBzdGF0ZSA9IGdldFN0YXRlKCk7XG4gICAgdmFyIHRyYWNrZXIgPSB0cmFjayhzdGF0ZSk7XG5cbiAgICB2YXIgcmVzdWx0ID0gdm9pZCAwO1xuICAgIHJldHVybiBmdW5jdGlvbiAobmV4dCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgc3RhdGUgPSBnZXRTdGF0ZSgpO1xuXG4gICAgICAgIHJlc3VsdCA9IHRyYWNrZXIuZGV0ZWN0TXV0YXRpb25zKCk7XG4gICAgICAgIC8vIFRyYWNrIGJlZm9yZSBwb3RlbnRpYWxseSBub3QgbWVldGluZyB0aGUgaW52YXJpYW50XG4gICAgICAgIHRyYWNrZXIgPSB0cmFjayhzdGF0ZSk7XG5cbiAgICAgICAgKDAsIF9pbnZhcmlhbnQyLmRlZmF1bHQpKCFyZXN1bHQud2FzTXV0YXRlZCwgQkVUV0VFTl9ESVNQQVRDSEVTX01FU1NBR0UsIChyZXN1bHQucGF0aCB8fCBbXSkuam9pbignLicpKTtcblxuICAgICAgICB2YXIgZGlzcGF0Y2hlZEFjdGlvbiA9IG5leHQoYWN0aW9uKTtcbiAgICAgICAgc3RhdGUgPSBnZXRTdGF0ZSgpO1xuXG4gICAgICAgIHJlc3VsdCA9IHRyYWNrZXIuZGV0ZWN0TXV0YXRpb25zKCk7XG4gICAgICAgIC8vIFRyYWNrIGJlZm9yZSBwb3RlbnRpYWxseSBub3QgbWVldGluZyB0aGUgaW52YXJpYW50XG4gICAgICAgIHRyYWNrZXIgPSB0cmFjayhzdGF0ZSk7XG5cbiAgICAgICAgcmVzdWx0Lndhc011dGF0ZWQgJiYgKDAsIF9pbnZhcmlhbnQyLmRlZmF1bHQpKCFyZXN1bHQud2FzTXV0YXRlZCwgSU5TSURFX0RJU1BBVENIX01FU1NBR0UsIChyZXN1bHQucGF0aCB8fCBbXSkuam9pbignLicpLCAoMCwgX2pzb25TdHJpbmdpZnlTYWZlMi5kZWZhdWx0KShhY3Rpb24pKTtcblxuICAgICAgICByZXR1cm4gZGlzcGF0Y2hlZEFjdGlvbjtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///63\n")},function(module,exports){eval('exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return "[Circular ~]"\n    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanNvbi1zdHJpbmdpZnktc2FmZS9zdHJpbmdpZnkuanM/ZGZmMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjY0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gc3RyaW5naWZ5XG5leHBvcnRzLmdldFNlcmlhbGl6ZSA9IHNlcmlhbGl6ZXJcblxuZnVuY3Rpb24gc3RyaW5naWZ5KG9iaiwgcmVwbGFjZXIsIHNwYWNlcywgY3ljbGVSZXBsYWNlcikge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqLCBzZXJpYWxpemVyKHJlcGxhY2VyLCBjeWNsZVJlcGxhY2VyKSwgc3BhY2VzKVxufVxuXG5mdW5jdGlvbiBzZXJpYWxpemVyKHJlcGxhY2VyLCBjeWNsZVJlcGxhY2VyKSB7XG4gIHZhciBzdGFjayA9IFtdLCBrZXlzID0gW11cblxuICBpZiAoY3ljbGVSZXBsYWNlciA9PSBudWxsKSBjeWNsZVJlcGxhY2VyID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIGlmIChzdGFja1swXSA9PT0gdmFsdWUpIHJldHVybiBcIltDaXJjdWxhciB+XVwiXG4gICAgcmV0dXJuIFwiW0NpcmN1bGFyIH4uXCIgKyBrZXlzLnNsaWNlKDAsIHN0YWNrLmluZGV4T2YodmFsdWUpKS5qb2luKFwiLlwiKSArIFwiXVwiXG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIGlmIChzdGFjay5sZW5ndGggPiAwKSB7XG4gICAgICB2YXIgdGhpc1BvcyA9IHN0YWNrLmluZGV4T2YodGhpcylcbiAgICAgIH50aGlzUG9zID8gc3RhY2suc3BsaWNlKHRoaXNQb3MgKyAxKSA6IHN0YWNrLnB1c2godGhpcylcbiAgICAgIH50aGlzUG9zID8ga2V5cy5zcGxpY2UodGhpc1BvcywgSW5maW5pdHksIGtleSkgOiBrZXlzLnB1c2goa2V5KVxuICAgICAgaWYgKH5zdGFjay5pbmRleE9mKHZhbHVlKSkgdmFsdWUgPSBjeWNsZVJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSlcbiAgICB9XG4gICAgZWxzZSBzdGFjay5wdXNoKHZhbHVlKVxuXG4gICAgcmV0dXJuIHJlcGxhY2VyID09IG51bGwgPyB2YWx1ZSA6IHJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSlcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///64\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };\n\nexports.default = isImmutableDefault;\nfunction isImmutableDefault(value) {\n  return (typeof value === \'undefined\' ? \'undefined\' : _typeof(value)) !== \'object\' || value === null || typeof value === \'undefined\';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtaW1tdXRhYmxlLXN0YXRlLWludmFyaWFudC9kaXN0L2lzSW1tdXRhYmxlLmpzPzFhODUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7O0FBRUQsb0dBQW9HLG1CQUFtQixFQUFFLG1CQUFtQiw4SEFBOEg7O0FBRTFRO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjY1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGlzSW1tdXRhYmxlRGVmYXVsdDtcbmZ1bmN0aW9uIGlzSW1tdXRhYmxlRGVmYXVsdCh2YWx1ZSkge1xuICByZXR1cm4gKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YodmFsdWUpKSAhPT0gJ29iamVjdCcgfHwgdmFsdWUgPT09IG51bGwgfHwgdHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJztcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///65\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = trackForMutations;\nfunction trackForMutations(isImmutable, ignore, obj) {\n  var trackedProperties = trackProperties(isImmutable, ignore, obj);\n  return {\n    detectMutations: function detectMutations() {\n      return _detectMutations(isImmutable, ignore, trackedProperties, obj);\n    }\n  };\n}\n\nfunction trackProperties(isImmutable) {\n  var ignore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var obj = arguments[2];\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n  var tracked = { value: obj };\n\n  if (!isImmutable(obj)) {\n    tracked.children = {};\n\n    for (var key in obj) {\n      var childPath = path.concat(key);\n      if (ignore.length && ignore.indexOf(childPath.join('.')) !== -1) {\n        continue;\n      }\n\n      tracked.children[key] = trackProperties(isImmutable, ignore, obj[key], childPath);\n    }\n  }\n  return tracked;\n}\n\nfunction _detectMutations(isImmutable) {\n  var ignore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var trackedProperty = arguments[2];\n  var obj = arguments[3];\n  var sameParentRef = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var path = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n\n  var prevObj = trackedProperty ? trackedProperty.value : undefined;\n\n  var sameRef = prevObj === obj;\n\n  if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\n    return { wasMutated: true, path: path };\n  }\n\n  if (isImmutable(prevObj) || isImmutable(obj)) {\n    return { wasMutated: false };\n  }\n\n  // Gather all keys from prev (tracked) and after objs\n  var keysToDetect = {};\n  Object.keys(trackedProperty.children).forEach(function (key) {\n    keysToDetect[key] = true;\n  });\n  Object.keys(obj).forEach(function (key) {\n    keysToDetect[key] = true;\n  });\n\n  var keys = Object.keys(keysToDetect);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var childPath = path.concat(key);\n    if (ignore.length && ignore.indexOf(childPath.join('.')) !== -1) {\n      continue;\n    }\n\n    var result = _detectMutations(isImmutable, ignore, trackedProperty.children[key], obj[key], sameRef, childPath);\n\n    if (result.wasMutated) {\n      return result;\n    }\n  }\n  return { wasMutated: false };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtaW1tdXRhYmxlLXN0YXRlLWludmFyaWFudC9kaXN0L3RyYWNrRm9yTXV0YXRpb25zLmpzPzczZTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCOztBQUVqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YiLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0cmFja0Zvck11dGF0aW9ucztcbmZ1bmN0aW9uIHRyYWNrRm9yTXV0YXRpb25zKGlzSW1tdXRhYmxlLCBpZ25vcmUsIG9iaikge1xuICB2YXIgdHJhY2tlZFByb3BlcnRpZXMgPSB0cmFja1Byb3BlcnRpZXMoaXNJbW11dGFibGUsIGlnbm9yZSwgb2JqKTtcbiAgcmV0dXJuIHtcbiAgICBkZXRlY3RNdXRhdGlvbnM6IGZ1bmN0aW9uIGRldGVjdE11dGF0aW9ucygpIHtcbiAgICAgIHJldHVybiBfZGV0ZWN0TXV0YXRpb25zKGlzSW1tdXRhYmxlLCBpZ25vcmUsIHRyYWNrZWRQcm9wZXJ0aWVzLCBvYmopO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gdHJhY2tQcm9wZXJ0aWVzKGlzSW1tdXRhYmxlKSB7XG4gIHZhciBpZ25vcmUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IFtdO1xuICB2YXIgb2JqID0gYXJndW1lbnRzWzJdO1xuICB2YXIgcGF0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogW107XG5cbiAgdmFyIHRyYWNrZWQgPSB7IHZhbHVlOiBvYmogfTtcblxuICBpZiAoIWlzSW1tdXRhYmxlKG9iaikpIHtcbiAgICB0cmFja2VkLmNoaWxkcmVuID0ge307XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICB2YXIgY2hpbGRQYXRoID0gcGF0aC5jb25jYXQoa2V5KTtcbiAgICAgIGlmIChpZ25vcmUubGVuZ3RoICYmIGlnbm9yZS5pbmRleE9mKGNoaWxkUGF0aC5qb2luKCcuJykpICE9PSAtMSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgdHJhY2tlZC5jaGlsZHJlbltrZXldID0gdHJhY2tQcm9wZXJ0aWVzKGlzSW1tdXRhYmxlLCBpZ25vcmUsIG9ialtrZXldLCBjaGlsZFBhdGgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJhY2tlZDtcbn1cblxuZnVuY3Rpb24gX2RldGVjdE11dGF0aW9ucyhpc0ltbXV0YWJsZSkge1xuICB2YXIgaWdub3JlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBbXTtcbiAgdmFyIHRyYWNrZWRQcm9wZXJ0eSA9IGFyZ3VtZW50c1syXTtcbiAgdmFyIG9iaiA9IGFyZ3VtZW50c1szXTtcbiAgdmFyIHNhbWVQYXJlbnRSZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IGZhbHNlO1xuICB2YXIgcGF0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiA1ICYmIGFyZ3VtZW50c1s1XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzVdIDogW107XG5cbiAgdmFyIHByZXZPYmogPSB0cmFja2VkUHJvcGVydHkgPyB0cmFja2VkUHJvcGVydHkudmFsdWUgOiB1bmRlZmluZWQ7XG5cbiAgdmFyIHNhbWVSZWYgPSBwcmV2T2JqID09PSBvYmo7XG5cbiAgaWYgKHNhbWVQYXJlbnRSZWYgJiYgIXNhbWVSZWYgJiYgIU51bWJlci5pc05hTihvYmopKSB7XG4gICAgcmV0dXJuIHsgd2FzTXV0YXRlZDogdHJ1ZSwgcGF0aDogcGF0aCB9O1xuICB9XG5cbiAgaWYgKGlzSW1tdXRhYmxlKHByZXZPYmopIHx8IGlzSW1tdXRhYmxlKG9iaikpIHtcbiAgICByZXR1cm4geyB3YXNNdXRhdGVkOiBmYWxzZSB9O1xuICB9XG5cbiAgLy8gR2F0aGVyIGFsbCBrZXlzIGZyb20gcHJldiAodHJhY2tlZCkgYW5kIGFmdGVyIG9ianNcbiAgdmFyIGtleXNUb0RldGVjdCA9IHt9O1xuICBPYmplY3Qua2V5cyh0cmFja2VkUHJvcGVydHkuY2hpbGRyZW4pLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGtleXNUb0RldGVjdFtrZXldID0gdHJ1ZTtcbiAgfSk7XG4gIE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAga2V5c1RvRGV0ZWN0W2tleV0gPSB0cnVlO1xuICB9KTtcblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGtleXNUb0RldGVjdCk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgIHZhciBjaGlsZFBhdGggPSBwYXRoLmNvbmNhdChrZXkpO1xuICAgIGlmIChpZ25vcmUubGVuZ3RoICYmIGlnbm9yZS5pbmRleE9mKGNoaWxkUGF0aC5qb2luKCcuJykpICE9PSAtMSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgdmFyIHJlc3VsdCA9IF9kZXRlY3RNdXRhdGlvbnMoaXNJbW11dGFibGUsIGlnbm9yZSwgdHJhY2tlZFByb3BlcnR5LmNoaWxkcmVuW2tleV0sIG9ialtrZXldLCBzYW1lUmVmLCBjaGlsZFBhdGgpO1xuXG4gICAgaWYgKHJlc3VsdC53YXNNdXRhdGVkKSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfVxuICByZXR1cm4geyB3YXNNdXRhdGVkOiBmYWxzZSB9O1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///66\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwcGluZ3MvYmxvY2tzL3dsLWNvbnRhaW5lci9pbmRleC5zY3NzP2E5NDEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///67\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwcGluZ3MvYmxvY2tzL3dsLWNvbHVtbi9pbmRleC5zY3NzP2M3OTEiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///68\n")},,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/**\n * FaqValidator validates the text selected by user, determines if it is question\n * or answer.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\nclass FaqValidator {\n  static isQuestion(text) {\n    return text.trim().endsWith("?");\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (FaqValidator);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2hvb2tzL3ZhbGlkYXRvcnMvZmFxLXZhbGlkYXRvci5qcz9lOTdmIl0sIm5hbWVzIjpbIkZhcVZhbGlkYXRvciIsImlzUXVlc3Rpb24iLCJ0ZXh0IiwidHJpbSIsImVuZHNXaXRoIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQU9BLE1BQU1BLFlBQU4sQ0FBbUI7QUFFZixTQUFPQyxVQUFQLENBQWtCQyxJQUFsQixFQUF3QjtBQUNwQixXQUFPQSxJQUFJLENBQUNDLElBQUwsR0FBWUMsUUFBWixDQUFxQixHQUFyQixDQUFQO0FBQ0g7O0FBSmM7O0FBUUpKLHFFQUFmIiwiZmlsZSI6IjczLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGYXFWYWxpZGF0b3IgdmFsaWRhdGVzIHRoZSB0ZXh0IHNlbGVjdGVkIGJ5IHVzZXIsIGRldGVybWluZXMgaWYgaXQgaXMgcXVlc3Rpb25cbiAqIG9yIGFuc3dlci5cbiAqXG4gKiBAc2luY2UgMy4yNi4wXG4gKiBAYXV0aG9yIE5hdmVlbiBNdXRodXNhbXkgPG5hdmVlbkB3b3JkbGlmdC5pbz5cbiAqL1xuY2xhc3MgRmFxVmFsaWRhdG9yIHtcblxuICAgIHN0YXRpYyBpc1F1ZXN0aW9uKHRleHQpIHtcbiAgICAgICAgcmV0dXJuIHRleHQudHJpbSgpLmVuZHNXaXRoKFwiP1wiKVxuICAgIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCBGYXFWYWxpZGF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///73\n')},,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(130);\n/* harmony import */ var _index_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_index_scss__WEBPACK_IMPORTED_MODULE_1__);\n/**\n * WlCard : shows a card for containing elements\n * @since 3.26.0\n * @author Naveen Muthusamy\n */\n\n/**\n * External dependencies.\n */\n\n/**\n * Internal dependencies.\n */\n\n\n\nconst WlActionButton = ({\n  className = "",\n  text,\n  onClickHandler\n}) => {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", {\n    onClick: onClickHandler,\n    className: "wl-action-button " + className,\n    type: "button"\n  }, text);\n};\n\n/* harmony default export */ __webpack_exports__["a"] = (WlActionButton);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2NvbXBvbmVudHMvd2wtYWN0aW9uLWJ1dHRvbi9pbmRleC5qcz85MjhhIl0sIm5hbWVzIjpbIldsQWN0aW9uQnV0dG9uIiwiY2xhc3NOYW1lIiwidGV4dCIsIm9uQ2xpY2tIYW5kbGVyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7QUFNQTs7O0FBR0E7QUFDQTs7OztBQUdBOztBQUVBLE1BQU1BLGNBQWMsR0FBRyxDQUFDO0FBQUVDLFdBQVMsR0FBRyxFQUFkO0FBQWtCQyxNQUFsQjtBQUF3QkM7QUFBeEIsQ0FBRCxLQUE4QztBQUNuRSxTQUNFO0FBQVEsV0FBTyxFQUFFQSxjQUFqQjtBQUFpQyxhQUFTLEVBQUUsc0JBQXNCRixTQUFsRTtBQUE2RSxRQUFJLEVBQUU7QUFBbkYsS0FDR0MsSUFESCxDQURGO0FBS0QsQ0FORDs7QUFRZUYsdUVBQWYiLCJmaWxlIjoiNzcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdsQ2FyZCA6IHNob3dzIGEgY2FyZCBmb3IgY29udGFpbmluZyBlbGVtZW50c1xuICogQHNpbmNlIDMuMjYuMFxuICogQGF1dGhvciBOYXZlZW4gTXV0aHVzYW15XG4gKi9cblxuLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXMuXG4gKi9cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzLlxuICovXG5pbXBvcnQgXCIuL2luZGV4LnNjc3NcIjtcblxuY29uc3QgV2xBY3Rpb25CdXR0b24gPSAoeyBjbGFzc05hbWUgPSBcIlwiLCB0ZXh0LCBvbkNsaWNrSGFuZGxlciB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGJ1dHRvbiBvbkNsaWNrPXtvbkNsaWNrSGFuZGxlcn0gY2xhc3NOYW1lPXtcIndsLWFjdGlvbi1idXR0b24gXCIgKyBjbGFzc05hbWV9IHR5cGU9e1wiYnV0dG9uXCJ9PlxuICAgICAge3RleHR9XG4gICAgPC9idXR0b24+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBXbEFjdGlvbkJ1dHRvbjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///77\n')},,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return transformAPIDataToUi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return transformUiDataToApiFormat; });\n/**\n * This files provide the filters for transforming ui data to api and viceversa.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\n\n/**\n * Takes an array of FAQ items from API and transform it to ui data.\n * @param items\n * @return {Array} Transformed FAQ items.\n */\nconst transformAPIDataToUi = items => {\n  return items.map(item => ({ ...item,\n\n    /**\n     * We save the value of question and answer before supplying to ui, they will\n     * be used when it is used to update in the db\n     */\n    previousQuestionValue: item.question,\n    previousAnswerValue: item.answer\n  }));\n};\n/**\n * Takes an array of FAQ Ui items from API and transform it to api data.\n * @param items FAQ items from redux store.\n * @return {Array} Transformed FAQ items.\n */\n\nconst transformUiDataToApiFormat = items => {\n  return items.map((item, index) => ({\n    id: item.id,\n    question: item.question,\n    answer: item.answer,\n    previous_question_value: item.previousQuestionValue,\n    previous_answer_value: item.previousAnswerValue\n  }));\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL3NhZ2FzL2ZpbHRlcnMuanM/NzMxYSJdLCJuYW1lcyI6WyJ0cmFuc2Zvcm1BUElEYXRhVG9VaSIsIml0ZW1zIiwibWFwIiwiaXRlbSIsInByZXZpb3VzUXVlc3Rpb25WYWx1ZSIsInF1ZXN0aW9uIiwicHJldmlvdXNBbnN3ZXJWYWx1ZSIsImFuc3dlciIsInRyYW5zZm9ybVVpRGF0YVRvQXBpRm9ybWF0IiwiaW5kZXgiLCJpZCIsInByZXZpb3VzX3F1ZXN0aW9uX3ZhbHVlIiwicHJldmlvdXNfYW5zd2VyX3ZhbHVlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7Ozs7Ozs7QUFPQTs7Ozs7QUFLTyxNQUFNQSxvQkFBb0IsR0FBR0MsS0FBSyxJQUFJO0FBQzNDLFNBQU9BLEtBQUssQ0FBQ0MsR0FBTixDQUFXQyxJQUFELEtBQVcsRUFDMUIsR0FBR0EsSUFEdUI7O0FBRTFCOzs7O0FBSUFDLHlCQUFxQixFQUFFRCxJQUFJLENBQUNFLFFBTkY7QUFPMUJDLHVCQUFtQixFQUFFSCxJQUFJLENBQUNJO0FBUEEsR0FBWCxDQUFWLENBQVA7QUFTRCxDQVZNO0FBWVA7Ozs7OztBQUtPLE1BQU1DLDBCQUEwQixHQUFHUCxLQUFLLElBQUk7QUFDakQsU0FBT0EsS0FBSyxDQUFDQyxHQUFOLENBQVUsQ0FBQ0MsSUFBRCxFQUFPTSxLQUFQLE1BQWtCO0FBQ2pDQyxNQUFFLEVBQUVQLElBQUksQ0FBQ08sRUFEd0I7QUFFakNMLFlBQVEsRUFBRUYsSUFBSSxDQUFDRSxRQUZrQjtBQUdqQ0UsVUFBTSxFQUFFSixJQUFJLENBQUNJLE1BSG9CO0FBSWpDSSwyQkFBdUIsRUFBRVIsSUFBSSxDQUFDQyxxQkFKRztBQUtqQ1EseUJBQXFCLEVBQUVULElBQUksQ0FBQ0c7QUFMSyxHQUFsQixDQUFWLENBQVA7QUFPRCxDQVJNIiwiZmlsZSI6IjgxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIGZpbGVzIHByb3ZpZGUgdGhlIGZpbHRlcnMgZm9yIHRyYW5zZm9ybWluZyB1aSBkYXRhIHRvIGFwaSBhbmQgdmljZXZlcnNhLlxuICpcbiAqIEBzaW5jZSAzLjI2LjBcbiAqIEBhdXRob3IgTmF2ZWVuIE11dGh1c2FteSA8bmF2ZWVuQHdvcmRsaWZ0LmlvPlxuICovXG5cbi8qKlxuICogVGFrZXMgYW4gYXJyYXkgb2YgRkFRIGl0ZW1zIGZyb20gQVBJIGFuZCB0cmFuc2Zvcm0gaXQgdG8gdWkgZGF0YS5cbiAqIEBwYXJhbSBpdGVtc1xuICogQHJldHVybiB7QXJyYXl9IFRyYW5zZm9ybWVkIEZBUSBpdGVtcy5cbiAqL1xuZXhwb3J0IGNvbnN0IHRyYW5zZm9ybUFQSURhdGFUb1VpID0gaXRlbXMgPT4ge1xuICByZXR1cm4gaXRlbXMubWFwKChpdGVtKSA9PiAoe1xuICAgIC4uLml0ZW0sXG4gICAgLyoqXG4gICAgICogV2Ugc2F2ZSB0aGUgdmFsdWUgb2YgcXVlc3Rpb24gYW5kIGFuc3dlciBiZWZvcmUgc3VwcGx5aW5nIHRvIHVpLCB0aGV5IHdpbGxcbiAgICAgKiBiZSB1c2VkIHdoZW4gaXQgaXMgdXNlZCB0byB1cGRhdGUgaW4gdGhlIGRiXG4gICAgICovXG4gICAgcHJldmlvdXNRdWVzdGlvblZhbHVlOiBpdGVtLnF1ZXN0aW9uLFxuICAgIHByZXZpb3VzQW5zd2VyVmFsdWU6IGl0ZW0uYW5zd2VyXG4gIH0pKTtcbn07XG5cbi8qKlxuICogVGFrZXMgYW4gYXJyYXkgb2YgRkFRIFVpIGl0ZW1zIGZyb20gQVBJIGFuZCB0cmFuc2Zvcm0gaXQgdG8gYXBpIGRhdGEuXG4gKiBAcGFyYW0gaXRlbXMgRkFRIGl0ZW1zIGZyb20gcmVkdXggc3RvcmUuXG4gKiBAcmV0dXJuIHtBcnJheX0gVHJhbnNmb3JtZWQgRkFRIGl0ZW1zLlxuICovXG5leHBvcnQgY29uc3QgdHJhbnNmb3JtVWlEYXRhVG9BcGlGb3JtYXQgPSBpdGVtcyA9PiB7XG4gIHJldHVybiBpdGVtcy5tYXAoKGl0ZW0sIGluZGV4KSA9PiAoe1xuICAgIGlkOiBpdGVtLmlkLFxuICAgIHF1ZXN0aW9uOiBpdGVtLnF1ZXN0aW9uLFxuICAgIGFuc3dlcjogaXRlbS5hbnN3ZXIsXG4gICAgcHJldmlvdXNfcXVlc3Rpb25fdmFsdWU6IGl0ZW0ucHJldmlvdXNRdWVzdGlvblZhbHVlLFxuICAgIHByZXZpb3VzX2Fuc3dlcl92YWx1ZTogaXRlbS5wcmV2aW91c0Fuc3dlclZhbHVlXG4gIH0pKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///81\n')},,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _sagas_filters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(81);\n/**\n * This file provides the functions to make API calls for FAQ.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n *\n */\n\nconst {\n  restUrl,\n  nonce,\n  postId\n} = global["_wlFaqSettings"];\n\nfunction saveFAQItems(faqItems) {\n  return fetch(restUrl, {\n    method: "POST",\n    headers: {\n      "content-type": "application/json",\n      "X-WP-Nonce": nonce\n    },\n    body: JSON.stringify({\n      post_id: postId,\n      faq_items: faqItems\n    })\n  }).then(response => response.json()).then(json => json);\n}\n\nfunction updateFAQItems(faqItems) {\n  return fetch(restUrl, {\n    method: "PUT",\n    headers: {\n      "content-type": "application/json",\n      "X-WP-Nonce": nonce\n    },\n    body: JSON.stringify({\n      post_id: postId,\n      faq_items: Object(_sagas_filters__WEBPACK_IMPORTED_MODULE_0__[/* transformUiDataToApiFormat */ "b"])(faqItems)\n    })\n  }).then(response => response.json()).then(json => json);\n}\n\nfunction getFAQItems() {\n  return fetch(restUrl + "/" + postId, {\n    method: "GET",\n    headers: {\n      "content-type": "application/json",\n      "X-WP-Nonce": nonce\n    }\n  }).then(response => response.json()).then(json => json);\n}\n\n/* harmony default export */ __webpack_exports__["a"] = ({\n  saveFAQItems,\n  getFAQItems,\n  updateFAQItems\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(22)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2FwaS9pbmRleC5qcz8yMGY2Il0sIm5hbWVzIjpbInJlc3RVcmwiLCJub25jZSIsInBvc3RJZCIsImdsb2JhbCIsInNhdmVGQVFJdGVtcyIsImZhcUl0ZW1zIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJwb3N0X2lkIiwiZmFxX2l0ZW1zIiwidGhlbiIsInJlc3BvbnNlIiwianNvbiIsInVwZGF0ZUZBUUl0ZW1zIiwidHJhbnNmb3JtVWlEYXRhVG9BcGlGb3JtYXQiLCJnZXRGQVFJdGVtcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTs7Ozs7OztBQU9BO0FBRUEsTUFBTTtBQUFFQSxTQUFGO0FBQVdDLE9BQVg7QUFBa0JDO0FBQWxCLElBQTZCQyxNQUFNLENBQUMsZ0JBQUQsQ0FBekM7O0FBRUEsU0FBU0MsWUFBVCxDQUFzQkMsUUFBdEIsRUFBZ0M7QUFDOUIsU0FBT0MsS0FBSyxDQUFDTixPQUFELEVBQVU7QUFDcEJPLFVBQU0sRUFBRSxNQURZO0FBRXBCQyxXQUFPLEVBQUU7QUFDUCxzQkFBZ0Isa0JBRFQ7QUFFUCxvQkFBY1A7QUFGUCxLQUZXO0FBTXBCUSxRQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBTCxDQUFlO0FBQ25CQyxhQUFPLEVBQUVWLE1BRFU7QUFFbkJXLGVBQVMsRUFBRVI7QUFGUSxLQUFmO0FBTmMsR0FBVixDQUFMLENBV0pTLElBWEksQ0FXQ0MsUUFBUSxJQUFJQSxRQUFRLENBQUNDLElBQVQsRUFYYixFQVlKRixJQVpJLENBWUNFLElBQUksSUFBSUEsSUFaVCxDQUFQO0FBYUQ7O0FBRUQsU0FBU0MsY0FBVCxDQUF3QlosUUFBeEIsRUFBa0M7QUFDaEMsU0FBT0MsS0FBSyxDQUFDTixPQUFELEVBQVU7QUFDcEJPLFVBQU0sRUFBRSxLQURZO0FBRXBCQyxXQUFPLEVBQUU7QUFDUCxzQkFBZ0Isa0JBRFQ7QUFFUCxvQkFBY1A7QUFGUCxLQUZXO0FBTXBCUSxRQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBTCxDQUFlO0FBQ25CQyxhQUFPLEVBQUVWLE1BRFU7QUFFbkJXLGVBQVMsRUFBRUsseUZBQTBCLENBQUNiLFFBQUQ7QUFGbEIsS0FBZjtBQU5jLEdBQVYsQ0FBTCxDQVdKUyxJQVhJLENBV0NDLFFBQVEsSUFBSUEsUUFBUSxDQUFDQyxJQUFULEVBWGIsRUFZSkYsSUFaSSxDQVlDRSxJQUFJLElBQUlBLElBWlQsQ0FBUDtBQWFEOztBQUVELFNBQVNHLFdBQVQsR0FBdUI7QUFDckIsU0FBT2IsS0FBSyxDQUFDTixPQUFPLEdBQUcsR0FBVixHQUFnQkUsTUFBakIsRUFBeUI7QUFDbkNLLFVBQU0sRUFBRSxLQUQyQjtBQUVuQ0MsV0FBTyxFQUFFO0FBQ1Asc0JBQWdCLGtCQURUO0FBRVAsb0JBQWNQO0FBRlA7QUFGMEIsR0FBekIsQ0FBTCxDQU9KYSxJQVBJLENBT0NDLFFBQVEsSUFBSUEsUUFBUSxDQUFDQyxJQUFULEVBUGIsRUFRSkYsSUFSSSxDQVFDRSxJQUFJLElBQUlBLElBUlQsQ0FBUDtBQVNEOztBQUVjO0FBQUVaLGNBQUY7QUFBZ0JlLGFBQWhCO0FBQTZCRjtBQUE3QixDQUFmLEUiLCJmaWxlIjoiODUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZmlsZSBwcm92aWRlcyB0aGUgZnVuY3Rpb25zIHRvIG1ha2UgQVBJIGNhbGxzIGZvciBGQVEuXG4gKlxuICogQHNpbmNlIDMuMjYuMFxuICogQGF1dGhvciBOYXZlZW4gTXV0aHVzYW15IDxuYXZlZW5Ad29yZGxpZnQuaW8+XG4gKlxuICovXG5pbXBvcnQgeyB0cmFuc2Zvcm1VaURhdGFUb0FwaUZvcm1hdCB9IGZyb20gXCIuLi9zYWdhcy9maWx0ZXJzXCI7XG5cbmNvbnN0IHsgcmVzdFVybCwgbm9uY2UsIHBvc3RJZCB9ID0gZ2xvYmFsW1wiX3dsRmFxU2V0dGluZ3NcIl07XG5cbmZ1bmN0aW9uIHNhdmVGQVFJdGVtcyhmYXFJdGVtcykge1xuICByZXR1cm4gZmV0Y2gocmVzdFVybCwge1xuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgaGVhZGVyczoge1xuICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICBcIlgtV1AtTm9uY2VcIjogbm9uY2VcbiAgICB9LFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIHBvc3RfaWQ6IHBvc3RJZCxcbiAgICAgIGZhcV9pdGVtczogZmFxSXRlbXNcbiAgICB9KVxuICB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAudGhlbihqc29uID0+IGpzb24pO1xufVxuXG5mdW5jdGlvbiB1cGRhdGVGQVFJdGVtcyhmYXFJdGVtcykge1xuICByZXR1cm4gZmV0Y2gocmVzdFVybCwge1xuICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIFwiWC1XUC1Ob25jZVwiOiBub25jZVxuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgcG9zdF9pZDogcG9zdElkLFxuICAgICAgZmFxX2l0ZW1zOiB0cmFuc2Zvcm1VaURhdGFUb0FwaUZvcm1hdChmYXFJdGVtcylcbiAgICB9KVxuICB9KVxuICAgIC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcbiAgICAudGhlbihqc29uID0+IGpzb24pO1xufVxuXG5mdW5jdGlvbiBnZXRGQVFJdGVtcygpIHtcbiAgcmV0dXJuIGZldGNoKHJlc3RVcmwgKyBcIi9cIiArIHBvc3RJZCwge1xuICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICBoZWFkZXJzOiB7XG4gICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgIFwiWC1XUC1Ob25jZVwiOiBub25jZVxuICAgIH1cbiAgfSlcbiAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXG4gICAgLnRoZW4oanNvbiA9PiBqc29uKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgeyBzYXZlRkFRSXRlbXMsIGdldEZBUUl0ZW1zLCB1cGRhdGVGQVFJdGVtcyB9O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///85\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js + 2 modules\nvar redux_saga_core_npm_proxy_esm = __webpack_require__(30);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(10);\n\n// EXTERNAL MODULE: ./node_modules/redux-logger/dist/redux-logger.js\nvar redux_logger = __webpack_require__(56);\nvar redux_logger_default = /*#__PURE__*/__webpack_require__.n(redux_logger);\n\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js + 1 modules\nvar redux_saga_effects_npm_proxy_esm = __webpack_require__(9);\n\n// EXTERNAL MODULE: ./src/faq/constants/action-types.js\nvar action_types = __webpack_require__(21);\n\n// EXTERNAL MODULE: ./src/faq/api/index.js\nvar api = __webpack_require__(85);\n\n// CONCATENATED MODULE: ./src/faq/selectors/index.js\n/**\n * This files provide the selectors to select the state.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\n\n/**\n * Return the faq items from the store\n * @param state The full state of FAQ store\n * @return {[]} Array of FAQ items.\n */\nconst getAllFAQItems = state => state.faqListOptions.faqItems;\n/**\n * Get currently typed question in the FAQ header\n * @param state The full state of the FAQ store.\n * @return {*} String\n */\n\nconst getCurrentQuestion = state => state.faqListOptions.question;\n// EXTERNAL MODULE: ./src/faq/actions/index.js\nvar actions = __webpack_require__(19);\n\n// EXTERNAL MODULE: ./src/faq/sagas/filters.js\nvar filters = __webpack_require__(81);\n\n// EXTERNAL MODULE: ./src/faq/components/faq-edit-item/index.js + 1 modules\nvar faq_edit_item = __webpack_require__(41);\n\n// EXTERNAL MODULE: ./src/faq/constants/faq-hook-constants.js\nvar faq_hook_constants = __webpack_require__(52);\n\n// EXTERNAL MODULE: external "Backbone"\nvar external_Backbone_ = __webpack_require__(29);\n\n// CONCATENATED MODULE: ./src/faq/sagas/index.js\n/**\n * This files provide the sagas for FAQ\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies.\n */\n\n\n\n\n\n\n\n\n\n\nfunction* handleAddNewQuestion(action) {\n  const currentQuestion = yield Object(redux_saga_effects_npm_proxy_esm["f" /* select */])(getCurrentQuestion);\n  const faqItems = [{\n    question: currentQuestion,\n    answer: ""\n  }];\n  const response = yield Object(redux_saga_effects_npm_proxy_esm["a" /* call */])(api["a" /* default */].saveFAQItems, faqItems);\n  const notificationAction = Object(actions["j" /* updateNotificationArea */])();\n  notificationAction.payload = {\n    notificationMessage: response.message,\n    notificationType: response.status\n  };\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(notificationAction);\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(actions["f" /* resetTypedQuestion */])()); // Refresh the screen by getting new FAQ items.\n\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(actions["e" /* requestGetFaqItems */])());\n}\n\nfunction* handleGetFaqItems() {\n  const faqItems = yield Object(redux_saga_effects_npm_proxy_esm["a" /* call */])(api["a" /* default */].getFAQItems);\n  const action = Object(actions["h" /* updateFaqItems */])();\n  action.payload = Object(filters["a" /* transformAPIDataToUi */])(faqItems);\n  Object(external_Backbone_["trigger"])(faq_hook_constants["b" /* FAQ_ITEMS_CHANGED */], action.payload);\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(action);\n}\n\nfunction* handleUpdateFaqItems(action) {\n  const faqItems = yield Object(redux_saga_effects_npm_proxy_esm["f" /* select */])(getAllFAQItems);\n  const payload = action.payload;\n  const faqItemIndex = faqItems.map(e => e.id).indexOf(payload.id);\n\n  switch (payload.type) {\n    case faq_edit_item["b" /* faqEditItemType */].ANSWER:\n      faqItems[faqItemIndex]["answer"] = payload.value;\n      break;\n\n    case faq_edit_item["b" /* faqEditItemType */].QUESTION:\n      faqItems[faqItemIndex]["question"] = payload.value;\n      break;\n  }\n\n  const response = yield Object(redux_saga_effects_npm_proxy_esm["a" /* call */])(api["a" /* default */].updateFAQItems, faqItems);\n  const notificationAction = Object(actions["j" /* updateNotificationArea */])();\n  notificationAction.payload = {\n    notificationMessage: response.message,\n    notificationType: response.status\n  };\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(notificationAction);\n  yield Object(redux_saga_effects_npm_proxy_esm["d" /* put */])(Object(actions["e" /* requestGetFaqItems */])());\n}\n\nfunction* rootSaga() {\n  yield Object(redux_saga_effects_npm_proxy_esm["i" /* takeLatest */])(action_types["d" /* REQUEST_FAQ_ADD_NEW_QUESTION */], handleAddNewQuestion);\n  yield Object(redux_saga_effects_npm_proxy_esm["i" /* takeLatest */])(action_types["e" /* REQUEST_GET_FAQ_ITEMS */], handleGetFaqItems);\n  yield Object(redux_saga_effects_npm_proxy_esm["i" /* takeLatest */])(action_types["h" /* UPDATE_FAQ_ITEM */], handleUpdateFaqItems);\n}\n\n/* harmony default export */ var sagas = (rootSaga);\n// EXTERNAL MODULE: ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js + 1 modules\nvar redux_toolkit_esm = __webpack_require__(32);\n\n// CONCATENATED MODULE: ./src/faq/reducers/faq-items-list-reducer.js\n/**\n * This file provides the reducers for the list view of FAQ items.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n *\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies.\n */\n\n\nconst faqItemsListReducer = Object(redux_toolkit_esm["a" /* createReducer */])(null, {\n  [action_types["i" /* UPDATE_FAQ_ITEMS */]]: (state, action) => {\n    state.faqItems = action.payload;\n  },\n  [action_types["l" /* UPDATE_QUESTION_ON_INPUT_CHANGE */]]: (state, action) => {\n    state.question = action.payload;\n  },\n  [action_types["c" /* QUESTION_SELECTED_BY_USER */]]: (state, action) => {\n    state.selectedFaqId = action.payload;\n  },\n  [action_types["b" /* CLOSE_EDIT_SCREEN */]]: (state, action) => {\n    state.selectedFaqId = null;\n  },\n  [action_types["g" /* RESET_TYPED_QUESTION */]]: (state, action) => {\n    state.question = "";\n  }\n});\n// CONCATENATED MODULE: ./src/faq/reducers/faq-modal-reducer.js\n/**\n * This file provides the reducers for the FAQ modal.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n *\n */\n\n/**\n * External dependencies\n */\n\n/**\n * Internal dependencies.\n */\n\n\nconst faqModalReducer = Object(redux_toolkit_esm["a" /* createReducer */])(null, {\n  [action_types["j" /* UPDATE_MODAL_STATUS */]]: (state, action) => {\n    state.isModalOpened = action.payload;\n  },\n  [action_types["a" /* ANSWER_SELECTED_BY_USER */]]: (state, action) => {\n    const {\n      selectedAnswer\n    } = action.payload;\n    state.selectedAnswer = selectedAnswer; // Open the modal when the answer is selected by user.\n\n    state.isModalOpened = true;\n  }\n});\n// CONCATENATED MODULE: ./src/faq/reducers/faq-notification-reducer.js\n/**\n * This file provides the reducers for the FAQ notification area.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n *\n */\n\n/**\n * External dependencies\n */\n\n\n/**\n * Internal dependencies.\n */\n\nconst faqNotificationReducer = Object(redux_toolkit_esm["a" /* createReducer */])(null, {\n  [action_types["k" /* UPDATE_NOTIFICATION_AREA */]]: (state, action) => {\n    const {\n      notificationType,\n      notificationMessage\n    } = action.payload;\n    state.notificationMessage = notificationMessage;\n    state.notificationType = notificationType;\n  }\n});\n// CONCATENATED MODULE: ./src/faq/reducers/index.js\n/**\n * This file provides the reducers for redux store.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n *\n */\n\n/**\n * External dependencies.\n */\n\n/**\n * Internal dependencies.\n */\n\n\n\n\nconst faqReducer = Object(redux["combineReducers"])({\n  faqListOptions: faqItemsListReducer,\n  faqModalOptions: faqModalReducer,\n  faqNotificationArea: faqNotificationReducer\n});\n// CONCATENATED MODULE: ./src/faq/store/index.js\n/**\n * This file provides the redux store for FAQ meta box.\n *\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n *\n */\n\n/**\n * External dependencies\n */\n\n\n\n/**\n * Internal dependencies\n */\n\n\n\nconst FAQ_INITIAL_STATE = {\n  faqListOptions: {\n    question: "",\n    faqItems: [],\n    selectedFaqId: null\n  },\n  faqModalOptions: {\n    isModalOpened: false,\n    selectedAnswer: ""\n  },\n  faqNotificationArea: {\n    notificationMessage: "",\n    notificationType: ""\n  }\n};\nconst sagaMiddleware = Object(redux_saga_core_npm_proxy_esm["a" /* default */])();\nconst store = Object(redux["createStore"])(faqReducer, FAQ_INITIAL_STATE, Object(redux["applyMiddleware"])(sagaMiddleware, redux_logger_default.a));\nsagaMiddleware.run(sagas);\n/* harmony default export */ var faq_store = __webpack_exports__["a"] = (store);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///86\n')},,,,,,,,,,,,,,,,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29);\n/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(backbone__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants_faq_hook_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(52);\n/* harmony import */ var _validators_faq_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(73);\n/**\n * TinyMceToolbarHandler handles the toolbar button.\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\n\n/**\n * Internal dependencies.\n */\n\n\n\nconst TINYMCE_TOOLBAR_BUTTON_NAME = "wl-faq-toolbar-button";\n\nclass TinymceToolbarHandler {\n  /**\n   * Construct the TinymceToolbarHandler\n   * @param editor {tinymce.Editor} instance.\n   * @param highlightHandler {TinymceHighlightHandler} instance.\n   */\n  constructor(editor, highlightHandler) {\n    this.editor = editor;\n    this.highlightHandler = highlightHandler;\n  }\n  /**\n   * Sets the button text based on the text selected by user.\n   * @param selectedText The text selected by user.\n   * @param button Button present in toolbar.\n   * @param container This container holds the button.\n   */\n\n\n  setButtonTextBasedOnSelectedText(selectedText, button, container) {\n    if (_validators_faq_validator__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"].isQuestion(selectedText)) {\n      button.innerText = "Add Question";\n      container.setAttribute("aria-label", "Add Question");\n    } else {\n      button.innerText = "Add Answer";\n      container.setAttribute("aria-label", "Add Answer");\n    }\n  }\n  /**\n   * When there is no selection disable the button, determine\n   * if it is question or answer and change the button text.\n   */\n\n\n  changeButtonStateOnSelectedText() {\n    const editor = this.editor;\n    const selectedText = editor.selection.getContent({\n      format: "text"\n    });\n    const container = document.getElementById(TINYMCE_TOOLBAR_BUTTON_NAME);\n    const button = container.getElementsByTagName("button")[0];\n\n    if (selectedText.length > 0) {\n      container.classList.remove("mce-disabled");\n      button.disabled = false;\n      this.setButtonTextBasedOnSelectedText(selectedText, button, container);\n    } else {\n      container.classList.add("mce-disabled");\n      button.disabled = true;\n    }\n  }\n  /**\n   * Listen for node changes, and alter the state of\n   * the button according to the text selected.\n   */\n\n\n  changeToolBarButtonStateBasedOnTextSelected() {\n    const editor = this.editor;\n    editor.on("NodeChange", e => {\n      this.changeButtonStateOnSelectedText();\n    });\n  }\n  /**\n   * Adds the button to the toolbar.\n   */\n\n\n  addButtonToToolBar() {\n    const editor = this.editor;\n    const handler = this;\n    editor.addButton(TINYMCE_TOOLBAR_BUTTON_NAME, {\n      text: "Add Question or Answer",\n      id: TINYMCE_TOOLBAR_BUTTON_NAME,\n      onclick: function () {\n        const selectedText = editor.selection.getContent({\n          format: "text"\n        });\n        handler.highlightHandler.highlightSelectedText(selectedText);\n        Object(backbone__WEBPACK_IMPORTED_MODULE_0__["trigger"])(_constants_faq_hook_constants__WEBPACK_IMPORTED_MODULE_1__[/* FAQ_EVENT_HANDLER_SELECTION_CHANGED */ "a"], selectedText);\n      }\n    });\n    this.changeToolBarButtonStateBasedOnTextSelected();\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (TinymceToolbarHandler);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2hvb2tzL3RpbnltY2UvdGlueW1jZS10b29sYmFyLWhhbmRsZXIuanM/M2JiMiJdLCJuYW1lcyI6WyJUSU5ZTUNFX1RPT0xCQVJfQlVUVE9OX05BTUUiLCJUaW55bWNlVG9vbGJhckhhbmRsZXIiLCJjb25zdHJ1Y3RvciIsImVkaXRvciIsImhpZ2hsaWdodEhhbmRsZXIiLCJzZXRCdXR0b25UZXh0QmFzZWRPblNlbGVjdGVkVGV4dCIsInNlbGVjdGVkVGV4dCIsImJ1dHRvbiIsImNvbnRhaW5lciIsIkZhcVZhbGlkYXRvciIsImlzUXVlc3Rpb24iLCJpbm5lclRleHQiLCJzZXRBdHRyaWJ1dGUiLCJjaGFuZ2VCdXR0b25TdGF0ZU9uU2VsZWN0ZWRUZXh0Iiwic2VsZWN0aW9uIiwiZ2V0Q29udGVudCIsImZvcm1hdCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImxlbmd0aCIsImNsYXNzTGlzdCIsInJlbW92ZSIsImRpc2FibGVkIiwiYWRkIiwiY2hhbmdlVG9vbEJhckJ1dHRvblN0YXRlQmFzZWRPblRleHRTZWxlY3RlZCIsIm9uIiwiZSIsImFkZEJ1dHRvblRvVG9vbEJhciIsImhhbmRsZXIiLCJhZGRCdXR0b24iLCJ0ZXh0IiwiaWQiLCJvbmNsaWNrIiwiaGlnaGxpZ2h0U2VsZWN0ZWRUZXh0IiwidHJpZ2dlciIsIkZBUV9FVkVOVF9IQU5ETEVSX1NFTEVDVElPTl9DSEFOR0VEIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7QUFNQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EsTUFBTUEsMkJBQTJCLEdBQUcsdUJBQXBDOztBQUVBLE1BQU1DLHFCQUFOLENBQTRCO0FBQzFCOzs7OztBQUtBQyxhQUFXLENBQUNDLE1BQUQsRUFBU0MsZ0JBQVQsRUFBMkI7QUFDcEMsU0FBS0QsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsU0FBS0MsZ0JBQUwsR0FBd0JBLGdCQUF4QjtBQUNEO0FBRUQ7Ozs7Ozs7O0FBTUFDLGtDQUFnQyxDQUFDQyxZQUFELEVBQWVDLE1BQWYsRUFBdUJDLFNBQXZCLEVBQWtDO0FBQ2hFLFFBQUlDLHlFQUFZLENBQUNDLFVBQWIsQ0FBd0JKLFlBQXhCLENBQUosRUFBMkM7QUFDekNDLFlBQU0sQ0FBQ0ksU0FBUCxHQUFtQixjQUFuQjtBQUNBSCxlQUFTLENBQUNJLFlBQVYsQ0FBdUIsWUFBdkIsRUFBcUMsY0FBckM7QUFDRCxLQUhELE1BR087QUFDTEwsWUFBTSxDQUFDSSxTQUFQLEdBQW1CLFlBQW5CO0FBQ0FILGVBQVMsQ0FBQ0ksWUFBVixDQUF1QixZQUF2QixFQUFxQyxZQUFyQztBQUNEO0FBQ0Y7QUFFRDs7Ozs7O0FBSUFDLGlDQUErQixHQUFHO0FBQ2hDLFVBQU1WLE1BQU0sR0FBRyxLQUFLQSxNQUFwQjtBQUNBLFVBQU1HLFlBQVksR0FBR0gsTUFBTSxDQUFDVyxTQUFQLENBQWlCQyxVQUFqQixDQUE0QjtBQUFFQyxZQUFNLEVBQUU7QUFBVixLQUE1QixDQUFyQjtBQUNBLFVBQU1SLFNBQVMsR0FBR1MsUUFBUSxDQUFDQyxjQUFULENBQXdCbEIsMkJBQXhCLENBQWxCO0FBQ0EsVUFBTU8sTUFBTSxHQUFHQyxTQUFTLENBQUNXLG9CQUFWLENBQStCLFFBQS9CLEVBQXlDLENBQXpDLENBQWY7O0FBQ0EsUUFBSWIsWUFBWSxDQUFDYyxNQUFiLEdBQXNCLENBQTFCLEVBQTZCO0FBQzNCWixlQUFTLENBQUNhLFNBQVYsQ0FBb0JDLE1BQXBCLENBQTJCLGNBQTNCO0FBQ0FmLFlBQU0sQ0FBQ2dCLFFBQVAsR0FBa0IsS0FBbEI7QUFDQSxXQUFLbEIsZ0NBQUwsQ0FBc0NDLFlBQXRDLEVBQW9EQyxNQUFwRCxFQUE0REMsU0FBNUQ7QUFDRCxLQUpELE1BSU87QUFDTEEsZUFBUyxDQUFDYSxTQUFWLENBQW9CRyxHQUFwQixDQUF3QixjQUF4QjtBQUNBakIsWUFBTSxDQUFDZ0IsUUFBUCxHQUFrQixJQUFsQjtBQUNEO0FBQ0Y7QUFFRDs7Ozs7O0FBSUFFLDZDQUEyQyxHQUFHO0FBQzVDLFVBQU10QixNQUFNLEdBQUcsS0FBS0EsTUFBcEI7QUFDQUEsVUFBTSxDQUFDdUIsRUFBUCxDQUFVLFlBQVYsRUFBd0JDLENBQUMsSUFBSTtBQUMzQixXQUFLZCwrQkFBTDtBQUNELEtBRkQ7QUFHRDtBQUVEOzs7OztBQUdBZSxvQkFBa0IsR0FBRztBQUNuQixVQUFNekIsTUFBTSxHQUFHLEtBQUtBLE1BQXBCO0FBQ0EsVUFBTTBCLE9BQU8sR0FBRyxJQUFoQjtBQUNBMUIsVUFBTSxDQUFDMkIsU0FBUCxDQUFpQjlCLDJCQUFqQixFQUE4QztBQUM1QytCLFVBQUksRUFBRSx3QkFEc0M7QUFFNUNDLFFBQUUsRUFBRWhDLDJCQUZ3QztBQUc1Q2lDLGFBQU8sRUFBRSxZQUFXO0FBQ2xCLGNBQU0zQixZQUFZLEdBQUdILE1BQU0sQ0FBQ1csU0FBUCxDQUFpQkMsVUFBakIsQ0FBNEI7QUFBRUMsZ0JBQU0sRUFBRTtBQUFWLFNBQTVCLENBQXJCO0FBQ0FhLGVBQU8sQ0FBQ3pCLGdCQUFSLENBQXlCOEIscUJBQXpCLENBQStDNUIsWUFBL0M7QUFDQTZCLGdFQUFPLENBQUNDLHlHQUFELEVBQXNDOUIsWUFBdEMsQ0FBUDtBQUNEO0FBUDJDLEtBQTlDO0FBU0EsU0FBS21CLDJDQUFMO0FBQ0Q7O0FBekV5Qjs7QUE0RWJ4Qiw4RUFBZiIsImZpbGUiOiIxMDcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRpbnlNY2VUb29sYmFySGFuZGxlciBoYW5kbGVzIHRoZSB0b29sYmFyIGJ1dHRvbi5cbiAqIEBzaW5jZSAzLjI2LjBcbiAqIEBhdXRob3IgTmF2ZWVuIE11dGh1c2FteSA8bmF2ZWVuQHdvcmRsaWZ0LmlvPlxuICovXG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzLlxuICovXG5pbXBvcnQgeyB0cmlnZ2VyIH0gZnJvbSBcImJhY2tib25lXCI7XG5pbXBvcnQgeyBGQVFfRVZFTlRfSEFORExFUl9TRUxFQ1RJT05fQ0hBTkdFRCB9IGZyb20gXCIuLi8uLi9jb25zdGFudHMvZmFxLWhvb2stY29uc3RhbnRzXCI7XG5pbXBvcnQgRmFxVmFsaWRhdG9yIGZyb20gXCIuLi92YWxpZGF0b3JzL2ZhcS12YWxpZGF0b3JcIjtcbmNvbnN0IFRJTllNQ0VfVE9PTEJBUl9CVVRUT05fTkFNRSA9IFwid2wtZmFxLXRvb2xiYXItYnV0dG9uXCI7XG5cbmNsYXNzIFRpbnltY2VUb29sYmFySGFuZGxlciB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgdGhlIFRpbnltY2VUb29sYmFySGFuZGxlclxuICAgKiBAcGFyYW0gZWRpdG9yIHt0aW55bWNlLkVkaXRvcn0gaW5zdGFuY2UuXG4gICAqIEBwYXJhbSBoaWdobGlnaHRIYW5kbGVyIHtUaW55bWNlSGlnaGxpZ2h0SGFuZGxlcn0gaW5zdGFuY2UuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihlZGl0b3IsIGhpZ2hsaWdodEhhbmRsZXIpIHtcbiAgICB0aGlzLmVkaXRvciA9IGVkaXRvcjtcbiAgICB0aGlzLmhpZ2hsaWdodEhhbmRsZXIgPSBoaWdobGlnaHRIYW5kbGVyO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldHMgdGhlIGJ1dHRvbiB0ZXh0IGJhc2VkIG9uIHRoZSB0ZXh0IHNlbGVjdGVkIGJ5IHVzZXIuXG4gICAqIEBwYXJhbSBzZWxlY3RlZFRleHQgVGhlIHRleHQgc2VsZWN0ZWQgYnkgdXNlci5cbiAgICogQHBhcmFtIGJ1dHRvbiBCdXR0b24gcHJlc2VudCBpbiB0b29sYmFyLlxuICAgKiBAcGFyYW0gY29udGFpbmVyIFRoaXMgY29udGFpbmVyIGhvbGRzIHRoZSBidXR0b24uXG4gICAqL1xuICBzZXRCdXR0b25UZXh0QmFzZWRPblNlbGVjdGVkVGV4dChzZWxlY3RlZFRleHQsIGJ1dHRvbiwgY29udGFpbmVyKSB7XG4gICAgaWYgKEZhcVZhbGlkYXRvci5pc1F1ZXN0aW9uKHNlbGVjdGVkVGV4dCkpIHtcbiAgICAgIGJ1dHRvbi5pbm5lclRleHQgPSBcIkFkZCBRdWVzdGlvblwiO1xuICAgICAgY29udGFpbmVyLnNldEF0dHJpYnV0ZShcImFyaWEtbGFiZWxcIiwgXCJBZGQgUXVlc3Rpb25cIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1dHRvbi5pbm5lclRleHQgPSBcIkFkZCBBbnN3ZXJcIjtcbiAgICAgIGNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoXCJhcmlhLWxhYmVsXCIsIFwiQWRkIEFuc3dlclwiKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogV2hlbiB0aGVyZSBpcyBubyBzZWxlY3Rpb24gZGlzYWJsZSB0aGUgYnV0dG9uLCBkZXRlcm1pbmVcbiAgICogaWYgaXQgaXMgcXVlc3Rpb24gb3IgYW5zd2VyIGFuZCBjaGFuZ2UgdGhlIGJ1dHRvbiB0ZXh0LlxuICAgKi9cbiAgY2hhbmdlQnV0dG9uU3RhdGVPblNlbGVjdGVkVGV4dCgpIHtcbiAgICBjb25zdCBlZGl0b3IgPSB0aGlzLmVkaXRvcjtcbiAgICBjb25zdCBzZWxlY3RlZFRleHQgPSBlZGl0b3Iuc2VsZWN0aW9uLmdldENvbnRlbnQoeyBmb3JtYXQ6IFwidGV4dFwiIH0pO1xuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFRJTllNQ0VfVE9PTEJBUl9CVVRUT05fTkFNRSk7XG4gICAgY29uc3QgYnV0dG9uID0gY29udGFpbmVyLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiYnV0dG9uXCIpWzBdO1xuICAgIGlmIChzZWxlY3RlZFRleHQubGVuZ3RoID4gMCkge1xuICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC5yZW1vdmUoXCJtY2UtZGlzYWJsZWRcIik7XG4gICAgICBidXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMuc2V0QnV0dG9uVGV4dEJhc2VkT25TZWxlY3RlZFRleHQoc2VsZWN0ZWRUZXh0LCBidXR0b24sIGNvbnRhaW5lcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwibWNlLWRpc2FibGVkXCIpO1xuICAgICAgYnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogTGlzdGVuIGZvciBub2RlIGNoYW5nZXMsIGFuZCBhbHRlciB0aGUgc3RhdGUgb2ZcbiAgICogdGhlIGJ1dHRvbiBhY2NvcmRpbmcgdG8gdGhlIHRleHQgc2VsZWN0ZWQuXG4gICAqL1xuICBjaGFuZ2VUb29sQmFyQnV0dG9uU3RhdGVCYXNlZE9uVGV4dFNlbGVjdGVkKCkge1xuICAgIGNvbnN0IGVkaXRvciA9IHRoaXMuZWRpdG9yO1xuICAgIGVkaXRvci5vbihcIk5vZGVDaGFuZ2VcIiwgZSA9PiB7XG4gICAgICB0aGlzLmNoYW5nZUJ1dHRvblN0YXRlT25TZWxlY3RlZFRleHQoKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRzIHRoZSBidXR0b24gdG8gdGhlIHRvb2xiYXIuXG4gICAqL1xuICBhZGRCdXR0b25Ub1Rvb2xCYXIoKSB7XG4gICAgY29uc3QgZWRpdG9yID0gdGhpcy5lZGl0b3I7XG4gICAgY29uc3QgaGFuZGxlciA9IHRoaXM7XG4gICAgZWRpdG9yLmFkZEJ1dHRvbihUSU5ZTUNFX1RPT0xCQVJfQlVUVE9OX05BTUUsIHtcbiAgICAgIHRleHQ6IFwiQWRkIFF1ZXN0aW9uIG9yIEFuc3dlclwiLFxuICAgICAgaWQ6IFRJTllNQ0VfVE9PTEJBUl9CVVRUT05fTkFNRSxcbiAgICAgIG9uY2xpY2s6IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zdCBzZWxlY3RlZFRleHQgPSBlZGl0b3Iuc2VsZWN0aW9uLmdldENvbnRlbnQoeyBmb3JtYXQ6IFwidGV4dFwiIH0pO1xuICAgICAgICBoYW5kbGVyLmhpZ2hsaWdodEhhbmRsZXIuaGlnaGxpZ2h0U2VsZWN0ZWRUZXh0KHNlbGVjdGVkVGV4dCk7XG4gICAgICAgIHRyaWdnZXIoRkFRX0VWRU5UX0hBTkRMRVJfU0VMRUNUSU9OX0NIQU5HRUQsIHNlbGVjdGVkVGV4dCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5jaGFuZ2VUb29sQmFyQnV0dG9uU3RhdGVCYXNlZE9uVGV4dFNlbGVjdGVkKCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGlueW1jZVRvb2xiYXJIYW5kbGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///107\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _constants_faq_hook_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(52);\n/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(29);\n/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(backbone__WEBPACK_IMPORTED_MODULE_1__);\n/**\n * TinyMceHighlightHandler handles the toolbar button.\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\n\n\nconst QUESTION_HIGHLIGHT_COLOR = "#00ff00";\nconst ANSWER_HIGHLIGHT_COLOR = "#00FFFF";\n\nclass TinymceHighlightHandler {\n  /**\n   * Construct highlight handler instance.\n   * @param editor The Tinymce editor instance.\n   * @param store Redux store.\n   */\n  constructor(editor, store) {\n    this.editor = editor;\n    this.store = store;\n    this.highlightWhenStoreDataChange();\n  }\n\n  highlightWhenStoreDataChange() {\n    Object(backbone__WEBPACK_IMPORTED_MODULE_1__["on"])(_constants_faq_hook_constants__WEBPACK_IMPORTED_MODULE_0__[/* FAQ_ITEMS_CHANGED */ "b"], faqItems => {\n      faqItems.map(e => {\n        this.highlightSelectedText(e.question);\n        this.highlightSelectedText(e.answer);\n      });\n    });\n  }\n\n  highlightSelectedText(selectedText) {\n    const editor = this.editor;\n    const highlightClassName = global["_wlFaqSettings"]["faqHighlightClass"];\n    editor.selection.setContent("<span class=\'" + highlightClassName + "\' style=\'background-color: #ffff00;\'>" + selectedText + "</span>");\n  }\n\n}\n\n/* harmony default export */ __webpack_exports__["a"] = (TinymceHighlightHandler);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(22)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2hvb2tzL3RpbnltY2UvdGlueW1jZS1oaWdobGlnaHQtaGFuZGxlci5qcz8xNTRlIl0sIm5hbWVzIjpbIlFVRVNUSU9OX0hJR0hMSUdIVF9DT0xPUiIsIkFOU1dFUl9ISUdITElHSFRfQ09MT1IiLCJUaW55bWNlSGlnaGxpZ2h0SGFuZGxlciIsImNvbnN0cnVjdG9yIiwiZWRpdG9yIiwic3RvcmUiLCJoaWdobGlnaHRXaGVuU3RvcmVEYXRhQ2hhbmdlIiwib24iLCJGQVFfSVRFTVNfQ0hBTkdFRCIsImZhcUl0ZW1zIiwibWFwIiwiZSIsImhpZ2hsaWdodFNlbGVjdGVkVGV4dCIsInF1ZXN0aW9uIiwiYW5zd2VyIiwic2VsZWN0ZWRUZXh0IiwiaGlnaGxpZ2h0Q2xhc3NOYW1lIiwiZ2xvYmFsIiwic2VsZWN0aW9uIiwic2V0Q29udGVudCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7O0FBTUE7QUFDQTtBQUVBLE1BQU1BLHdCQUF3QixHQUFHLFNBQWpDO0FBRUEsTUFBTUMsc0JBQXNCLEdBQUcsU0FBL0I7O0FBRUEsTUFBTUMsdUJBQU4sQ0FBOEI7QUFDNUI7Ozs7O0FBS0FDLGFBQVcsQ0FBQ0MsTUFBRCxFQUFTQyxLQUFULEVBQWdCO0FBQ3pCLFNBQUtELE1BQUwsR0FBY0EsTUFBZDtBQUNBLFNBQUtDLEtBQUwsR0FBYUEsS0FBYjtBQUNBLFNBQUtDLDRCQUFMO0FBQ0Q7O0FBRURBLDhCQUE0QixHQUFHO0FBQzdCQyx1REFBRSxDQUFDQyx1RkFBRCxFQUFvQkMsUUFBUSxJQUFJO0FBQ2hDQSxjQUFRLENBQUNDLEdBQVQsQ0FBYUMsQ0FBQyxJQUFJO0FBQ2hCLGFBQUtDLHFCQUFMLENBQTJCRCxDQUFDLENBQUNFLFFBQTdCO0FBQ0EsYUFBS0QscUJBQUwsQ0FBMkJELENBQUMsQ0FBQ0csTUFBN0I7QUFDRCxPQUhEO0FBSUQsS0FMQyxDQUFGO0FBTUQ7O0FBRURGLHVCQUFxQixDQUFDRyxZQUFELEVBQWU7QUFDbEMsVUFBTVgsTUFBTSxHQUFHLEtBQUtBLE1BQXBCO0FBQ0EsVUFBTVksa0JBQWtCLEdBQUdDLE1BQU0sQ0FBQyxnQkFBRCxDQUFOLENBQXlCLG1CQUF6QixDQUEzQjtBQUNBYixVQUFNLENBQUNjLFNBQVAsQ0FBaUJDLFVBQWpCLENBQ0Usa0JBQWtCSCxrQkFBbEIsR0FBdUMsdUNBQXZDLEdBQWlGRCxZQUFqRixHQUFnRyxTQURsRztBQUdEOztBQTNCMkI7O0FBOEJmYixnRkFBZixFIiwiZmlsZSI6IjEwOC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGlueU1jZUhpZ2hsaWdodEhhbmRsZXIgaGFuZGxlcyB0aGUgdG9vbGJhciBidXR0b24uXG4gKiBAc2luY2UgMy4yNi4wXG4gKiBAYXV0aG9yIE5hdmVlbiBNdXRodXNhbXkgPG5hdmVlbkB3b3JkbGlmdC5pbz5cbiAqL1xuXG5pbXBvcnQgeyBGQVFfSVRFTVNfQ0hBTkdFRCB9IGZyb20gXCIuLi8uLi9jb25zdGFudHMvZmFxLWhvb2stY29uc3RhbnRzXCI7XG5pbXBvcnQge29ufSBmcm9tIFwiYmFja2JvbmVcIlxuXG5jb25zdCBRVUVTVElPTl9ISUdITElHSFRfQ09MT1IgPSBcIiMwMGZmMDBcIjtcblxuY29uc3QgQU5TV0VSX0hJR0hMSUdIVF9DT0xPUiA9IFwiIzAwRkZGRlwiO1xuXG5jbGFzcyBUaW55bWNlSGlnaGxpZ2h0SGFuZGxlciB7XG4gIC8qKlxuICAgKiBDb25zdHJ1Y3QgaGlnaGxpZ2h0IGhhbmRsZXIgaW5zdGFuY2UuXG4gICAqIEBwYXJhbSBlZGl0b3IgVGhlIFRpbnltY2UgZWRpdG9yIGluc3RhbmNlLlxuICAgKiBAcGFyYW0gc3RvcmUgUmVkdXggc3RvcmUuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihlZGl0b3IsIHN0b3JlKSB7XG4gICAgdGhpcy5lZGl0b3IgPSBlZGl0b3I7XG4gICAgdGhpcy5zdG9yZSA9IHN0b3JlO1xuICAgIHRoaXMuaGlnaGxpZ2h0V2hlblN0b3JlRGF0YUNoYW5nZSgpXG4gIH1cblxuICBoaWdobGlnaHRXaGVuU3RvcmVEYXRhQ2hhbmdlKCkge1xuICAgIG9uKEZBUV9JVEVNU19DSEFOR0VELCBmYXFJdGVtcyA9PiB7XG4gICAgICBmYXFJdGVtcy5tYXAoZSA9PiB7XG4gICAgICAgIHRoaXMuaGlnaGxpZ2h0U2VsZWN0ZWRUZXh0KGUucXVlc3Rpb24pO1xuICAgICAgICB0aGlzLmhpZ2hsaWdodFNlbGVjdGVkVGV4dChlLmFuc3dlcik7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGhpZ2hsaWdodFNlbGVjdGVkVGV4dChzZWxlY3RlZFRleHQpIHtcbiAgICBjb25zdCBlZGl0b3IgPSB0aGlzLmVkaXRvcjtcbiAgICBjb25zdCBoaWdobGlnaHRDbGFzc05hbWUgPSBnbG9iYWxbXCJfd2xGYXFTZXR0aW5nc1wiXVtcImZhcUhpZ2hsaWdodENsYXNzXCJdO1xuICAgIGVkaXRvci5zZWxlY3Rpb24uc2V0Q29udGVudChcbiAgICAgIFwiPHNwYW4gY2xhc3M9J1wiICsgaGlnaGxpZ2h0Q2xhc3NOYW1lICsgXCInIHN0eWxlPSdiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZjAwOyc+XCIgKyBzZWxlY3RlZFRleHQgKyBcIjwvc3Bhbj5cIlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgVGlueW1jZUhpZ2hsaWdodEhhbmRsZXI7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///108\n')},,,,,,,,,,,,,,,,,,,,,function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2NvbXBvbmVudHMvZmFxLWVkaXQtYnV0dG9uLWdyb3VwL2luZGV4LnNjc3M/MmNhYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIxMjkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///129\n")},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2NvbXBvbmVudHMvd2wtYWN0aW9uLWJ1dHRvbi9pbmRleC5zY3NzPzY3ZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTMwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///130\n")},,,,,,,,,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(29);\n/* harmony import */ var backbone__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(backbone__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _tinymce_toolbar_handler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(107);\n/* harmony import */ var _tinymce_highlight_handler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(108);\n/* harmony import */ var _constants_faq_hook_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(52);\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(86);\n/**\n * This file is automatically loaded by the tinymce via registering in backend.\n * It emits events captured by the faq event handler class.\n * @since 3.26.0\n * @author Naveen Muthusamy <naveen@wordlift.io>\n */\n\n/**\n * External dependencies.\n */\n\n/**\n * Internal dependencies.\n */\n\n\n\n\n\nconst FAQ_TINYMCE_PLUGIN_NAME = "wl_faq_tinymce";\nconst tinymce = global["tinymce"];\ntinymce.PluginManager.add(FAQ_TINYMCE_PLUGIN_NAME, function (editor) {\n  const highlightHandler = new _tinymce_highlight_handler__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"](editor);\n  const toolBarHandler = new _tinymce_toolbar_handler__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"](editor, highlightHandler);\n  toolBarHandler.addButtonToToolBar();\n});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(22)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZmFxL2hvb2tzL3RpbnltY2UvdGlueW1jZS1mYXEtcGx1Z2luLmpzPzQ1YmEiXSwibmFtZXMiOlsiRkFRX1RJTllNQ0VfUExVR0lOX05BTUUiLCJ0aW55bWNlIiwiZ2xvYmFsIiwiUGx1Z2luTWFuYWdlciIsImFkZCIsImVkaXRvciIsImhpZ2hsaWdodEhhbmRsZXIiLCJUaW55bWNlSGlnaGxpZ2h0SGFuZGxlciIsInRvb2xCYXJIYW5kbGVyIiwiVGlueW1jZVRvb2xiYXJIYW5kbGVyIiwiYWRkQnV0dG9uVG9Ub29sQmFyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7Ozs7O0FBT0E7OztBQUdBO0FBRUE7Ozs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUVBLE1BQU1BLHVCQUF1QixHQUFHLGdCQUFoQztBQUNBLE1BQU1DLE9BQU8sR0FBR0MsTUFBTSxDQUFDLFNBQUQsQ0FBdEI7QUFDQUQsT0FBTyxDQUFDRSxhQUFSLENBQXNCQyxHQUF0QixDQUEwQkosdUJBQTFCLEVBQW1ELFVBQVNLLE1BQVQsRUFBaUI7QUFDbEUsUUFBTUMsZ0JBQWdCLEdBQUcsSUFBSUMsMEVBQUosQ0FBNEJGLE1BQTVCLENBQXpCO0FBQ0EsUUFBTUcsY0FBYyxHQUFHLElBQUlDLHdFQUFKLENBQTBCSixNQUExQixFQUFrQ0MsZ0JBQWxDLENBQXZCO0FBQ0FFLGdCQUFjLENBQUNFLGtCQUFmO0FBQ0QsQ0FKRCxFIiwiZmlsZSI6IjE0NC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBmaWxlIGlzIGF1dG9tYXRpY2FsbHkgbG9hZGVkIGJ5IHRoZSB0aW55bWNlIHZpYSByZWdpc3RlcmluZyBpbiBiYWNrZW5kLlxuICogSXQgZW1pdHMgZXZlbnRzIGNhcHR1cmVkIGJ5IHRoZSBmYXEgZXZlbnQgaGFuZGxlciBjbGFzcy5cbiAqIEBzaW5jZSAzLjI2LjBcbiAqIEBhdXRob3IgTmF2ZWVuIE11dGh1c2FteSA8bmF2ZWVuQHdvcmRsaWZ0LmlvPlxuICovXG5cbi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzLlxuICovXG5pbXBvcnQgeyB0cmlnZ2VyIH0gZnJvbSBcImJhY2tib25lXCI7XG5cbi8qKlxuICogSW50ZXJuYWwgZGVwZW5kZW5jaWVzLlxuICovXG5pbXBvcnQgVGlueW1jZVRvb2xiYXJIYW5kbGVyIGZyb20gXCIuL3RpbnltY2UtdG9vbGJhci1oYW5kbGVyXCI7XG5pbXBvcnQgVGlueW1jZUhpZ2hsaWdodEhhbmRsZXIgZnJvbSBcIi4vdGlueW1jZS1oaWdobGlnaHQtaGFuZGxlclwiO1xuaW1wb3J0IHsgRkFRX1RJTllNQ0VfRURJVE9SX1JFQURZIH0gZnJvbSBcIi4uLy4uL2NvbnN0YW50cy9mYXEtaG9vay1jb25zdGFudHNcIjtcbmltcG9ydCBzdG9yZSBmcm9tIFwiLi4vLi4vc3RvcmVcIjtcblxuY29uc3QgRkFRX1RJTllNQ0VfUExVR0lOX05BTUUgPSBcIndsX2ZhcV90aW55bWNlXCI7XG5jb25zdCB0aW55bWNlID0gZ2xvYmFsW1widGlueW1jZVwiXTtcbnRpbnltY2UuUGx1Z2luTWFuYWdlci5hZGQoRkFRX1RJTllNQ0VfUExVR0lOX05BTUUsIGZ1bmN0aW9uKGVkaXRvcikge1xuICBjb25zdCBoaWdobGlnaHRIYW5kbGVyID0gbmV3IFRpbnltY2VIaWdobGlnaHRIYW5kbGVyKGVkaXRvcik7XG4gIGNvbnN0IHRvb2xCYXJIYW5kbGVyID0gbmV3IFRpbnltY2VUb29sYmFySGFuZGxlcihlZGl0b3IsIGhpZ2hsaWdodEhhbmRsZXIpO1xuICB0b29sQmFySGFuZGxlci5hZGRCdXR0b25Ub1Rvb2xCYXIoKTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///144\n')}]);