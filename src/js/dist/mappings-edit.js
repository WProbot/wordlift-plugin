!function(e){var n={};function t(I){if(n[I])return n[I].exports;var c=n[I]={i:I,l:!1,exports:{}};return e[I].call(c.exports,c,c.exports,t),c.l=!0,c.exports}t.m=e,t.c=n,t.d=function(e,n,I){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:I})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var I=Object.create(null);if(t.r(I),Object.defineProperty(I,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var c in e)t.d(I,c,function(n){return e[n]}.bind(null,c));return I},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=124)}([function(module,exports){eval('(function() { module.exports = this["React"]; }());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1widGhpc1wiOlwiUmVhY3RcIn0/YTFkOCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhLGdDQUFnQyxFQUFFIiwiZmlsZSI6IjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKSB7IG1vZHVsZS5leHBvcnRzID0gdGhpc1tcIlJlYWN0XCJdOyB9KCkpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///0\n')},function(module,exports,__webpack_require__){eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (false) { var throwOnDirectAccess, ReactIs; } else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(45)();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9pbmRleC5qcz9kN2JjIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLEtBQXFDLEVBQUUscUNBTzFDO0FBQ0Q7QUFDQTtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLEVBQTRCO0FBQ3ZEIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKFJlYWN0SXMuaXNFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ADD_NEW_RULE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return ADD_NEW_RULE_GROUP; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return DELETE_RULE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return CHANGE_RULE_FIELD_VALUE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return OPEN_OR_CLOSE_PROPERTY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return PROPERTY_DATA_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ADD_MAPPING; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return TITLE_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return PROPERTY_LIST_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return RULE_GROUP_LIST_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return MAPPING_HEADER_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return NOTIFICATION_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return MAPPING_LIST_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return MAPPING_ITEM_CATEGORY_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return MAPPING_LIST_BULK_SELECT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return MAPPING_LIST_CHOOSEN_CATEGORY_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return MAPPING_ITEM_SELECTED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return PROPERTY_ITEM_CATEGORY_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return PROPERTY_LIST_SELECTED_CATEGORY_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return PROPERTY_ITEM_CRUD_OPERATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return BULK_ACTION_SELECTION_CHANGED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return PROPERTY_ITEM_SELECTED; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return PROPERTY_ITEM_SELECT_ALL; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return PROPERTY_ITEMS_BULK_SELECT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return MAPPING_ITEMS_BULK_SELECT; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return MAPPING_ID_CHANGED_FROM_API; });\n/**\n * This file contains actions and reducer associated with the Create Entity Form container.\n *\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.23.0\n */\n\n/**\n * @const ADD_NEW_RULE\n * constant used for add new rule action\n */\nvar ADD_NEW_RULE = "ADD_NEW_RULE";\n/**\n * @const ADD_NEW_RULE_GROUP\n * constant used for add new rule group action\n */\n\nvar ADD_NEW_RULE_GROUP = "ADD_NEW_RULE_GROUP";\n/**\n * @const DELETE_RULE\n * constant used for add delete rule\n */\n\nvar DELETE_RULE = "DELETE_RULE";\n/**\n * @const CHANGE_RULE_FIELD_VALUE\n * change a individual rule field option\n */\n\nvar CHANGE_RULE_FIELD_VALUE = "CHANGE_RULE_FIELD_VALUE";\n/**\n * @const OPEN_OR_CLOSE_PROPERTY\n * Action to open/close a property item for editing\n */\n\nvar OPEN_OR_CLOSE_PROPERTY = "OPEN_OR_CLOSE_PROPERTY";\n/**\n * @const PROPERTY_DATA_CHANGED\n * Action when a property data of an item gets changed\n */\n\nvar PROPERTY_DATA_CHANGED = "PROPERTY_DATA_CHANGED";\n/**\n * @const ADD_MAPPING\n * Action when add mapping button is clicked\n */\n\nvar ADD_MAPPING = "ADD_MAPPING";\n/**\n * @const TITLE_CHANGED\n * Action when add mapping button is clicked\n */\n\nvar TITLE_CHANGED = "TITLE_CHANGED";\n/**\n * @const PROPERTY_LIST_CHANGED\n * Action when property list changed by data from api.\n */\n\nvar PROPERTY_LIST_CHANGED = "PROPERTY_LIST_CHANGED";\n/**\n * @const RULE_GROUP_LIST_CHANGED\n * Action when rule group list changed by data from api.\n */\n\nvar RULE_GROUP_LIST_CHANGED = "RULE_GROUP_LIST_CHANGED";\n/**\n * @const MAPPING_HEADER_CHANGED\n * Action when mapping header is changed by api, usually consists of title and mapping id. \n */\n\nvar MAPPING_HEADER_CHANGED = "MAPPING_HEADER_CHANGED";\n/**\n * @const NOTIFICATION_CHANGED\n * Action when notification is sent by api.\n */\n\nvar NOTIFICATION_CHANGED = "NOTIFICATION_CHANGED";\n/**\n * @const MAPPING_LIST_CHANGED\n * Action when notification is sent by api.\n */\n\nvar MAPPING_LIST_CHANGED = "MAPPING_LIST_CHANGED";\n/**\n * @const MAPPING_ITEM_CATEGORY_CHANGED\n * Action when notification is sent by api.\n */\n\nvar MAPPING_ITEM_CATEGORY_CHANGED = "MAPPING_ITEM_CATEGORY_CHANGED";\n/**\n * @const MAPPING_LIST_BULK_SELECT\n * Action when mapping items needed to be selected / unselected\n */\n\nvar MAPPING_LIST_BULK_SELECT = "MAPPING_LIST_BULK_SELECT";\n/**\n * @const MAPPING_LIST_CHOOSEN_CATEGORY_CHANGED\n * Action when mapping items needed to be selected / unselected\n */\n\nvar MAPPING_LIST_CHOOSEN_CATEGORY_CHANGED = "MAPPING_LIST_CHOOSEN_CATEGORY_CHANGED";\n/**\n * @const MAPPING_ITEM_SELECTED\n * Action when mapping item is selected.\n */\n\nvar MAPPING_ITEM_SELECTED = "MAPPING_ITEM_SELECTED";\n/**\n * @const PROPERTY_ITEM_CATEGORY_CHANGED\n * Action when category of property item changes.\n */\n\nvar PROPERTY_ITEM_CATEGORY_CHANGED = "PROPERTY_ITEM_CATEGORY_CHANGED";\n/**\n * @const PROPERTY_LIST_SELECTED_CATEGORY_CHANGED\n * Action when the choosen category of property list changed.\n */\n\nvar PROPERTY_LIST_SELECTED_CATEGORY_CHANGED = "PROPERTY_LIST_SELECTED_CATEGORY_CHANGED";\n/**\n * @const PROPERTY_ITEM_CRUD_OPERATION\n * Action when we need to perform crud operation\n */\n\nvar PROPERTY_ITEM_CRUD_OPERATION = "PROPERTY_ITEM_CRUD_OPERATION";\n/**\n * @const BULK_ACTION_SELECTION_CHANGED\n * Action when we change the bulk action component\n */\n\nvar BULK_ACTION_SELECTION_CHANGED = "BULK_ACTION_SELECTION_CHANGED";\n/**\n * @const PROPERTY_ITEM_SELECTED\n * Action when property item is selected by user.\n */\n\nvar PROPERTY_ITEM_SELECTED = "PROPERTY_ITEM_SELECTED";\n/**\n * @const PROPERTY_ITEM_SELECT_ALL\n * Action when the user want to select all the items in the category.\n */\n\nvar PROPERTY_ITEM_SELECT_ALL = "PROPERTY_ITEM_SELECT_ALL";\n/**\n * @const PROPERTY_ITEMS_BULK_SELECT\n * Action when the user wants to make bulk action on selected properties\n */\n\nvar PROPERTY_ITEMS_BULK_SELECT = "PROPERTY_ITEMS_BULK_SELECT";\n/**\n * @const MAPPING_ITEMS_BULK_SELECT\n * Action when the user wants to make bulk action on selected mapping items\n */\n\nvar MAPPING_ITEMS_BULK_SELECT = "MAPPING_ITEMS_BULK_SELECT";\n/**\n * @const MAPPING_ID_CHANGED_FROM_API\n * Action when the mapping id changes from add new mapping post.\n */\n\nvar MAPPING_ID_CHANGED_FROM_API = "MAPPING_ID_CHANGED_FROM_API";//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n')},,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n// EXTERNAL MODULE: external {"this":"React"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(1);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/PropTypes.js\n\nvar subscriptionShape = prop_types_default.a.shape({\n  trySubscribe: prop_types_default.a.func.isRequired,\n  tryUnsubscribe: prop_types_default.a.func.isRequired,\n  notifyNestedSubs: prop_types_default.a.func.isRequired,\n  isSubscribed: prop_types_default.a.func.isRequired\n});\nvar storeShape = prop_types_default.a.shape({\n  subscribe: prop_types_default.a.func.isRequired,\n  dispatch: prop_types_default.a.func.isRequired,\n  getState: prop_types_default.a.func.isRequired\n});\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/warning.js\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== \'undefined\' && typeof console.error === \'function\') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // "break on all exceptions" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/components/Provider.js\n\n\n\n\n\nvar prefixUnsafeLifecycleMethods = typeof external_this_React_default.a.forwardRef !== "undefined";\nvar didWarnAboutReceivingStore = false;\n\nfunction warnAboutReceivingStore() {\n  if (didWarnAboutReceivingStore) {\n    return;\n  }\n\n  didWarnAboutReceivingStore = true;\n  warning(\'<Provider> does not support changing `store` on the fly. \' + \'It is most likely that you see this error because you updated to \' + \'Redux 2.x and React Redux 2.x which no longer hot reload reducers \' + \'automatically. See https://github.com/reduxjs/react-redux/releases/\' + \'tag/v2.0.0 for the migration instructions.\');\n}\n\nfunction createProvider(storeKey) {\n  var _Provider$childContex;\n\n  if (storeKey === void 0) {\n    storeKey = \'store\';\n  }\n\n  var subscriptionKey = storeKey + "Subscription";\n\n  var Provider =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;\n    };\n\n    function Provider(props, context) {\n      var _this;\n\n      _this = _Component.call(this, props, context) || this;\n      _this[storeKey] = props.store;\n      return _this;\n    }\n\n    _proto.render = function render() {\n      return external_this_React_["Children"].only(this.props.children);\n    };\n\n    return Provider;\n  }(external_this_React_["Component"]);\n\n  if (false) { var eventName; }\n\n  Provider.propTypes = {\n    store: storeShape.isRequired,\n    children: prop_types_default.a.element.isRequired\n  };\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = storeShape.isRequired, _Provider$childContex[subscriptionKey] = subscriptionShape, _Provider$childContex);\n  return Provider;\n}\n/* harmony default export */ var components_Provider = (createProvider());\n// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");\n  }\n\n  return self;\n}\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\nvar objectWithoutPropertiesLoose = __webpack_require__(17);\n\n// EXTERNAL MODULE: ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(37);\nvar hoist_non_react_statics_cjs_default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics_cjs);\n\n// EXTERNAL MODULE: ./node_modules/invariant/browser.js\nvar browser = __webpack_require__(14);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// EXTERNAL MODULE: ./node_modules/react-is/index.js\nvar react_is = __webpack_require__(21);\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/Subscription.js\n// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\nvar CLEARED = null;\nvar nullListeners = {\n  notify: function notify() {}\n};\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux\'s createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  var current = [];\n  var next = [];\n  return {\n    clear: function clear() {\n      next = CLEARED;\n      current = CLEARED;\n    },\n    notify: function notify() {\n      var listeners = current = next;\n\n      for (var i = 0; i < listeners.length; i++) {\n        listeners[i]();\n      }\n    },\n    get: function get() {\n      return next;\n    },\n    subscribe: function subscribe(listener) {\n      var isSubscribed = true;\n      if (next === current) next = current.slice();\n      next.push(listener);\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return;\n        isSubscribed = false;\n        if (next === current) next = current.slice();\n        next.splice(next.indexOf(listener), 1);\n      };\n    }\n  };\n}\n\nvar Subscription =\n/*#__PURE__*/\nfunction () {\n  function Subscription(store, parentSub, onStateChange) {\n    this.store = store;\n    this.parentSub = parentSub;\n    this.onStateChange = onStateChange;\n    this.unsubscribe = null;\n    this.listeners = nullListeners;\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.addNestedSub = function addNestedSub(listener) {\n    this.trySubscribe();\n    return this.listeners.subscribe(listener);\n  };\n\n  _proto.notifyNestedSubs = function notifyNestedSubs() {\n    this.listeners.notify();\n  };\n\n  _proto.isSubscribed = function isSubscribed() {\n    return Boolean(this.unsubscribe);\n  };\n\n  _proto.trySubscribe = function trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);\n      this.listeners = createListenerCollection();\n    }\n  };\n\n  _proto.tryUnsubscribe = function tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe();\n      this.unsubscribe = null;\n      this.listeners.clear();\n      this.listeners = nullListeners;\n    }\n  };\n\n  return Subscription;\n}();\n\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/components/connectAdvanced.js\n\n\n\n\n\n\n\n\n\n\nvar connectAdvanced_prefixUnsafeLifecycleMethods = typeof external_this_React_default.a.forwardRef !== "undefined";\nvar hotReloadingVersion = 0;\nvar dummyState = {};\n\nfunction noop() {}\n\nfunction makeSelectorStateful(sourceSelector, store) {\n  // wrap the selector in an object that tracks its results between runs.\n  var selector = {\n    run: function runComponentSelector(props) {\n      try {\n        var nextProps = sourceSelector(store.getState(), props);\n\n        if (nextProps !== selector.props || selector.error) {\n          selector.shouldComponentUpdate = true;\n          selector.props = nextProps;\n          selector.error = null;\n        }\n      } catch (error) {\n        selector.shouldComponentUpdate = true;\n        selector.error = error;\n      }\n    }\n  };\n  return selector;\n}\n\nfunction connectAdvanced(\n/*\n  selectorFactory is a func that is responsible for returning the selector function used to\n  compute new props from state, props, and dispatch. For example:\n     export default connectAdvanced((dispatch, options) => (state, props) => ({\n      thing: state.things[props.thingId],\n      saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\n    }))(YourComponent)\n   Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\n  outside of their selector as an optimization. Options passed to connectAdvanced are passed to\n  the selectorFactory, along with displayName and WrappedComponent, as the second argument.\n   Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\n  props. Do not use connectAdvanced directly without memoizing results between calls to your\n  selector, otherwise the Connect component will re-render on every state or props change.\n*/\nselectorFactory, // options object:\n_ref) {\n  var _contextTypes, _childContextTypes;\n\n  if (_ref === void 0) {\n    _ref = {};\n  }\n\n  var _ref2 = _ref,\n      _ref2$getDisplayName = _ref2.getDisplayName,\n      getDisplayName = _ref2$getDisplayName === void 0 ? function (name) {\n    return "ConnectAdvanced(" + name + ")";\n  } : _ref2$getDisplayName,\n      _ref2$methodName = _ref2.methodName,\n      methodName = _ref2$methodName === void 0 ? \'connectAdvanced\' : _ref2$methodName,\n      _ref2$renderCountProp = _ref2.renderCountProp,\n      renderCountProp = _ref2$renderCountProp === void 0 ? undefined : _ref2$renderCountProp,\n      _ref2$shouldHandleSta = _ref2.shouldHandleStateChanges,\n      shouldHandleStateChanges = _ref2$shouldHandleSta === void 0 ? true : _ref2$shouldHandleSta,\n      _ref2$storeKey = _ref2.storeKey,\n      storeKey = _ref2$storeKey === void 0 ? \'store\' : _ref2$storeKey,\n      _ref2$withRef = _ref2.withRef,\n      withRef = _ref2$withRef === void 0 ? false : _ref2$withRef,\n      connectOptions = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref2, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef"]);\n\n  var subscriptionKey = storeKey + \'Subscription\';\n  var version = hotReloadingVersion++;\n  var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = storeShape, _contextTypes[subscriptionKey] = subscriptionShape, _contextTypes);\n  var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = subscriptionShape, _childContextTypes);\n  return function wrapWithConnect(WrappedComponent) {\n    browser_default()(Object(react_is["isValidElementType"])(WrappedComponent), "You must pass a component to the function returned by " + (methodName + ". Instead received " + JSON.stringify(WrappedComponent)));\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || \'Component\';\n    var displayName = getDisplayName(wrappedComponentName);\n\n    var selectorFactoryOptions = Object(esm_extends["a" /* default */])({}, connectOptions, {\n      getDisplayName: getDisplayName,\n      methodName: methodName,\n      renderCountProp: renderCountProp,\n      shouldHandleStateChanges: shouldHandleStateChanges,\n      storeKey: storeKey,\n      withRef: withRef,\n      displayName: displayName,\n      wrappedComponentName: wrappedComponentName,\n      WrappedComponent: WrappedComponent // TODO Actually fix our use of componentWillReceiveProps\n\n      /* eslint-disable react/no-deprecated */\n\n    });\n\n    var Connect =\n    /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(Connect, _Component);\n\n      function Connect(props, context) {\n        var _this;\n\n        _this = _Component.call(this, props, context) || this;\n        _this.version = version;\n        _this.state = {};\n        _this.renderCount = 0;\n        _this.store = props[storeKey] || context[storeKey];\n        _this.propsMode = Boolean(props[storeKey]);\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n        browser_default()(_this.store, "Could not find \\"" + storeKey + "\\" in either the context or props of " + ("\\"" + displayName + "\\". Either wrap the root component in a <Provider>, ") + ("or explicitly pass \\"" + storeKey + "\\" as a prop to \\"" + displayName + "\\"."));\n\n        _this.initSelector();\n\n        _this.initSubscription();\n\n        return _this;\n      }\n\n      var _proto = Connect.prototype;\n\n      _proto.getChildContext = function getChildContext() {\n        var _ref3;\n\n        // If this component received store from props, its subscription should be transparent\n        // to any descendants receiving store+subscription from context; it passes along\n        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows\n        // Connect to control ordering of notifications to flow top-down.\n        var subscription = this.propsMode ? null : this.subscription;\n        return _ref3 = {}, _ref3[subscriptionKey] = subscription || this.context[subscriptionKey], _ref3;\n      };\n\n      _proto.componentDidMount = function componentDidMount() {\n        if (!shouldHandleStateChanges) return; // componentWillMount fires during server side rendering, but componentDidMount and\n        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.\n        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.\n        // To handle the case where a child component may have triggered a state change by\n        // dispatching an action in its componentWillMount, we have to re-run the select and maybe\n        // re-render.\n\n        this.subscription.trySubscribe();\n        this.selector.run(this.props);\n        if (this.selector.shouldComponentUpdate) this.forceUpdate();\n      }; // Note: this is renamed below to the UNSAFE_ version in React >=16.3.0\n\n\n      _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        this.selector.run(nextProps);\n      };\n\n      _proto.shouldComponentUpdate = function shouldComponentUpdate() {\n        return this.selector.shouldComponentUpdate;\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        if (this.subscription) this.subscription.tryUnsubscribe();\n        this.subscription = null;\n        this.notifyNestedSubs = noop;\n        this.store = null;\n        this.selector.run = noop;\n        this.selector.shouldComponentUpdate = false;\n      };\n\n      _proto.getWrappedInstance = function getWrappedInstance() {\n        browser_default()(withRef, "To access the wrapped instance, you need to specify " + ("{ withRef: true } in the options argument of the " + methodName + "() call."));\n        return this.wrappedInstance;\n      };\n\n      _proto.setWrappedInstance = function setWrappedInstance(ref) {\n        this.wrappedInstance = ref;\n      };\n\n      _proto.initSelector = function initSelector() {\n        var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);\n        this.selector = makeSelectorStateful(sourceSelector, this.store);\n        this.selector.run(this.props);\n      };\n\n      _proto.initSubscription = function initSubscription() {\n        if (!shouldHandleStateChanges) return; // parentSub\'s source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn\'t use subscription from context, or vice versa.\n\n        var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];\n        this.subscription = new Subscription(this.store, parentSub, this.onStateChange.bind(this)); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `this.subscription` will then be null. An\n        // extra null check every change can be avoided by copying the method onto `this` and then\n        // replacing it with a no-op on unmount. This can probably be avoided if Subscription\'s\n        // listeners logic is changed to not call listeners that have been unsubscribed in the\n        // middle of the notification loop.\n\n        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);\n      };\n\n      _proto.onStateChange = function onStateChange() {\n        this.selector.run(this.props);\n\n        if (!this.selector.shouldComponentUpdate) {\n          this.notifyNestedSubs();\n        } else {\n          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;\n          this.setState(dummyState);\n        }\n      };\n\n      _proto.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {\n        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it\n        // needs to notify nested subs. Once called, it unimplements itself until further state\n        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does\n        // a boolean check every time avoids an extra method call most of the time, resulting\n        // in some perf boost.\n        this.componentDidUpdate = undefined;\n        this.notifyNestedSubs();\n      };\n\n      _proto.isSubscribed = function isSubscribed() {\n        return Boolean(this.subscription) && this.subscription.isSubscribed();\n      };\n\n      _proto.addExtraProps = function addExtraProps(props) {\n        if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props; // make a shallow copy so that fields added don\'t leak to the original selector.\n        // this is especially important for \'ref\' since that\'s a reference back to the component\n        // instance. a singleton memoized selector would then be holding a reference to the\n        // instance, preventing the instance from being garbage collected, and that would be bad\n\n        var withExtras = Object(esm_extends["a" /* default */])({}, props);\n\n        if (withRef) withExtras.ref = this.setWrappedInstance;\n        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;\n        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;\n        return withExtras;\n      };\n\n      _proto.render = function render() {\n        var selector = this.selector;\n        selector.shouldComponentUpdate = false;\n\n        if (selector.error) {\n          throw selector.error;\n        } else {\n          return Object(external_this_React_["createElement"])(WrappedComponent, this.addExtraProps(selector.props));\n        }\n      };\n\n      return Connect;\n    }(external_this_React_["Component"]);\n\n    if (connectAdvanced_prefixUnsafeLifecycleMethods) {\n      // Use UNSAFE_ event name where supported\n      Connect.prototype.UNSAFE_componentWillReceiveProps = Connect.prototype.componentWillReceiveProps;\n      delete Connect.prototype.componentWillReceiveProps;\n    }\n    /* eslint-enable react/no-deprecated */\n\n\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = displayName;\n    Connect.childContextTypes = childContextTypes;\n    Connect.contextTypes = contextTypes;\n    Connect.propTypes = contextTypes;\n\n    if (false) { var eventName; }\n\n    return hoist_non_react_statics_cjs_default()(Connect, WrappedComponent);\n  };\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/shallowEqual.js\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n\n  if (typeof objA !== \'object\' || objA === null || typeof objB !== \'object\' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/isPlainObject.js\n/**\r\n * @param {any} obj The object to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== \'object\' || obj === null) return false;\n  var proto = Object.getPrototypeOf(obj);\n  if (proto === null) return true;\n  var baseProto = proto;\n\n  while (Object.getPrototypeOf(baseProto) !== null) {\n    baseProto = Object.getPrototypeOf(baseProto);\n  }\n\n  return proto === baseProto;\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/utils/verifyPlainObject.js\n\n\nfunction verifyPlainObject(value, displayName, methodName) {\n  if (!isPlainObject(value)) {\n    warning(methodName + "() in " + displayName + " must return a plain object. Instead received " + value + ".");\n  }\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/wrapMapToProps.js\n\nfunction wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch, options) {\n    var constant = getConstant(dispatch, options);\n\n    function constantSelector() {\n      return constant;\n    }\n\n    constantSelector.dependsOnOwnProps = false;\n    return constantSelector;\n  };\n} // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n// \n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\n\nfunction getDependsOnOwnProps(mapToProps) {\n  return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;\n} // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n// \n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//    \n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//    \n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//    \n\nfunction wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, _ref) {\n    var displayName = _ref.displayName;\n\n    var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);\n    }; // allow detectFactoryAndVerify to get ownProps\n\n\n    proxy.dependsOnOwnProps = true;\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps;\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);\n      var props = proxy(stateOrDispatch, ownProps);\n\n      if (typeof props === \'function\') {\n        proxy.mapToProps = props;\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props);\n        props = proxy(stateOrDispatch, ownProps);\n      }\n\n      if (false) {}\n      return props;\n    };\n\n    return proxy;\n  };\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapDispatchToProps.js\n\n\nfunction whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === \'function\' ? wrapMapToPropsFunc(mapDispatchToProps, \'mapDispatchToProps\') : undefined;\n}\nfunction whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {\n    return {\n      dispatch: dispatch\n    };\n  }) : undefined;\n}\nfunction whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === \'object\' ? wrapMapToPropsConstant(function (dispatch) {\n    return Object(redux["bindActionCreators"])(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\n/* harmony default export */ var connect_mapDispatchToProps = ([whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject]);\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mapStateToProps.js\n\nfunction whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === \'function\' ? wrapMapToPropsFunc(mapStateToProps, \'mapStateToProps\') : undefined;\n}\nfunction whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(function () {\n    return {};\n  }) : undefined;\n}\n/* harmony default export */ var connect_mapStateToProps = ([whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing]);\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/mergeProps.js\n\n\nfunction defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return Object(esm_extends["a" /* default */])({}, ownProps, stateProps, dispatchProps);\n}\nfunction wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n    var hasRunOnce = false;\n    var mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (false) {}\n      }\n\n      return mergedProps;\n    };\n  };\n}\nfunction whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === \'function\' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\nfunction whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\n/* harmony default export */ var connect_mergeProps = ([whenMergePropsIsFunction, whenMergePropsIsOmitted]);\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/verifySubselectors.js\n\n\nfunction verify(selector, methodName, displayName) {\n  if (!selector) {\n    throw new Error("Unexpected value for " + methodName + " in " + displayName + ".");\n  } else if (methodName === \'mapStateToProps\' || methodName === \'mapDispatchToProps\') {\n    if (!selector.hasOwnProperty(\'dependsOnOwnProps\')) {\n      warning("The selector for " + methodName + " of " + displayName + " did not specify a value for dependsOnOwnProps.");\n    }\n  }\n}\n\nfunction verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {\n  verify(mapStateToProps, \'mapStateToProps\', displayName);\n  verify(mapDispatchToProps, \'mapDispatchToProps\', displayName);\n  verify(mergeProps, \'mergeProps\', displayName);\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/selectorFactory.js\n\n\nfunction impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);\n  };\n}\nfunction pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {\n  var areStatesEqual = _ref.areStatesEqual,\n      areOwnPropsEqual = _ref.areOwnPropsEqual,\n      areStatePropsEqual = _ref.areStatePropsEqual;\n  var hasRunAtLeastOnce = false;\n  var state;\n  var ownProps;\n  var stateProps;\n  var dispatchProps;\n  var mergedProps;\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState;\n    ownProps = firstOwnProps;\n    stateProps = mapStateToProps(state, ownProps);\n    dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    hasRunAtLeastOnce = true;\n    return mergedProps;\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);\n    if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleNewState() {\n    var nextStateProps = mapStateToProps(state, ownProps);\n    var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);\n    stateProps = nextStateProps;\n    if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n    return mergedProps;\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);\n    var stateChanged = !areStatesEqual(nextState, state);\n    state = nextState;\n    ownProps = nextOwnProps;\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState();\n    if (propsChanged) return handleNewProps();\n    if (stateChanged) return handleNewState();\n    return mergedProps;\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);\n  };\n} // TODO: Add more comments\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced\'s shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nfunction finalPropsSelectorFactory(dispatch, _ref2) {\n  var initMapStateToProps = _ref2.initMapStateToProps,\n      initMapDispatchToProps = _ref2.initMapDispatchToProps,\n      initMergeProps = _ref2.initMergeProps,\n      options = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref2, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]);\n\n  var mapStateToProps = initMapStateToProps(dispatch, options);\n  var mapDispatchToProps = initMapDispatchToProps(dispatch, options);\n  var mergeProps = initMergeProps(dispatch, options);\n\n  if (false) {}\n\n  var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;\n  return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);\n}\n// CONCATENATED MODULE: ./node_modules/react-redux/es/connect/connect.js\n\n\n\n\n\n\n\n\n/*\n  connect is a facade over connectAdvanced. It turns its args into a compatible\n  selectorFactory, which has the signature:\n\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n  \n  connect passes its args to connectAdvanced as options, which will in turn pass them to\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\n  selectorFactory returns a final props selector from its mapStateToProps,\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n  mergePropsFactories, and pure args.\n\n  The resulting final props selector is called by the Connect component instance whenever\n  it receives new props or store state.\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error("Invalid value of type " + typeof arg + " for " + name + " argument when connecting component " + options.wrappedComponentName + ".");\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n} // createConnect with default args builds the \'official\' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\n\n\nfunction createConnect(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? connect_mapStateToProps : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? connect_mapDispatchToProps : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === void 0 ? connect_mergeProps : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === void 0 ? finalPropsSelectorFactory : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {\n    if (_ref2 === void 0) {\n      _ref2 = {};\n    }\n\n    var _ref3 = _ref2,\n        _ref3$pure = _ref3.pure,\n        pure = _ref3$pure === void 0 ? true : _ref3$pure,\n        _ref3$areStatesEqual = _ref3.areStatesEqual,\n        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,\n        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,\n        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,\n        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,\n        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,\n        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,\n        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,\n        extraOptions = Object(objectWithoutPropertiesLoose["a" /* default */])(_ref3, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, \'mapStateToProps\');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, \'mapDispatchToProps\');\n    var initMergeProps = match(mergeProps, mergePropsFactories, \'mergeProps\');\n    return connectHOC(selectorFactory, Object(esm_extends["a" /* default */])({\n      // used in error messages\n      methodName: \'connect\',\n      // used to compute Connect\'s displayName from the wrapped component\'s displayName.\n      getDisplayName: function getDisplayName(name) {\n        return "Connect(" + name + ")";\n      },\n      // if mapStateToProps is falsy, the Connect component doesn\'t subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n    }, extraOptions));\n  };\n}\n/* harmony default export */ var connect_connect = (createConnect());\n// CONCATENATED MODULE: ./node_modules/react-redux/es/index.js\n/* concated harmony reexport Provider */__webpack_require__.d(__webpack_exports__, "a", function() { return components_Provider; });\n/* unused concated harmony import createProvider */\n/* unused concated harmony import connectAdvanced */\n/* concated harmony reexport connect */__webpack_require__.d(__webpack_exports__, "b", function() { return connect_connect; });\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n')},,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__DO_NOT_USE__ActionTypes", function() { return ActionTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "applyMiddleware", function() { return applyMiddleware; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bindActionCreators", function() { return bindActionCreators; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "combineReducers", function() { return combineReducers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "compose", function() { return compose; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStore", function() { return createStore; });\n/* harmony import */ var symbol_observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31);\n\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split(\'\').join(\'.\');\n};\n\nvar ActionTypes = {\n  INIT: "@@redux/INIT" + randomString(),\n  REPLACE: "@@redux/REPLACE" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== \'object\' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === \'function\' && typeof enhancer === \'function\' || typeof enhancer === \'function\' && typeof arguments[3] === \'function\') {\n    throw new Error(\'It looks like you are passing several store enhancers to \' + \'createStore(). This is not supported. Instead, compose them \' + \'together to a single function.\');\n  }\n\n  if (typeof preloadedState === \'function\' && typeof enhancer === \'undefined\') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== \'undefined\') {\n    if (typeof enhancer !== \'function\') {\n      throw new Error(\'Expected the enhancer to be a function.\');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== \'function\') {\n    throw new Error(\'Expected the reducer to be a function.\');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(\'You may not call store.getState() while the reducer is executing. \' + \'The reducer has already received the state as an argument. \' + \'Pass it down from the top reducer instead of reading it from the store.\');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== \'function\') {\n      throw new Error(\'Expected the listener to be a function.\');\n    }\n\n    if (isDispatching) {\n      throw new Error(\'You may not call store.subscribe() while the reducer is executing. \' + \'If you would like to be notified after the store has been updated, subscribe from a \' + \'component and invoke store.getState() in the callback to access the latest state. \' + \'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.\');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(\'You may not unsubscribe from a store listener while the reducer is executing. \' + \'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.\');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(\'Actions must be plain objects. \' + \'Use custom middleware for async actions.\');\n    }\n\n    if (typeof action.type === \'undefined\') {\n      throw new Error(\'Actions may not have an undefined "type" property. \' + \'Have you misspelled a constant?\');\n    }\n\n    if (isDispatching) {\n      throw new Error(\'Reducers may not dispatch actions.\');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== \'function\') {\n      throw new Error(\'Expected the nextReducer to be a function.\');\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== \'object\' || observer === null) {\n          throw new TypeError(\'Expected the observer to be an object.\');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an "INIT" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[symbol_observable__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"]] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== \'undefined\' && typeof console.error === \'function\') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // "break on all exceptions" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && "action \\"" + String(actionType) + "\\"" || \'an action\';\n  return "Given " + actionDescription + ", reducer \\"" + key + "\\" returned undefined. " + "To ignore an action, you must explicitly return the previous state. " + "If you want this reducer to hold no value, you can return null instead of undefined.";\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? \'preloadedState argument passed to createStore\' : \'previous state received by the reducer\';\n\n  if (reducerKeys.length === 0) {\n    return \'Store does not have a valid reducer. Make sure the argument passed \' + \'to combineReducers is an object whose values are reducers.\';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return "The " + argumentName + " has unexpected type of \\"" + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + "\\". Expected argument to be an object with the following " + ("keys: \\"" + reducerKeys.join(\'", "\') + "\\"");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return "Unexpected " + (unexpectedKeys.length > 1 ? \'keys\' : \'key\') + " " + ("\\"" + unexpectedKeys.join(\'", "\') + "\\" found in " + argumentName + ". ") + "Expected to find one of the known reducer keys instead: " + ("\\"" + reducerKeys.join(\'", "\') + "\\". Unexpected keys will be ignored.");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === \'undefined\') {\n      throw new Error("Reducer \\"" + key + "\\" returned undefined during initialization. " + "If the state passed to the reducer is undefined, you must " + "explicitly return the initial state. The initial state may " + "not be undefined. If you don\'t want to set a value for this reducer, " + "you can use null instead of undefined.");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === \'undefined\') {\n      throw new Error("Reducer \\"" + key + "\\" returned undefined when probed with a random type. " + ("Don\'t try to handle " + ActionTypes.INIT + " or other actions in \\"redux/*\\" ") + "namespace. They are considered private. Instead, you must return the " + "current state for any unknown actions, unless it is undefined, " + "in which case you must return the initial state, regardless of the " + "action type. The initial state may not be undefined, but can be null.");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (false) {}\n\n    if (typeof reducers[key] === \'function\') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don\'t warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (false) {}\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (false) { var warningMessage; }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === \'undefined\') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === \'function\') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== \'object\' || actionCreators === null) {\n    throw new Error("bindActionCreators expected an object or a function, instead received " + (actionCreators === null ? \'null\' : typeof actionCreators) + ". " + "Did you write \\"import ActionCreators from\\" instead of \\"import * as ActionCreators from\\"?");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === \'function\') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(\'Dispatching while constructing your middleware is not allowed. \' + \'Other middleware would not be applied to this dispatch.\');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread2({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== \'production\', warn the user.\n */\n\nfunction isCrushed() {}\n\nif (false) {}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _extends; });\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcz9jMzFkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWU7QUFDZjtBQUNBLG1CQUFtQixzQkFBc0I7QUFDekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIxMy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///13\n')},function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {}\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanM/NDBiNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLEtBQXFDLEVBQUUsRUFJMUM7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMseUJBQXlCLEVBQUU7QUFDckU7QUFDQTtBQUNBOztBQUVBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIGludmFyaWFudCA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhLCBiLCBjLCBkLCBlLCBmKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9XG5cbiAgaWYgKCFjb25kaXRpb24pIHtcbiAgICB2YXIgZXJyb3I7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgK1xuICAgICAgICAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgYXJncyA9IFthLCBiLCBjLCBkLCBlLCBmXTtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICBlcnJvciA9IG5ldyBFcnJvcihcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJnc1thcmdJbmRleCsrXTsgfSlcbiAgICAgICk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14\n")},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return ADD_NEW_RULE_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return ADD_NEW_RULE_GROUP_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return DELETE_RULE_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return CHANGE_RULE_FIELD_VALUE_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return OPEN_OR_CLOSE_PROPERTY_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return PROPERTY_DATA_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ADD_MAPPING_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return TITLE_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return PROPERTY_LIST_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return RULE_GROUP_LIST_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return MAPPING_HEADER_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return NOTIFICATION_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return MAPPING_LIST_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return MAPPING_ITEM_CATEGORY_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return MAPPING_LIST_BULK_SELECT_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return MAPPING_LIST_CHOOSEN_CATEGORY_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return MAPPING_ITEM_SELECTED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return PROPERTY_ITEM_CATEGORY_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return PROPERTY_LIST_CHOOSEN_CATEGORY_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return PROPERTY_ITEM_CRUD_OPERATION_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return BULK_ACTION_SELECTION_CHANGED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return PROPERTY_ITEM_SELECTED_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return PROPERTY_ITEM_SELECT_ALL_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return PROPERTY_ITEMS_BULK_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return MAPPING_ITEMS_BULK_ACTION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return MAPPING_ID_CHANGED_FROM_API_ACTION; });\n/* harmony import */ var _action_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(5);\n/**\n * This file contains list of actions \n *\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * @const {object} ADD_NEW_RULE_ACTION\n * Dispatches this action when add new rule is clicked\n */\n\nvar ADD_NEW_RULE_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* ADD_NEW_RULE */ "b"]\n};\n/**\n * @const {object} ADD_NEW_RULE_GROUP_ACTION\n *  Dispatches this action when add new rule group is clicked\n */\n\nvar ADD_NEW_RULE_GROUP_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* ADD_NEW_RULE_GROUP */ "c"]\n};\n/**\n * @const {object} DELETE_RULE_ACTION\n *  Dispatches this action when delete rule is clicked\n */\n\nvar DELETE_RULE_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* DELETE_RULE */ "f"]\n};\n/**\n * @const {object} CHANGE_RULE_FIELD_VALUE_ACTION\n *  Dispatches this action when a selection box is changed\n */\n\nvar CHANGE_RULE_FIELD_VALUE_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* CHANGE_RULE_FIELD_VALUE */ "e"]\n};\n/**\n * @const {object} OPEN_OR_CLOSE_PROPERTY_ACTION\n *  Dispatches this action to open or close a property item\n */\n\nvar OPEN_OR_CLOSE_PROPERTY_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* OPEN_OR_CLOSE_PROPERTY */ "p"]\n};\n/**\n * @const {object} PROPERTY_DATA_CHANGED_ACTION\n *  Dispatches this action when a single property field gets changed\n */\n\nvar PROPERTY_DATA_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* PROPERTY_DATA_CHANGED */ "q"]\n};\n/**\n * @const {object} ADD_MAPPING_ACTION\n *  Dispatches this action to create a new mapping item\n */\n\nvar ADD_MAPPING_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* ADD_MAPPING */ "a"]\n};\n/**\n * @const {object} TITLE_CHANGED_ACTION\n *  Dispatches this action when the mapping item title is changed\n */\n\nvar TITLE_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* TITLE_CHANGED */ "z"]\n};\n/**\n * @const {object} PROPERTY_LIST_CHANGED_ACTION\n *  Dispatches this action when the property list is changed from the api.\n */\n\nvar PROPERTY_LIST_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* PROPERTY_LIST_CHANGED */ "w"]\n};\n/**\n * @const {object} RULE_GROUP_LIST_CHANGED_ACTION\n *  Dispatches this action when the rule group list is changed from the api.\n */\n\nvar RULE_GROUP_LIST_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* RULE_GROUP_LIST_CHANGED */ "y"]\n};\n/**\n * @const {object} MAPPING_HEADER_CHANGED_ACTION\n *  Dispatches this action when the mapping header is changed from the api.\n */\n\nvar MAPPING_HEADER_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* MAPPING_HEADER_CHANGED */ "g"]\n};\n/**\n * @const {object} NOTIFICATION_CHANGED_ACTION\n *  Dispatches this action when the notification of edit section changes\n */\n\nvar NOTIFICATION_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* NOTIFICATION_CHANGED */ "o"]\n};\n/**\n * @const {object} MAPPING_LIST_CHANGED_ACTION\n *  Dispatches this action when the mapping list changes\n */\n\nvar MAPPING_LIST_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* MAPPING_LIST_CHANGED */ "m"]\n};\n/**\n * @const {object} MAPPING_ITEM_CATEGORY_CHANGED_ACTION\n *  Dispatches this action when the mapping list changes\n */\n\nvar MAPPING_ITEM_CATEGORY_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* MAPPING_ITEM_CATEGORY_CHANGED */ "j"]\n};\n/**\n * @const {object} MAPPING_LIST_BULK_SELECT_ACTION\n * Dispatches this action when the mapping list needed to be selected\n * or vice versa\n */\n\nvar MAPPING_LIST_BULK_SELECT_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* MAPPING_LIST_BULK_SELECT */ "l"]\n};\n/**\n * @const {object} MAPPING_LIST_CHOOSEN_CATEGORY_CHANGED_ACTION\n * Dispatches this action when the user chooses different category\n */\n\nvar MAPPING_LIST_CHOOSEN_CATEGORY_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* MAPPING_LIST_CHOOSEN_CATEGORY_CHANGED */ "n"]\n};\n/**\n * @const {object} MAPPING_LIST_CHOOSEN_CATEGORY_CHANGED_ACTION\n * Dispatches this action when the user checks the checkbox of mapping item\n */\n\nvar MAPPING_ITEM_SELECTED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* MAPPING_ITEM_SELECTED */ "k"]\n};\n/**\n * @const {object} PROPERTY_ITEM_CATEGORY_CHANGED_ACTION\n * Dispatches this action when the user checks the checkbox of mapping item\n */\n\nvar PROPERTY_ITEM_CATEGORY_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* PROPERTY_ITEM_CATEGORY_CHANGED */ "s"]\n};\n/**\n * @const {object} PROPERTY_LIST_CHOOSEN_CATEGORY_CHANGED_ACTION\n * Dispatches this action when the user clicks on category\n * of the property list.\n */\n\nvar PROPERTY_LIST_CHOOSEN_CATEGORY_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* PROPERTY_LIST_SELECTED_CATEGORY_CHANGED */ "x"]\n};\n/**\n * @const {object} PROPERTY_ITEM_CRUD_OPERATION_ACTION\n * Dispatches this action when the user wants to permanently delete/duplicate \n * a property.\n */\n\nvar PROPERTY_ITEM_CRUD_OPERATION_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* PROPERTY_ITEM_CRUD_OPERATION */ "t"]\n};\n/**\n * @const {object} BULK_ACTION_SELECTION_CHANGED_ACTION\n * Dispatches this action when the user changes the bulk action\n * selection box.\n */\n\nvar BULK_ACTION_SELECTION_CHANGED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* BULK_ACTION_SELECTION_CHANGED */ "d"]\n};\n/**\n * @const {object} PROPERTY_ITEM_SELECTED_ACTION\n * Dispatches this action when the user clicks on property\n * item checkbox\n */\n\nvar PROPERTY_ITEM_SELECTED_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* PROPERTY_ITEM_SELECTED */ "u"]\n};\n/**\n * @const {object} PROPERTY_ITEM_SELECT_ALL_ACTION\n * Dispatches this action when the user clicks on select all\n * checkbox\n */\n\nvar PROPERTY_ITEM_SELECT_ALL_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* PROPERTY_ITEM_SELECT_ALL */ "v"]\n};\n/**\n * @const {object} PROPERTY_ITEMS_BULK_ACTION\n * Dispatches this action when the user makes bulk\n * action\n */\n\nvar PROPERTY_ITEMS_BULK_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* PROPERTY_ITEMS_BULK_SELECT */ "r"]\n};\n/**\n * @const {object} MAPPING_ITEMS_BULK_ACTION\n * Dispatches this action when the user makes bulk\n * action on mapping list\n */\n\nvar MAPPING_ITEMS_BULK_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* MAPPING_ITEMS_BULK_SELECT */ "i"]\n};\n/**\n * @const {object} MAPPING_ID_CHANGED_FROM_API_ACTION\n * Dispatches this action when the mapping id changes\n * on add new mapping save\n */\n\nvar MAPPING_ID_CHANGED_FROM_API_ACTION = {\n  type: _action_types__WEBPACK_IMPORTED_MODULE_0__[/* MAPPING_ID_CHANGED_FROM_API */ "h"]\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n')},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return _objectWithoutPropertiesLoose; });\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZS5qcz9jY2I1Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxhQUFhLHVCQUF1QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///17\n')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return TRASH_CATEGORY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ACTIVE_CATEGORY; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * CategoryComponent : Displays the list of categories and  user can select \n * select the category\n *\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\nvar TRASH_CATEGORY = \'trash\';\nvar ACTIVE_CATEGORY = \'active\';\n\nvar SingleCategoryItem = function SingleCategoryItem(_ref) {\n  var choosenCategory = _ref.choosenCategory,\n      category = _ref.category,\n      source = _ref.source,\n      categorySelectHandler = _ref.categorySelectHandler,\n      categoryKeyName = _ref.categoryKeyName;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("span", {\n    className: "wl-mappings-link wl-category-title"\n  }, category === choosenCategory ? react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("b", null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {\n    className: "wl-mappings-link-active"\n  }, category, "(", // Count the category in the source\n  source.filter(function (el) {\n    return el[categoryKeyName] === category;\n  }).length, ") |")) : react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("a", {\n    onClick: function onClick() {\n      categorySelectHandler(category);\n    }\n  }, category, "(", // Count the category in the source\n  source.filter(function (el) {\n    return el[categoryKeyName] === category;\n  }).length, ") |"), "\\xA0");\n};\n\nvar CategoryComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CategoryComponent, _React$Component);\n\n  function CategoryComponent(props) {\n    _classCallCheck(this, CategoryComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CategoryComponent).call(this, props));\n  }\n\n  _createClass(CategoryComponent, [{\n    key: "render",\n    value: function render() {\n      var _this = this;\n\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", null, this.props.categories.map(function (category, index) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SingleCategoryItem, _extends({}, _this.props, {\n          category: category\n        }));\n      }));\n    }\n  }]);\n\n  return CategoryComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\nCategoryComponent.propTypes = {\n  // Category key : category key name of  object in source object list.\n  categoryKeyName: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,\n  // List of categories needed to be shown for user\n  categories: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array.isRequired,\n  // Source : Array of objects\n  source: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.array.isRequired,\n  // Category select handler\n  categorySelectHandler: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired\n};\n/* harmony default export */ __webpack_exports__["c"] = (CategoryComponent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwcGluZ3MvY29tcG9uZW50cy9jYXRlZ29yeS1jb21wb25lbnQuanM/YWRmYyJdLCJuYW1lcyI6WyJUUkFTSF9DQVRFR09SWSIsIkFDVElWRV9DQVRFR09SWSIsIlNpbmdsZUNhdGVnb3J5SXRlbSIsImNob29zZW5DYXRlZ29yeSIsImNhdGVnb3J5Iiwic291cmNlIiwiY2F0ZWdvcnlTZWxlY3RIYW5kbGVyIiwiY2F0ZWdvcnlLZXlOYW1lIiwiZmlsdGVyIiwiZWwiLCJsZW5ndGgiLCJDYXRlZ29yeUNvbXBvbmVudCIsInByb3BzIiwiY2F0ZWdvcmllcyIsIm1hcCIsImluZGV4IiwiUmVhY3QiLCJDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJzdHJpbmciLCJpc1JlcXVpcmVkIiwiYXJyYXkiLCJmdW5jIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7OztBQVFBOzs7QUFHQTtBQUNBO0FBRU8sSUFBTUEsY0FBYyxHQUFHLE9BQXZCO0FBQ0EsSUFBTUMsZUFBZSxHQUFHLFFBQXhCOztBQUVQLElBQU1DLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBcUIsT0FBcUY7QUFBQSxNQUFqRkMsZUFBaUYsUUFBakZBLGVBQWlGO0FBQUEsTUFBaEVDLFFBQWdFLFFBQWhFQSxRQUFnRTtBQUFBLE1BQXREQyxNQUFzRCxRQUF0REEsTUFBc0Q7QUFBQSxNQUE5Q0MscUJBQThDLFFBQTlDQSxxQkFBOEM7QUFBQSxNQUF2QkMsZUFBdUIsUUFBdkJBLGVBQXVCO0FBQzVHLFNBQ0k7QUFBTSxhQUFTLEVBQUM7QUFBaEIsS0FFUUgsUUFBUSxLQUFLRCxlQUFiLEdBRUksc0VBQ0k7QUFBRyxhQUFTLEVBQUM7QUFBYixLQUNNQyxRQUROLE9BR1E7QUFDQUMsUUFBTSxDQUNMRyxNQURELENBQ1MsVUFBQUMsRUFBRTtBQUFBLFdBQUdBLEVBQUUsQ0FBQ0YsZUFBRCxDQUFGLEtBQXdCSCxRQUEzQjtBQUFBLEdBRFgsRUFFQ00sTUFOVCxRQURKLENBRkosR0FlSTtBQUFHLFdBQU8sRUFBRSxtQkFBSztBQUFFSiwyQkFBcUIsQ0FBQ0YsUUFBRCxDQUFyQjtBQUFpQztBQUFwRCxLQUNNQSxRQUROLE9BR1E7QUFDQUMsUUFBTSxDQUNMRyxNQURELENBQ1MsVUFBQUMsRUFBRTtBQUFBLFdBQUdBLEVBQUUsQ0FBQ0YsZUFBRCxDQUFGLEtBQXdCSCxRQUEzQjtBQUFBLEdBRFgsRUFFQ00sTUFOVCxRQWpCWixTQURKO0FBZ0NILENBakNEOztJQW1DTUMsaUI7Ozs7O0FBQ0YsNkJBQWFDLEtBQWIsRUFBcUI7QUFBQTs7QUFBQSwwRkFDVkEsS0FEVTtBQUVwQjs7Ozs2QkFDUTtBQUFBOztBQUNMLGFBQ0ksd0VBRVEsS0FBS0EsS0FBTCxDQUFXQyxVQUFYLENBQXNCQyxHQUF0QixDQUEyQixVQUFFVixRQUFGLEVBQVlXLEtBQVosRUFBdUI7QUFDOUMsZUFDSSwyREFBQyxrQkFBRCxlQUNRLEtBQUksQ0FBQ0gsS0FEYjtBQUVJLGtCQUFRLEVBQUVSO0FBRmQsV0FESjtBQUtILE9BTkQsQ0FGUixDQURKO0FBYUg7Ozs7RUFsQjJCWSw0Q0FBSyxDQUFDQyxTOztBQXFCdENOLGlCQUFpQixDQUFDTyxTQUFsQixHQUE4QjtBQUMxQjtBQUNBWCxpQkFBZSxFQUFFWSxpREFBUyxDQUFDQyxNQUFWLENBQWlCQyxVQUZSO0FBRzFCO0FBQ0FSLFlBQVUsRUFBRU0saURBQVMsQ0FBQ0csS0FBVixDQUFnQkQsVUFKRjtBQUsxQjtBQUNBaEIsUUFBTSxFQUFFYyxpREFBUyxDQUFDRyxLQUFWLENBQWdCRCxVQU5FO0FBTzFCO0FBQ0FmLHVCQUFxQixFQUFFYSxpREFBUyxDQUFDSSxJQUFWLENBQWVGO0FBUlosQ0FBOUI7QUFXZVYsMEVBQWYiLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENhdGVnb3J5Q29tcG9uZW50IDogRGlzcGxheXMgdGhlIGxpc3Qgb2YgY2F0ZWdvcmllcyBhbmQgIHVzZXIgY2FuIHNlbGVjdCBcbiAqIHNlbGVjdCB0aGUgY2F0ZWdvcnlcbiAqXG4gKiBAYXV0aG9yIE5hdmVlbiBNdXRodXNhbXkgPG5hdmVlbkB3b3JkbGlmdC5pbz5cbiAqIEBzaW5jZSAzLjI0LjBcbiAqL1xuXG4vKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBUUkFTSF9DQVRFR09SWSA9ICd0cmFzaCdcbmV4cG9ydCBjb25zdCBBQ1RJVkVfQ0FURUdPUlkgPSAnYWN0aXZlJ1xuXG5jb25zdCBTaW5nbGVDYXRlZ29yeUl0ZW0gPSAoIHsgY2hvb3NlbkNhdGVnb3J5LCBjYXRlZ29yeSwgc291cmNlLCBjYXRlZ29yeVNlbGVjdEhhbmRsZXIsIGNhdGVnb3J5S2V5TmFtZSB9ICkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIndsLW1hcHBpbmdzLWxpbmsgd2wtY2F0ZWdvcnktdGl0bGVcIj5cbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjYXRlZ29yeSA9PT0gY2hvb3NlbkNhdGVnb3J5ID9cbiAgICAgICAgICAgICAgICAoICAgXG4gICAgICAgICAgICAgICAgICAgIDxiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPSd3bC1tYXBwaW5ncy1saW5rLWFjdGl2ZSc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBjYXRlZ29yeSB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ291bnQgdGhlIGNhdGVnb3J5IGluIHRoZSBzb3VyY2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoIGVsPT4gZWxbY2F0ZWdvcnlLZXlOYW1lXSA9PT0gY2F0ZWdvcnkgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkgfCBcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9iPlxuICAgICAgICAgICAgICAgICk6XG4gICAgICAgICAgICAgICAgKFxuICAgICAgICAgICAgICAgICAgICA8YSBvbkNsaWNrPXsoKT0+IHsgY2F0ZWdvcnlTZWxlY3RIYW5kbGVyKGNhdGVnb3J5KSB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHsgY2F0ZWdvcnkgfVxuICAgICAgICAgICAgICAgICAgICAgICAgKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBDb3VudCB0aGUgY2F0ZWdvcnkgaW4gdGhlIHNvdXJjZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoIGVsPT4gZWxbY2F0ZWdvcnlLZXlOYW1lXSA9PT0gY2F0ZWdvcnkgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pIHwgXG4gICAgICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmbmJzcDtcbiAgICAgICAgPC9zcGFuPlxuICAgIClcbn1cblxuY2xhc3MgQ2F0ZWdvcnlDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKCBwcm9wcyApIHtcbiAgICAgICAgc3VwZXIoIHByb3BzIClcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMuY2F0ZWdvcmllcy5tYXAoICggY2F0ZWdvcnksIGluZGV4ICkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U2luZ2xlQ2F0ZWdvcnlJdGVtIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Li4udGhpcy5wcm9wc31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk9e2NhdGVnb3J5fSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5DYXRlZ29yeUNvbXBvbmVudC5wcm9wVHlwZXMgPSB7XG4gICAgLy8gQ2F0ZWdvcnkga2V5IDogY2F0ZWdvcnkga2V5IG5hbWUgb2YgIG9iamVjdCBpbiBzb3VyY2Ugb2JqZWN0IGxpc3QuXG4gICAgY2F0ZWdvcnlLZXlOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgLy8gTGlzdCBvZiBjYXRlZ29yaWVzIG5lZWRlZCB0byBiZSBzaG93biBmb3IgdXNlclxuICAgIGNhdGVnb3JpZXM6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICAgIC8vIFNvdXJjZSA6IEFycmF5IG9mIG9iamVjdHNcbiAgICBzb3VyY2U6IFByb3BUeXBlcy5hcnJheS5pc1JlcXVpcmVkLFxuICAgIC8vIENhdGVnb3J5IHNlbGVjdCBoYW5kbGVyXG4gICAgY2F0ZWdvcnlTZWxlY3RIYW5kbGVyOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59XG5cbmV4cG9ydCBkZWZhdWx0IENhdGVnb3J5Q29tcG9uZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///19\n')},function(module,exports){eval('(function() { module.exports = this["ReactDOM"]; }());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1widGhpc1wiOlwiUmVhY3RET01cIn0/OWMzMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1DQUFtQyxFQUFFIiwiZmlsZSI6IjIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCkgeyBtb2R1bGUuZXhwb3J0cyA9IHRoaXNbXCJSZWFjdERPTVwiXTsgfSgpKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nif (true) {\n  module.exports = __webpack_require__(47);\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NGNlYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixJQUFJLElBQXFDO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLEVBQWtDO0FBQzdELENBQUMsTUFBTSxFQUVOIiwiZmlsZSI6IjIxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///21\n")},,,,,,function(module,exports){eval('var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function("return this")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === "object") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it\'s\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzP2NkMDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7O0FBRTVDIiwiZmlsZSI6IjI3LmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGc7XG5cbi8vIFRoaXMgd29ya3MgaW4gbm9uLXN0cmljdCBtb2RlXG5nID0gKGZ1bmN0aW9uKCkge1xuXHRyZXR1cm4gdGhpcztcbn0pKCk7XG5cbnRyeSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgZXZhbCBpcyBhbGxvd2VkIChzZWUgQ1NQKVxuXHRnID0gZyB8fCBuZXcgRnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpO1xufSBjYXRjaCAoZSkge1xuXHQvLyBUaGlzIHdvcmtzIGlmIHRoZSB3aW5kb3cgcmVmZXJlbmNlIGlzIGF2YWlsYWJsZVxuXHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIikgZyA9IHdpbmRvdztcbn1cblxuLy8gZyBjYW4gc3RpbGwgYmUgdW5kZWZpbmVkLCBidXQgbm90aGluZyB0byBkbyBhYm91dCBpdC4uLlxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3Ncbi8vIGVhc2llciB0byBoYW5kbGUgdGhpcyBjYXNlLiBpZighZ2xvYmFsKSB7IC4uLn1cblxubW9kdWxlLmV4cG9ydHMgPSBnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///27\n')},,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var _ponyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(38);\n/* global window */\n\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (true) {\n  root = module;\n} else {}\n\nvar result = Object(_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(root);\n/* harmony default export */ __webpack_exports__[\"a\"] = (result);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(27), __webpack_require__(64)(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvaW5kZXguanM/NmMyMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ3FDOztBQUVyQzs7QUFFQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsQ0FBQyxVQUFVLElBQTZCO0FBQ3hDO0FBQ0EsQ0FBQyxNQUFNLEVBRU47O0FBRUQsYUFBYSxvRUFBUTtBQUNOLCtEQUFNLEVBQUMiLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWwgd2luZG93ICovXG5pbXBvcnQgcG9ueWZpbGwgZnJvbSAnLi9wb255ZmlsbC5qcyc7XG5cbnZhciByb290O1xuXG5pZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gIHJvb3QgPSBzZWxmO1xufSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gd2luZG93O1xufSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gZ2xvYmFsO1xufSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gbW9kdWxlO1xufSBlbHNlIHtcbiAgcm9vdCA9IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG59XG5cbnZhciByZXN1bHQgPSBwb255ZmlsbChyb290KTtcbmV4cG9ydCBkZWZhdWx0IHJlc3VsdDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///31\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return BulkOptionValues; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return BulkActionOptions; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _category_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(19);\n/**\n * BulkActionSubComponents : Has a list of subcomponents required for bulk\n * action component to reduce code complexity\n *\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\nvar BulkOptionValues = {\n  TRASH: \'trash\',\n  DUPLICATE: \'duplicate\',\n  RESTORE: \'restore\',\n  DELETE_PERMANENTLY: \'delete_permanently\'\n};\n/**\n * Returns list of options to show if the category is\n * active.\n */\n\nvar ActiveOptions = function ActiveOptions() {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", {\n    value: BulkOptionValues.DUPLICATE\n  }, "Duplicate"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", {\n    value: BulkOptionValues.TRASH\n  }, "Move to Trash"));\n};\n/**\n * Returns list of options if the category is \n * trash.\n */\n\n\nvar TrashOptions = function TrashOptions() {\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", {\n    value: BulkOptionValues.RESTORE\n  }, "Restore"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", {\n    value: BulkOptionValues.DELETE_PERMANENTLY\n  }, "Delete Permanently"));\n};\n/**\n * BulkActionOptions conditionally render the options\n * from the choosen category.\n * @param {Object} props \n */\n\n\nvar BulkActionOptions = function BulkActionOptions(props) {\n  switch (props.choosenCategory) {\n    case _category_component__WEBPACK_IMPORTED_MODULE_1__[/* TRASH_CATEGORY */ "b"]:\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(TrashOptions, null);\n\n    case _category_component__WEBPACK_IMPORTED_MODULE_1__[/* ACTIVE_CATEGORY */ "a"]:\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(ActiveOptions, null);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwcGluZ3MvY29tcG9uZW50cy9idWxrLWFjdGlvbi1zdWItY29tcG9uZW50cy5qcz8wZWEyIl0sIm5hbWVzIjpbIkJ1bGtPcHRpb25WYWx1ZXMiLCJUUkFTSCIsIkRVUExJQ0FURSIsIlJFU1RPUkUiLCJERUxFVEVfUEVSTUFORU5UTFkiLCJBY3RpdmVPcHRpb25zIiwiVHJhc2hPcHRpb25zIiwiQnVsa0FjdGlvbk9wdGlvbnMiLCJwcm9wcyIsImNob29zZW5DYXRlZ29yeSIsIlRSQVNIX0NBVEVHT1JZIiwiQUNUSVZFX0NBVEVHT1JZIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7O0FBUUE7OztBQUdBO0FBQ0E7QUFFTyxJQUFNQSxnQkFBZ0IsR0FBRztBQUM1QkMsT0FBSyxFQUFFLE9BRHFCO0FBRTVCQyxXQUFTLEVBQUUsV0FGaUI7QUFHNUJDLFNBQU8sRUFBRSxTQUhtQjtBQUk1QkMsb0JBQWtCLEVBQUU7QUFKUSxDQUF6QjtBQU9QOzs7OztBQUlBLElBQU1DLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsR0FBTTtBQUV4QixTQUNJLDJEQUFDLDRDQUFELENBQU8sUUFBUCxRQUNJO0FBQVEsU0FBSyxFQUFHTCxnQkFBZ0IsQ0FBQ0U7QUFBakMsaUJBREosRUFFSTtBQUFRLFNBQUssRUFBR0YsZ0JBQWdCLENBQUNDO0FBQWpDLHFCQUZKLENBREo7QUFNSCxDQVJEO0FBVUE7Ozs7OztBQUlBLElBQU1LLFlBQVksR0FBRyxTQUFmQSxZQUFlLEdBQU07QUFDdkIsU0FDSSwyREFBQyw0Q0FBRCxDQUFPLFFBQVAsUUFDSTtBQUFRLFNBQUssRUFBR04sZ0JBQWdCLENBQUNHO0FBQWpDLGVBREosRUFFSTtBQUFRLFNBQUssRUFBR0gsZ0JBQWdCLENBQUNJO0FBQWpDLDBCQUZKLENBREo7QUFNSCxDQVBEO0FBU0E7Ozs7Ozs7QUFLTyxJQUFNRyxpQkFBaUIsR0FBRyxTQUFwQkEsaUJBQW9CLENBQUVDLEtBQUYsRUFBYTtBQUMxQyxVQUFTQSxLQUFLLENBQUNDLGVBQWY7QUFDSSxTQUFLQywwRUFBTDtBQUNJLGFBQU8sMkRBQUMsWUFBRCxPQUFQOztBQUNKLFNBQUtDLDJFQUFMO0FBQ0ksYUFBTywyREFBQyxhQUFELE9BQVA7QUFKUjtBQU1ILENBUE0iLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEJ1bGtBY3Rpb25TdWJDb21wb25lbnRzIDogSGFzIGEgbGlzdCBvZiBzdWJjb21wb25lbnRzIHJlcXVpcmVkIGZvciBidWxrXG4gKiBhY3Rpb24gY29tcG9uZW50IHRvIHJlZHVjZSBjb2RlIGNvbXBsZXhpdHlcbiAqXG4gKiBAYXV0aG9yIE5hdmVlbiBNdXRodXNhbXkgPG5hdmVlbkB3b3JkbGlmdC5pbz5cbiAqIEBzaW5jZSAzLjI0LjBcbiAqL1xuXG4vKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IFRSQVNIX0NBVEVHT1JZLCBBQ1RJVkVfQ0FURUdPUlkgfSBmcm9tIFwiLi9jYXRlZ29yeS1jb21wb25lbnRcIlxuXG5leHBvcnQgY29uc3QgQnVsa09wdGlvblZhbHVlcyA9IHtcbiAgICBUUkFTSDogJ3RyYXNoJyxcbiAgICBEVVBMSUNBVEU6ICdkdXBsaWNhdGUnLFxuICAgIFJFU1RPUkU6ICdyZXN0b3JlJyxcbiAgICBERUxFVEVfUEVSTUFORU5UTFk6ICdkZWxldGVfcGVybWFuZW50bHknXG59XG5cbi8qKlxuICogUmV0dXJucyBsaXN0IG9mIG9wdGlvbnMgdG8gc2hvdyBpZiB0aGUgY2F0ZWdvcnkgaXNcbiAqIGFjdGl2ZS5cbiAqL1xuY29uc3QgQWN0aXZlT3B0aW9ucyA9ICgpID0+IHtcbiAgICBcbiAgICByZXR1cm4gKFxuICAgICAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPXsgQnVsa09wdGlvblZhbHVlcy5EVVBMSUNBVEUgfT5EdXBsaWNhdGU8L29wdGlvbj5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9eyBCdWxrT3B0aW9uVmFsdWVzLlRSQVNIIH0+TW92ZSB0byBUcmFzaDwvb3B0aW9uPlxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgKVxufSBcblxuLyoqXG4gKiBSZXR1cm5zIGxpc3Qgb2Ygb3B0aW9ucyBpZiB0aGUgY2F0ZWdvcnkgaXMgXG4gKiB0cmFzaC5cbiAqL1xuY29uc3QgVHJhc2hPcHRpb25zID0gKCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9eyBCdWxrT3B0aW9uVmFsdWVzLlJFU1RPUkUgfT5SZXN0b3JlPC9vcHRpb24+XG4gICAgICAgICAgICA8b3B0aW9uIHZhbHVlPXsgQnVsa09wdGlvblZhbHVlcy5ERUxFVEVfUEVSTUFORU5UTFkgfT5EZWxldGUgUGVybWFuZW50bHk8L29wdGlvbj5cbiAgICAgICAgPC9SZWFjdC5GcmFnbWVudD4gIFxuICAgIClcbn1cblxuLyoqXG4gKiBCdWxrQWN0aW9uT3B0aW9ucyBjb25kaXRpb25hbGx5IHJlbmRlciB0aGUgb3B0aW9uc1xuICogZnJvbSB0aGUgY2hvb3NlbiBjYXRlZ29yeS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wcyBcbiAqL1xuZXhwb3J0IGNvbnN0IEJ1bGtBY3Rpb25PcHRpb25zID0gKCBwcm9wcyApID0+IHtcbiAgICBzd2l0Y2ggKCBwcm9wcy5jaG9vc2VuQ2F0ZWdvcnkgKSB7XG4gICAgICAgIGNhc2UgVFJBU0hfQ0FURUdPUlk6XG4gICAgICAgICAgICByZXR1cm4gPFRyYXNoT3B0aW9ucyAvPlxuICAgICAgICBjYXNlIEFDVElWRV9DQVRFR09SWTpcbiAgICAgICAgICAgIHJldHVybiA8QWN0aXZlT3B0aW9ucyAvPlxuICAgIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///32\n')},,,,,function(module,exports,__webpack_require__){"use strict";eval("\n\nvar reactIs = __webpack_require__(21);\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\n\nfunction getStatics(component) {\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  }\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanM/ZGE2YSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsRUFBVTs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG1CQUFtQixpQkFBaUI7QUFDcEM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciByZWFjdElzID0gcmVxdWlyZSgncmVhY3QtaXMnKTtcblxuLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xudmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICBjb250ZXh0VHlwZTogdHJ1ZSxcbiAgY29udGV4dFR5cGVzOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBnZXREZWZhdWx0UHJvcHM6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICBtaXhpbnM6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBLTk9XTl9TVEFUSUNTID0ge1xuICBuYW1lOiB0cnVlLFxuICBsZW5ndGg6IHRydWUsXG4gIHByb3RvdHlwZTogdHJ1ZSxcbiAgY2FsbGVyOiB0cnVlLFxuICBjYWxsZWU6IHRydWUsXG4gIGFyZ3VtZW50czogdHJ1ZSxcbiAgYXJpdHk6IHRydWVcbn07XG52YXIgRk9SV0FSRF9SRUZfU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgcmVuZGVyOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWVcbn07XG52YXIgTUVNT19TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICBjb21wYXJlOiB0cnVlLFxuICBkZWZhdWx0UHJvcHM6IHRydWUsXG4gIGRpc3BsYXlOYW1lOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgVFlQRV9TVEFUSUNTID0ge307XG5UWVBFX1NUQVRJQ1NbcmVhY3RJcy5Gb3J3YXJkUmVmXSA9IEZPUldBUkRfUkVGX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfVxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///37\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return symbolObservablePonyfill; });\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvcG9ueWZpbGwuanM/NDhiNSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFlO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiIzOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN5bWJvbE9ic2VydmFibGVQb255ZmlsbChyb290KSB7XG5cdHZhciByZXN1bHQ7XG5cdHZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuXHRpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdGlmIChTeW1ib2wub2JzZXJ2YWJsZSkge1xuXHRcdFx0cmVzdWx0ID0gU3ltYm9sLm9ic2VydmFibGU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbCgnb2JzZXJ2YWJsZScpO1xuXHRcdFx0U3ltYm9sLm9ic2VydmFibGUgPSByZXN1bHQ7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJlc3VsdCA9ICdAQG9ic2VydmFibGUnO1xuXHR9XG5cblx0cmV0dXJuIHJlc3VsdDtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///38\n")},,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (thunk);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtdGh1bmsvZXMvaW5kZXguanM/YjA4MyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVlLDhEQUFLIiwiZmlsZSI6IjQyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gY3JlYXRlVGh1bmtNaWRkbGV3YXJlKGV4dHJhQXJndW1lbnQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaCxcbiAgICAgICAgZ2V0U3RhdGUgPSBfcmVmLmdldFN0YXRlO1xuICAgIHJldHVybiBmdW5jdGlvbiAobmV4dCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgaWYgKHR5cGVvZiBhY3Rpb24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICByZXR1cm4gYWN0aW9uKGRpc3BhdGNoLCBnZXRTdGF0ZSwgZXh0cmFBcmd1bWVudCk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV4dChhY3Rpb24pO1xuICAgICAgfTtcbiAgICB9O1xuICB9O1xufVxuXG52YXIgdGh1bmsgPSBjcmVhdGVUaHVua01pZGRsZXdhcmUoKTtcbnRodW5rLndpdGhFeHRyYUFyZ3VtZW50ID0gY3JlYXRlVGh1bmtNaWRkbGV3YXJlO1xuXG5leHBvcnQgZGVmYXVsdCB0aHVuazsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///42\n")},,,function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = __webpack_require__(46);\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMuanM/ZDdhMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWIsMkJBQTJCLG1CQUFPLENBQUMsRUFBNEI7O0FBRS9EO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjQ1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb24oKSB7fVxuZnVuY3Rpb24gZW1wdHlGdW5jdGlvbldpdGhSZXNldCgpIHt9XG5lbXB0eUZ1bmN0aW9uV2l0aFJlc2V0LnJlc2V0V2FybmluZ0NhY2hlID0gZW1wdHlGdW5jdGlvbjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgZnVuY3Rpb24gc2hpbShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgIGlmIChzZWNyZXQgPT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAvLyBJdCBpcyBzdGlsbCBzYWZlIHdoZW4gY2FsbGVkIGZyb20gUmVhY3QuXG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXG4gICAgICAnQ2FsbGluZyBQcm9wVHlwZXMgdmFsaWRhdG9ycyBkaXJlY3RseSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZS4gJyArXG4gICAgICAnVXNlIFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpIHRvIGNhbGwgdGhlbS4gJyArXG4gICAgICAnUmVhZCBtb3JlIGF0IGh0dHA6Ly9mYi5tZS91c2UtY2hlY2stcHJvcC10eXBlcydcbiAgICApO1xuICAgIGVyci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIHRocm93IGVycjtcbiAgfTtcbiAgc2hpbS5pc1JlcXVpcmVkID0gc2hpbTtcbiAgZnVuY3Rpb24gZ2V0U2hpbSgpIHtcbiAgICByZXR1cm4gc2hpbTtcbiAgfTtcbiAgLy8gSW1wb3J0YW50IVxuICAvLyBLZWVwIHRoaXMgbGlzdCBpbiBzeW5jIHdpdGggcHJvZHVjdGlvbiB2ZXJzaW9uIGluIGAuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzLmpzYC5cbiAgdmFyIFJlYWN0UHJvcFR5cGVzID0ge1xuICAgIGFycmF5OiBzaGltLFxuICAgIGJvb2w6IHNoaW0sXG4gICAgZnVuYzogc2hpbSxcbiAgICBudW1iZXI6IHNoaW0sXG4gICAgb2JqZWN0OiBzaGltLFxuICAgIHN0cmluZzogc2hpbSxcbiAgICBzeW1ib2w6IHNoaW0sXG5cbiAgICBhbnk6IHNoaW0sXG4gICAgYXJyYXlPZjogZ2V0U2hpbSxcbiAgICBlbGVtZW50OiBzaGltLFxuICAgIGVsZW1lbnRUeXBlOiBzaGltLFxuICAgIGluc3RhbmNlT2Y6IGdldFNoaW0sXG4gICAgbm9kZTogc2hpbSxcbiAgICBvYmplY3RPZjogZ2V0U2hpbSxcbiAgICBvbmVPZjogZ2V0U2hpbSxcbiAgICBvbmVPZlR5cGU6IGdldFNoaW0sXG4gICAgc2hhcGU6IGdldFNoaW0sXG4gICAgZXhhY3Q6IGdldFNoaW0sXG5cbiAgICBjaGVja1Byb3BUeXBlczogZW1wdHlGdW5jdGlvbldpdGhSZXNldCxcbiAgICByZXNldFdhcm5pbmdDYWNoZTogZW1wdHlGdW5jdGlvblxuICB9O1xuXG4gIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzO1xuXG4gIHJldHVybiBSZWFjdFByb3BUeXBlcztcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///45\n")},function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanM/NTliMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7O0FBRUEiLCJmaWxlIjoiNDYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///46\n")},function(module,exports,__webpack_require__){"use strict";eval('/** @license React v16.12.0\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nObject.defineProperty(exports,"__esModule",{value:!0});\nvar b="function"===typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.suspense_list"):\n60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.fundamental"):60117,w=b?Symbol.for("react.responder"):60118,x=b?Symbol.for("react.scope"):60119;function y(a){if("object"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function z(a){return y(a)===m}\nexports.typeOf=y;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;\nexports.isValidElementType=function(a){return"string"===typeof a||"function"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===v||a.$$typeof===w||a.$$typeof===x)};exports.isAsyncMode=function(a){return z(a)||y(a)===l};exports.isConcurrentMode=z;exports.isContextConsumer=function(a){return y(a)===k};exports.isContextProvider=function(a){return y(a)===h};\nexports.isElement=function(a){return"object"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return y(a)===n};exports.isFragment=function(a){return y(a)===e};exports.isLazy=function(a){return y(a)===t};exports.isMemo=function(a){return y(a)===r};exports.isPortal=function(a){return y(a)===d};exports.isProfiler=function(a){return y(a)===g};exports.isStrictMode=function(a){return y(a)===f};exports.isSuspense=function(a){return y(a)===p};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzP2E5M2QiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYSw0Q0FBNEMsU0FBUztBQUNsRTtBQUNBLGtNQUFrTSxjQUFjLGtDQUFrQyxpQkFBaUIsVUFBVSwwQkFBMEIsbURBQW1ELGtDQUFrQyw0Q0FBNEMsa0JBQWtCLGtCQUFrQixjQUFjO0FBQzFkLGlCQUFpQixvQkFBb0IseUJBQXlCLDBCQUEwQiwwQkFBMEIsa0JBQWtCLHFCQUFxQixtQkFBbUIsZUFBZSxlQUFlLGlCQUFpQixtQkFBbUIscUJBQXFCO0FBQ25RLHVDQUF1Qyw2UEFBNlAsZ0NBQWdDLHVCQUF1QiwyQkFBMkIsc0NBQXNDLGlCQUFpQixzQ0FBc0M7QUFDbmQsOEJBQThCLHFEQUFxRCxpQ0FBaUMsaUJBQWlCLCtCQUErQixpQkFBaUIsMkJBQTJCLGlCQUFpQiwyQkFBMkIsaUJBQWlCLDZCQUE2QixpQkFBaUIsK0JBQStCLGlCQUFpQixpQ0FBaUMsaUJBQWlCLCtCQUErQiIsImZpbGUiOiI0Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAbGljZW5zZSBSZWFjdCB2MTYuMTIuMFxuICogcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7XG52YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTpcbjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mdW5kYW1lbnRhbFwiKTo2MDExNyx3PWI/U3ltYm9sLmZvcihcInJlYWN0LnJlc3BvbmRlclwiKTo2MDExOCx4PWI/U3ltYm9sLmZvcihcInJlYWN0LnNjb3BlXCIpOjYwMTE5O2Z1bmN0aW9uIHkoYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiB6KGEpe3JldHVybiB5KGEpPT09bX1cbmV4cG9ydHMudHlwZU9mPXk7ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO2V4cG9ydHMuUHJvZmlsZXI9ZztleHBvcnRzLlN0cmljdE1vZGU9ZjtleHBvcnRzLlN1c3BlbnNlPXA7XG5leHBvcnRzLmlzVmFsaWRFbGVtZW50VHlwZT1mdW5jdGlvbihhKXtyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGF8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhfHxhPT09ZXx8YT09PW18fGE9PT1nfHxhPT09Znx8YT09PXB8fGE9PT1xfHxcIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiYoYS4kJHR5cGVvZj09PXR8fGEuJCR0eXBlb2Y9PT1yfHxhLiQkdHlwZW9mPT09aHx8YS4kJHR5cGVvZj09PWt8fGEuJCR0eXBlb2Y9PT1ufHxhLiQkdHlwZW9mPT09dnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14KX07ZXhwb3J0cy5pc0FzeW5jTW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKXx8eShhKT09PWx9O2V4cG9ydHMuaXNDb25jdXJyZW50TW9kZT16O2V4cG9ydHMuaXNDb250ZXh0Q29uc3VtZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1rfTtleHBvcnRzLmlzQ29udGV4dFByb3ZpZGVyPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09aH07XG5leHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHkoYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PXR9O2V4cG9ydHMuaXNNZW1vPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cn07ZXhwb3J0cy5pc1BvcnRhbD1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWR9O2V4cG9ydHMuaXNQcm9maWxlcj1mdW5jdGlvbihhKXtyZXR1cm4geShhKT09PWd9O2V4cG9ydHMuaXNTdHJpY3RNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09Zn07ZXhwb3J0cy5pc1N1c3BlbnNlPWZ1bmN0aW9uKGEpe3JldHVybiB5KGEpPT09cH07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///47\n')},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///48\n")},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(process) {/* unused harmony export Immer */\n/* unused harmony export applyPatches */\n/* unused harmony export createDraft */\n/* unused harmony export finishDraft */\n/* unused harmony export immerable */\n/* unused harmony export isDraft */\n/* unused harmony export isDraftable */\n/* unused harmony export nothing */\n/* unused harmony export original */\n/* unused harmony export produce */\n/* unused harmony export produceWithPatches */\n/* unused harmony export setAutoFreeze */\n/* unused harmony export setUseProxies */\nvar obj;\nvar NOTHING = typeof Symbol !== "undefined" ? Symbol("immer-nothing") : ( obj = {}, obj["immer-nothing"] = true, obj );\nvar DRAFTABLE = typeof Symbol !== "undefined" && Symbol.for ? Symbol.for("immer-draftable") : "__$immer_draftable";\nvar DRAFT_STATE = typeof Symbol !== "undefined" && Symbol.for ? Symbol.for("immer-state") : "__$immer_state";\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value) { return false; }\n  return isPlainObject(value) || !!value[DRAFTABLE] || !!value.constructor[DRAFTABLE];\n}\nfunction isPlainObject(value) {\n  if (!value || typeof value !== "object") { return false; }\n  if (Array.isArray(value)) { return true; }\n  var proto = Object.getPrototypeOf(value);\n  return !proto || proto === Object.prototype;\n}\nfunction original(value) {\n  if (value && value[DRAFT_STATE]) {\n    return value[DRAFT_STATE].base;\n  } // otherwise return undefined\n\n}\nvar assign = Object.assign || function assign(target, value) {\n  for (var key in value) {\n    if (has(value, key)) {\n      target[key] = value[key];\n    }\n  }\n\n  return target;\n};\nvar ownKeys = typeof Reflect !== "undefined" && Reflect.ownKeys ? Reflect.ownKeys : typeof Object.getOwnPropertySymbols !== "undefined" ? function (obj) { return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj)); } : Object.getOwnPropertyNames;\nfunction shallowCopy(base, invokeGetters) {\n  if ( invokeGetters === void 0 ) invokeGetters = false;\n\n  if (Array.isArray(base)) { return base.slice(); }\n  var clone = Object.create(Object.getPrototypeOf(base));\n  ownKeys(base).forEach(function (key) {\n    if (key === DRAFT_STATE) {\n      return; // Never copy over draft state.\n    }\n\n    var desc = Object.getOwnPropertyDescriptor(base, key);\n    var value = desc.value;\n\n    if (desc.get) {\n      if (!invokeGetters) {\n        throw new Error("Immer drafts cannot have computed properties");\n      }\n\n      value = desc.get.call(base);\n    }\n\n    if (desc.enumerable) {\n      clone[key] = value;\n    } else {\n      Object.defineProperty(clone, key, {\n        value: value,\n        writable: true,\n        configurable: true\n      });\n    }\n  });\n  return clone;\n}\nfunction each(value, cb) {\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) { cb(i, value[i], value); }\n  } else {\n    ownKeys(value).forEach(function (key) { return cb(key, value[key], value); });\n  }\n}\nfunction isEnumerable(base, prop) {\n  var desc = Object.getOwnPropertyDescriptor(base, prop);\n  return !!desc && desc.enumerable;\n}\nfunction has(thing, prop) {\n  return Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction is(x, y) {\n  // From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction clone(obj) {\n  if (!isDraftable(obj)) { return obj; }\n  if (Array.isArray(obj)) { return obj.map(clone); }\n  var cloned = Object.create(Object.getPrototypeOf(obj));\n\n  for (var key in obj) { cloned[key] = clone(obj[key]); }\n\n  return cloned;\n}\nfunction deepFreeze(obj) {\n  if (!isDraftable(obj) || isDraft(obj) || Object.isFrozen(obj)) { return; }\n  Object.freeze(obj);\n  if (Array.isArray(obj)) { obj.forEach(deepFreeze); }else { for (var key in obj) { deepFreeze(obj[key]); } }\n}\n\n/** Each scope represents a `produce` call. */\n\nvar ImmerScope = function ImmerScope(parent) {\n  this.drafts = [];\n  this.parent = parent; // Whenever the modified draft contains a draft from another scope, we\n  // need to prevent auto-freezing so the unowned draft can be finalized.\n\n  this.canAutoFreeze = true; // To avoid prototype lookups:\n\n  this.patches = null;\n};\n\nImmerScope.prototype.usePatches = function usePatches (patchListener) {\n  if (patchListener) {\n    this.patches = [];\n    this.inversePatches = [];\n    this.patchListener = patchListener;\n  }\n};\n\nImmerScope.prototype.revoke = function revoke$1 () {\n  this.leave();\n  this.drafts.forEach(revoke);\n  this.drafts = null; // Make draft-related methods throw.\n};\n\nImmerScope.prototype.leave = function leave () {\n  if (this === ImmerScope.current) {\n    ImmerScope.current = this.parent;\n  }\n};\nImmerScope.current = null;\n\nImmerScope.enter = function () {\n  return this.current = new ImmerScope(this.current);\n};\n\nfunction revoke(draft) {\n  draft[DRAFT_STATE].revoke();\n}\n\n// but share them all instead\n\nvar descriptors = {};\nfunction willFinalize(scope, result, isReplaced) {\n  scope.drafts.forEach(function (draft) {\n    draft[DRAFT_STATE].finalizing = true;\n  });\n\n  if (!isReplaced) {\n    if (scope.patches) {\n      markChangesRecursively(scope.drafts[0]);\n    } // This is faster when we don\'t care about which attributes changed.\n\n\n    markChangesSweep(scope.drafts);\n  } // When a child draft is returned, look for changes.\n  else if (isDraft(result) && result[DRAFT_STATE].scope === scope) {\n      markChangesSweep(scope.drafts);\n    }\n}\nfunction createProxy(base, parent) {\n  var isArray = Array.isArray(base);\n  var draft = clonePotentialDraft(base);\n  each(draft, function (prop) {\n    proxyProperty(draft, prop, isArray || isEnumerable(base, prop));\n  }); // See "proxy.js" for property documentation.\n\n  var scope = parent ? parent.scope : ImmerScope.current;\n  var state = {\n    scope: scope,\n    modified: false,\n    finalizing: false,\n    // es5 only\n    finalized: false,\n    assigned: {},\n    parent: parent,\n    base: base,\n    draft: draft,\n    copy: null,\n    revoke: revoke$1,\n    revoked: false // es5 only\n\n  };\n  createHiddenProperty(draft, DRAFT_STATE, state);\n  scope.drafts.push(draft);\n  return draft;\n}\n\nfunction revoke$1() {\n  this.revoked = true;\n}\n\nfunction source(state) {\n  return state.copy || state.base;\n} // Access a property without creating an Immer draft.\n\n\nfunction peek(draft, prop) {\n  var state = draft[DRAFT_STATE];\n\n  if (state && !state.finalizing) {\n    state.finalizing = true;\n    var value = draft[prop];\n    state.finalizing = false;\n    return value;\n  }\n\n  return draft[prop];\n}\n\nfunction get(state, prop) {\n  assertUnrevoked(state);\n  var value = peek(source(state), prop);\n  if (state.finalizing) { return value; } // Create a draft if the value is unmodified.\n\n  if (value === peek(state.base, prop) && isDraftable(value)) {\n    prepareCopy(state);\n    return state.copy[prop] = createProxy(value, state);\n  }\n\n  return value;\n}\n\nfunction set(state, prop, value) {\n  assertUnrevoked(state);\n  state.assigned[prop] = true;\n\n  if (!state.modified) {\n    if (is(value, peek(source(state), prop))) { return; }\n    markChanged(state);\n    prepareCopy(state);\n  }\n\n  state.copy[prop] = value;\n}\n\nfunction markChanged(state) {\n  if (!state.modified) {\n    state.modified = true;\n    if (state.parent) { markChanged(state.parent); }\n  }\n}\n\nfunction prepareCopy(state) {\n  if (!state.copy) { state.copy = clonePotentialDraft(state.base); }\n}\n\nfunction clonePotentialDraft(base) {\n  var state = base && base[DRAFT_STATE];\n\n  if (state) {\n    state.finalizing = true;\n    var draft = shallowCopy(state.draft, true);\n    state.finalizing = false;\n    return draft;\n  }\n\n  return shallowCopy(base);\n}\n\nfunction proxyProperty(draft, prop, enumerable) {\n  var desc = descriptors[prop];\n\n  if (desc) {\n    desc.enumerable = enumerable;\n  } else {\n    descriptors[prop] = desc = {\n      configurable: true,\n      enumerable: enumerable,\n\n      get: function get$1() {\n        return get(this[DRAFT_STATE], prop);\n      },\n\n      set: function set$1(value) {\n        set(this[DRAFT_STATE], prop, value);\n      }\n\n    };\n  }\n\n  Object.defineProperty(draft, prop, desc);\n}\n\nfunction assertUnrevoked(state) {\n  if (state.revoked === true) { throw new Error("Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? " + JSON.stringify(source(state))); }\n} // This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\n\nfunction markChangesSweep(drafts) {\n  // The natural order of drafts in the `scope` array is based on when they\n  // were accessed. By processing drafts in reverse natural order, we have a\n  // better chance of processing leaf nodes first. When a leaf node is known to\n  // have changed, we can avoid any traversal of its ancestor nodes.\n  for (var i = drafts.length - 1; i >= 0; i--) {\n    var state = drafts[i][DRAFT_STATE];\n\n    if (!state.modified) {\n      if (Array.isArray(state.base)) {\n        if (hasArrayChanges(state)) { markChanged(state); }\n      } else if (hasObjectChanges(state)) { markChanged(state); }\n    }\n  }\n}\n\nfunction markChangesRecursively(object) {\n  if (!object || typeof object !== "object") { return; }\n  var state = object[DRAFT_STATE];\n  if (!state) { return; }\n  var base = state.base;\n  var draft = state.draft;\n  var assigned = state.assigned;\n\n  if (!Array.isArray(object)) {\n    // Look for added keys.\n    Object.keys(draft).forEach(function (key) {\n      // The `undefined` check is a fast path for pre-existing keys.\n      if (base[key] === undefined && !has(base, key)) {\n        assigned[key] = true;\n        markChanged(state);\n      } else if (!assigned[key]) {\n        // Only untouched properties trigger recursion.\n        markChangesRecursively(draft[key]);\n      }\n    }); // Look for removed keys.\n\n    Object.keys(base).forEach(function (key) {\n      // The `undefined` check is a fast path for pre-existing keys.\n      if (draft[key] === undefined && !has(draft, key)) {\n        assigned[key] = false;\n        markChanged(state);\n      }\n    });\n  } else if (hasArrayChanges(state)) {\n    markChanged(state);\n    assigned.length = true;\n\n    if (draft.length < base.length) {\n      for (var i = draft.length; i < base.length; i++) { assigned[i] = false; }\n    } else {\n      for (var i$1 = base.length; i$1 < draft.length; i$1++) { assigned[i$1] = true; }\n    }\n\n    for (var i$2 = 0; i$2 < draft.length; i$2++) {\n      // Only untouched indices trigger recursion.\n      if (assigned[i$2] === undefined) { markChangesRecursively(draft[i$2]); }\n    }\n  }\n}\n\nfunction hasObjectChanges(state) {\n  var base = state.base;\n  var draft = state.draft; // Search for added keys and changed keys. Start at the back, because\n  // non-numeric keys are ordered by time of definition on the object.\n\n  var keys = Object.keys(draft);\n\n  for (var i = keys.length - 1; i >= 0; i--) {\n    var key = keys[i];\n    var baseValue = base[key]; // The `undefined` check is a fast path for pre-existing keys.\n\n    if (baseValue === undefined && !has(base, key)) {\n      return true;\n    } // Once a base key is deleted, future changes go undetected, because its\n    // descriptor is erased. This branch detects any missed changes.\n    else {\n        var value = draft[key];\n        var state$1 = value && value[DRAFT_STATE];\n\n        if (state$1 ? state$1.base !== baseValue : !is(value, baseValue)) {\n          return true;\n        }\n      }\n  } // At this point, no keys were added or changed.\n  // Compare key count to determine if keys were deleted.\n\n\n  return keys.length !== Object.keys(base).length;\n}\n\nfunction hasArrayChanges(state) {\n  var draft = state.draft;\n  if (draft.length !== state.base.length) { return true; } // See #116\n  // If we first shorten the length, our array interceptors will be removed.\n  // If after that new items are added, result in the same original length,\n  // those last items will have no intercepting property.\n  // So if there is no own descriptor on the last position, we know that items were removed and added\n  // N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n  // the last one\n\n  var descriptor = Object.getOwnPropertyDescriptor(draft, draft.length - 1); // descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\n  if (descriptor && !descriptor.get) { return true; } // For all other cases, we don\'t have to compare, as they would have been picked up by the index setters\n\n  return false;\n}\n\nfunction createHiddenProperty(target, prop, value) {\n  Object.defineProperty(target, prop, {\n    value: value,\n    enumerable: false,\n    writable: true\n  });\n}\n\nvar legacyProxy = /*#__PURE__*/Object.freeze({\n\twillFinalize: willFinalize,\n\tcreateProxy: createProxy\n});\n\nfunction willFinalize$1() {}\nfunction createProxy$1(base, parent) {\n  var scope = parent ? parent.scope : ImmerScope.current;\n  var state = {\n    // Track which produce call this is associated with.\n    scope: scope,\n    // True for both shallow and deep changes.\n    modified: false,\n    // Used during finalization.\n    finalized: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned: {},\n    // The parent draft state.\n    parent: parent,\n    // The base state.\n    base: base,\n    // The base proxy.\n    draft: null,\n    // Any property proxies.\n    drafts: {},\n    // The base copy with any updated values.\n    copy: null,\n    // Called by the `produce` function.\n    revoke: null\n  };\n  var ref = Array.isArray(base) ? // [state] is used for arrays, to make sure the proxy is array-ish and not violate invariants,\n  // although state itself is an object\n  Proxy.revocable([state], arrayTraps) : Proxy.revocable(state, objectTraps);\n  var revoke = ref.revoke;\n  var proxy = ref.proxy;\n  state.draft = proxy;\n  state.revoke = revoke;\n  scope.drafts.push(proxy);\n  return proxy;\n}\nvar objectTraps = {\n  get: get$1,\n\n  has: function has(target, prop) {\n    return prop in source$1(target);\n  },\n\n  ownKeys: function ownKeys(target) {\n    return Reflect.ownKeys(source$1(target));\n  },\n\n  set: set$1,\n  deleteProperty: deleteProperty,\n  getOwnPropertyDescriptor: getOwnPropertyDescriptor,\n\n  defineProperty: function defineProperty() {\n    throw new Error("Object.defineProperty() cannot be used on an Immer draft"); // prettier-ignore\n  },\n\n  getPrototypeOf: function getPrototypeOf(target) {\n    return Object.getPrototypeOf(target.base);\n  },\n\n  setPrototypeOf: function setPrototypeOf() {\n    throw new Error("Object.setPrototypeOf() cannot be used on an Immer draft"); // prettier-ignore\n  }\n\n};\nvar arrayTraps = {};\neach(objectTraps, function (key, fn) {\n  arrayTraps[key] = function () {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\n\narrayTraps.deleteProperty = function (state, prop) {\n  if (isNaN(parseInt(prop))) {\n    throw new Error("Immer only supports deleting array indices"); // prettier-ignore\n  }\n\n  return objectTraps.deleteProperty.call(this, state[0], prop);\n};\n\narrayTraps.set = function (state, prop, value) {\n  if (prop !== "length" && isNaN(parseInt(prop))) {\n    throw new Error("Immer only supports setting array indices and the \'length\' property"); // prettier-ignore\n  }\n\n  return objectTraps.set.call(this, state[0], prop, value);\n}; // returns the object we should be reading the current value from, which is base, until some change has been made\n\n\nfunction source$1(state) {\n  return state.copy || state.base;\n} // Access a property without creating an Immer draft.\n\n\nfunction peek$1(draft, prop) {\n  var state = draft[DRAFT_STATE];\n  var desc = Reflect.getOwnPropertyDescriptor(state ? source$1(state) : draft, prop);\n  return desc && desc.value;\n}\n\nfunction get$1(state, prop) {\n  if (prop === DRAFT_STATE) { return state; }\n  var drafts = state.drafts; // Check for existing draft in unmodified state.\n\n  if (!state.modified && has(drafts, prop)) {\n    return drafts[prop];\n  }\n\n  var value = source$1(state)[prop];\n\n  if (state.finalized || !isDraftable(value)) {\n    return value;\n  } // Check for existing draft in modified state.\n\n\n  if (state.modified) {\n    // Assigned values are never drafted. This catches any drafts we created, too.\n    if (value !== peek$1(state.base, prop)) { return value; } // Store drafts on the copy (when one exists).\n\n    drafts = state.copy;\n  }\n\n  return drafts[prop] = createProxy$1(value, state);\n}\n\nfunction set$1(state, prop, value) {\n  if (!state.modified) {\n    var baseValue = peek$1(state.base, prop); // Optimize based on value\'s truthiness. Truthy values are guaranteed to\n    // never be undefined, so we can avoid the `in` operator. Lastly, truthy\n    // values may be drafts, but falsy values are never drafts.\n\n    var isUnchanged = value ? is(baseValue, value) || value === state.drafts[prop] : is(baseValue, value) && prop in state.base;\n    if (isUnchanged) { return true; }\n    markChanged$1(state);\n  }\n\n  state.assigned[prop] = true;\n  state.copy[prop] = value;\n  return true;\n}\n\nfunction deleteProperty(state, prop) {\n  // The `undefined` check is a fast path for pre-existing keys.\n  if (peek$1(state.base, prop) !== undefined || prop in state.base) {\n    state.assigned[prop] = false;\n    markChanged$1(state);\n  } else if (state.assigned[prop]) {\n    // if an originally not assigned property was deleted\n    delete state.assigned[prop];\n  }\n\n  if (state.copy) { delete state.copy[prop]; }\n  return true;\n} // Note: We never coerce `desc.value` into an Immer draft, because we can\'t make\n// the same guarantee in ES5 mode.\n\n\nfunction getOwnPropertyDescriptor(state, prop) {\n  var owner = source$1(state);\n  var desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n\n  if (desc) {\n    desc.writable = true;\n    desc.configurable = !Array.isArray(owner) || prop !== "length";\n  }\n\n  return desc;\n}\n\nfunction markChanged$1(state) {\n  if (!state.modified) {\n    state.modified = true;\n    state.copy = assign(shallowCopy(state.base), state.drafts);\n    state.drafts = null;\n    if (state.parent) { markChanged$1(state.parent); }\n  }\n}\n\nvar modernProxy = /*#__PURE__*/Object.freeze({\n\twillFinalize: willFinalize$1,\n\tcreateProxy: createProxy$1\n});\n\nfunction generatePatches(state, basePath, patches, inversePatches) {\n  Array.isArray(state.base) ? generateArrayPatches(state, basePath, patches, inversePatches) : generateObjectPatches(state, basePath, patches, inversePatches);\n}\n\nfunction generateArrayPatches(state, basePath, patches, inversePatches) {\n  var assign, assign$1;\n\n  var base = state.base;\n  var copy = state.copy;\n  var assigned = state.assigned; // Reduce complexity by ensuring `base` is never longer.\n\n  if (copy.length < base.length) {\n    (assign = [copy, base], base = assign[0], copy = assign[1]);\n    (assign$1 = [inversePatches, patches], patches = assign$1[0], inversePatches = assign$1[1]);\n  }\n\n  var delta = copy.length - base.length; // Find the first replaced index.\n\n  var start = 0;\n\n  while (base[start] === copy[start] && start < base.length) {\n    ++start;\n  } // Find the last replaced index. Search from the end to optimize splice patches.\n\n\n  var end = base.length;\n\n  while (end > start && base[end - 1] === copy[end + delta - 1]) {\n    --end;\n  } // Process replaced indices.\n\n\n  for (var i = start; i < end; ++i) {\n    if (assigned[i] && copy[i] !== base[i]) {\n      var path = basePath.concat([i]);\n      patches.push({\n        op: "replace",\n        path: path,\n        value: copy[i]\n      });\n      inversePatches.push({\n        op: "replace",\n        path: path,\n        value: base[i]\n      });\n    }\n  }\n\n  var replaceCount = patches.length; // Process added indices.\n\n  for (var i$1 = end + delta - 1; i$1 >= end; --i$1) {\n    var path$1 = basePath.concat([i$1]);\n    patches[replaceCount + i$1 - end] = {\n      op: "add",\n      path: path$1,\n      value: copy[i$1]\n    };\n    inversePatches.push({\n      op: "remove",\n      path: path$1\n    });\n  }\n}\n\nfunction generateObjectPatches(state, basePath, patches, inversePatches) {\n  var base = state.base;\n  var copy = state.copy;\n  each(state.assigned, function (key, assignedValue) {\n    var origValue = base[key];\n    var value = copy[key];\n    var op = !assignedValue ? "remove" : key in base ? "replace" : "add";\n    if (origValue === value && op === "replace") { return; }\n    var path = basePath.concat(key);\n    patches.push(op === "remove" ? {\n      op: op,\n      path: path\n    } : {\n      op: op,\n      path: path,\n      value: value\n    });\n    inversePatches.push(op === "add" ? {\n      op: "remove",\n      path: path\n    } : op === "remove" ? {\n      op: "add",\n      path: path,\n      value: origValue\n    } : {\n      op: "replace",\n      path: path,\n      value: origValue\n    });\n  });\n}\n\nvar applyPatches = function (draft, patches) {\n  for (var i$1 = 0, list = patches; i$1 < list.length; i$1 += 1) {\n    var patch = list[i$1];\n\n    var path = patch.path;\n    var op = patch.op;\n    var value = clone(patch.value); // used to clone patch to ensure original patch is not modified, see #411\n\n    if (!path.length) { throw new Error("Illegal state"); }\n    var base = draft;\n\n    for (var i = 0; i < path.length - 1; i++) {\n      base = base[path[i]];\n      if (!base || typeof base !== "object") { throw new Error("Cannot apply patch, path doesn\'t resolve: " + path.join("/")); } // prettier-ignore\n    }\n\n    var key = path[path.length - 1];\n\n    switch (op) {\n      case "replace":\n        // if value is an object, then it\'s assigned by reference\n        // in the following add or remove ops, the value field inside the patch will also be modifyed\n        // so we use value from the cloned patch\n        base[key] = value;\n        break;\n\n      case "add":\n        if (Array.isArray(base)) {\n          // TODO: support "foo/-" paths for appending to an array\n          base.splice(key, 0, value);\n        } else {\n          base[key] = value;\n        }\n\n        break;\n\n      case "remove":\n        if (Array.isArray(base)) {\n          base.splice(key, 1);\n        } else {\n          delete base[key];\n        }\n\n        break;\n\n      default:\n        throw new Error("Unsupported patch operation: " + op);\n    }\n  }\n\n  return draft;\n};\n\nfunction verifyMinified() {}\n\nvar configDefaults = {\n  useProxies: typeof Proxy !== "undefined" && typeof Proxy.revocable !== "undefined" && typeof Reflect !== "undefined",\n  autoFreeze: typeof process !== "undefined" ? "production" !== "production" : verifyMinified.name === "verifyMinified",\n  onAssign: null,\n  onDelete: null,\n  onCopy: null\n};\nvar Immer = function Immer(config) {\n  assign(this, configDefaults, config);\n  this.setUseProxies(this.useProxies);\n  this.produce = this.produce.bind(this);\n};\n\nImmer.prototype.produce = function produce (base, recipe, patchListener) {\n    var this$1 = this;\n\n  // curried invocation\n  if (typeof base === "function" && typeof recipe !== "function") {\n    var defaultBase = recipe;\n    recipe = base;\n    var self = this;\n    return function curriedProduce(base) {\n        var this$1 = this;\n        if ( base === void 0 ) base = defaultBase;\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n      return self.produce(base, function (draft) { return recipe.call.apply(recipe, [ this$1, draft ].concat( args )); }); // prettier-ignore\n    };\n  } // prettier-ignore\n\n\n  {\n    if (typeof recipe !== "function") {\n      throw new Error("The first or second argument to `produce` must be a function");\n    }\n\n    if (patchListener !== undefined && typeof patchListener !== "function") {\n      throw new Error("The third argument to `produce` must be a function or undefined");\n    }\n  }\n  var result; // Only plain objects, arrays, and "immerable classes" are drafted.\n\n  if (isDraftable(base)) {\n    var scope = ImmerScope.enter();\n    var proxy = this.createProxy(base);\n    var hasError = true;\n\n    try {\n      result = recipe(proxy);\n      hasError = false;\n    } finally {\n      // finally instead of catch + rethrow better preserves original stack\n      if (hasError) { scope.revoke(); }else { scope.leave(); }\n    }\n\n    if (result instanceof Promise) {\n      return result.then(function (result) {\n        scope.usePatches(patchListener);\n        return this$1.processResult(result, scope);\n      }, function (error) {\n        scope.revoke();\n        throw error;\n      });\n    }\n\n    scope.usePatches(patchListener);\n    return this.processResult(result, scope);\n  } else {\n    result = recipe(base);\n    if (result === NOTHING) { return undefined; }\n    if (result === undefined) { result = base; }\n    this.maybeFreeze(result, true);\n    return result;\n  }\n};\n\nImmer.prototype.produceWithPatches = function produceWithPatches (arg1, arg2, arg3) {\n    var this$1 = this;\n\n  if (typeof arg1 === "function") {\n    return function (state) {\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n        return this$1.produceWithPatches(state, function (draft) { return arg1.apply(void 0, [ draft ].concat( args )); });\n      };\n  } // non-curried form\n\n\n  if (arg3) { throw new Error("A patch listener cannot be passed to produceWithPatches"); }\n  var patches, inversePatches;\n  var nextState = this.produce(arg1, arg2, function (p, ip) {\n    patches = p;\n    inversePatches = ip;\n  });\n  return [nextState, patches, inversePatches];\n};\n\nImmer.prototype.createDraft = function createDraft (base) {\n  if (!isDraftable(base)) {\n    throw new Error("First argument to `createDraft` must be a plain object, an array, or an immerable object"); // prettier-ignore\n  }\n\n  var scope = ImmerScope.enter();\n  var proxy = this.createProxy(base);\n  proxy[DRAFT_STATE].isManual = true;\n  scope.leave();\n  return proxy;\n};\n\nImmer.prototype.finishDraft = function finishDraft (draft, patchListener) {\n  var state = draft && draft[DRAFT_STATE];\n\n  if (!state || !state.isManual) {\n    throw new Error("First argument to `finishDraft` must be a draft returned by `createDraft`"); // prettier-ignore\n  }\n\n  if (state.finalized) {\n    throw new Error("The given draft is already finalized"); // prettier-ignore\n  }\n\n  var scope = state.scope;\n  scope.usePatches(patchListener);\n  return this.processResult(undefined, scope);\n};\n\nImmer.prototype.setAutoFreeze = function setAutoFreeze (value) {\n  this.autoFreeze = value;\n};\n\nImmer.prototype.setUseProxies = function setUseProxies (value) {\n  this.useProxies = value;\n  assign(this, value ? modernProxy : legacyProxy);\n};\n\nImmer.prototype.applyPatches = function applyPatches$1 (base, patches) {\n  // If a patch replaces the entire state, take that replacement as base\n  // before applying patches\n  var i;\n\n  for (i = patches.length - 1; i >= 0; i--) {\n    var patch = patches[i];\n\n    if (patch.path.length === 0 && patch.op === "replace") {\n      base = patch.value;\n      break;\n    }\n  }\n\n  if (isDraft(base)) {\n    // N.B: never hits if some patch a replacement, patches are never drafts\n    return applyPatches(base, patches);\n  } // Otherwise, produce a copy of the base state.\n\n\n  return this.produce(base, function (draft) { return applyPatches(draft, patches.slice(i + 1)); });\n};\n/** @internal */\n\n\nImmer.prototype.processResult = function processResult (result, scope) {\n  var baseDraft = scope.drafts[0];\n  var isReplaced = result !== undefined && result !== baseDraft;\n  this.willFinalize(scope, result, isReplaced);\n\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified) {\n      scope.revoke();\n      throw new Error("An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft."); // prettier-ignore\n    }\n\n    if (isDraftable(result)) {\n      // Finalize the result in case it contains (or is) a subset of the draft.\n      result = this.finalize(result, null, scope);\n      this.maybeFreeze(result);\n    }\n\n    if (scope.patches) {\n      scope.patches.push({\n        op: "replace",\n        path: [],\n        value: result\n      });\n      scope.inversePatches.push({\n        op: "replace",\n        path: [],\n        value: baseDraft[DRAFT_STATE].base\n      });\n    }\n  } else {\n    // Finalize the base draft.\n    result = this.finalize(baseDraft, [], scope);\n  }\n\n  scope.revoke();\n\n  if (scope.patches) {\n    scope.patchListener(scope.patches, scope.inversePatches);\n  }\n\n  return result !== NOTHING ? result : undefined;\n};\n/**\n * @internal\n * Finalize a draft, returning either the unmodified base state or a modified\n * copy of the base state.\n */\n\n\nImmer.prototype.finalize = function finalize (draft, path, scope) {\n    var this$1 = this;\n\n  var state = draft[DRAFT_STATE];\n\n  if (!state) {\n    if (Object.isFrozen(draft)) { return draft; }\n    return this.finalizeTree(draft, null, scope);\n  } // Never finalize drafts owned by another scope.\n\n\n  if (state.scope !== scope) {\n    return draft;\n  }\n\n  if (!state.modified) {\n    this.maybeFreeze(state.base, true);\n    return state.base;\n  }\n\n  if (!state.finalized) {\n    state.finalized = true;\n    this.finalizeTree(state.draft, path, scope);\n\n    if (this.onDelete) {\n      // The `assigned` object is unreliable with ES5 drafts.\n      if (this.useProxies) {\n        var assigned = state.assigned;\n\n        for (var prop in assigned) {\n          if (!assigned[prop]) { this.onDelete(state, prop); }\n        }\n      } else {\n        var base = state.base;\n          var copy = state.copy;\n        each(base, function (prop) {\n          if (!has(copy, prop)) { this$1.onDelete(state, prop); }\n        });\n      }\n    }\n\n    if (this.onCopy) {\n      this.onCopy(state);\n    } // At this point, all descendants of `state.copy` have been finalized,\n    // so we can be sure that `scope.canAutoFreeze` is accurate.\n\n\n    if (this.autoFreeze && scope.canAutoFreeze) {\n      Object.freeze(state.copy);\n    }\n\n    if (path && scope.patches) {\n      generatePatches(state, path, scope.patches, scope.inversePatches);\n    }\n  }\n\n  return state.copy;\n};\n/**\n * @internal\n * Finalize all drafts in the given state tree.\n */\n\n\nImmer.prototype.finalizeTree = function finalizeTree (root, rootPath, scope) {\n    var this$1 = this;\n\n  var state = root[DRAFT_STATE];\n\n  if (state) {\n    if (!this.useProxies) {\n      // Create the final copy, with added keys and without deleted keys.\n      state.copy = shallowCopy(state.draft, true);\n    }\n\n    root = state.copy;\n  }\n\n  var needPatches = !!rootPath && !!scope.patches;\n\n  var finalizeProperty = function (prop, value, parent) {\n    if (value === parent) {\n      throw Error("Immer forbids circular references");\n    } // In the `finalizeTree` method, only the `root` object may be a draft.\n\n\n    var isDraftProp = !!state && parent === root;\n\n    if (isDraft(value)) {\n      var path = isDraftProp && needPatches && !state.assigned[prop] ? rootPath.concat(prop) : null; // Drafts owned by `scope` are finalized here.\n\n      value = this$1.finalize(value, path, scope); // Drafts from another scope must prevent auto-freezing.\n\n      if (isDraft(value)) {\n        scope.canAutoFreeze = false;\n      } // Preserve non-enumerable properties.\n\n\n      if (Array.isArray(parent) || isEnumerable(parent, prop)) {\n        parent[prop] = value;\n      } else {\n        Object.defineProperty(parent, prop, {\n          value: value\n        });\n      } // Unchanged drafts are never passed to the `onAssign` hook.\n\n\n      if (isDraftProp && value === state.base[prop]) { return; }\n    } // Unchanged draft properties are ignored.\n    else if (isDraftProp && is(value, state.base[prop])) {\n        return;\n      } // Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n      else if (isDraftable(value) && !Object.isFrozen(value)) {\n          each(value, finalizeProperty);\n          this$1.maybeFreeze(value);\n        }\n\n    if (isDraftProp && this$1.onAssign) {\n      this$1.onAssign(state, prop, value);\n    }\n  };\n\n  each(root, finalizeProperty);\n  return root;\n};\n\nImmer.prototype.maybeFreeze = function maybeFreeze (value, deep) {\n    if ( deep === void 0 ) deep = false;\n\n  if (this.autoFreeze && !isDraft(value)) {\n    if (deep) { deepFreeze(value); }else { Object.freeze(value); }\n  }\n};\n\nvar immer = new Immer();\n/**\n * The `produce` function takes a value and a "recipe function" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a "curried producer" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\n\nvar produce = immer.produce;\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\n\nvar produceWithPatches = immer.produceWithPatches.bind(immer);\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\n\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\n\nvar setUseProxies = immer.setUseProxies.bind(immer);\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\n\nvar applyPatches$1 = immer.applyPatches.bind(immer);\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\n\nvar createDraft = immer.createDraft.bind(immer);\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\n\nvar finishDraft = immer.finishDraft.bind(immer);\n\n/* harmony default export */ __webpack_exports__["a"] = (produce);\n\n//# sourceMappingURL=immer.module.js.map\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(48)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///50\n')},,,,,,,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./node_modules/immer/dist/immer.module.js\nvar immer_module = __webpack_require__(50);\n\n// CONCATENATED MODULE: ./node_modules/@reduxjs/toolkit/node_modules/reselect/es/index.js\nfunction defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nfunction createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nvar createSelector = createSelectorCreator(defaultMemoize);\n\nfunction createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}\n// EXTERNAL MODULE: ./node_modules/redux-devtools-extension/index.js\nvar redux_devtools_extension = __webpack_require__(75);\n\n// EXTERNAL MODULE: ./node_modules/redux-thunk/es/index.js\nvar es = __webpack_require__(42);\n\n// EXTERNAL MODULE: ./node_modules/redux-immutable-state-invariant/dist/index.js\nvar dist = __webpack_require__(89);\n\n// CONCATENATED MODULE: ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\n/* unused harmony export configureStore */\n/* unused harmony export createAction */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createReducer; });\n/* unused harmony export createSerializableStateInvariantMiddleware */\n/* unused harmony export createSlice */\n/* unused harmony export findNonSerializableValue */\n/* unused harmony export getDefaultMiddleware */\n/* unused harmony export getType */\n/* unused harmony export isPlain */\n/* unused concated harmony import __DO_NOT_USE__ActionTypes */\n/* unused concated harmony import applyMiddleware */\n/* unused concated harmony import bindActionCreators */\n/* unused concated harmony import combineReducers */\n/* unused concated harmony import compose */\n/* unused concated harmony import createStore */\n/* unused concated harmony import createNextState */\n/* unused concated harmony import createSelector */\n\n\n\n\n\n\n\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\r\n * Returns true if the passed value is \"plain\" object, i.e. an object whose\r\n * protoype is the root `Object.prototype`. This includes objects created\r\n * using object literals, but not for instance for class instances.\r\n *\r\n * @param {any} value The value to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\nfunction isPlainObject(value) {\n  if (typeof value !== 'object' || value === null) return false;\n  var proto = value;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(value) === proto;\n}\n\n/**\r\n * Returns true if the passed value is \"plain\", i.e. a value that is either\r\n * directly JSON-serializable (boolean, number, string, array, plain object)\r\n * or `undefined`.\r\n *\r\n * @param val The value to check.\r\n *\r\n * @public\r\n */\n\nfunction isPlain(val) {\n  return typeof val === 'undefined' || val === null || typeof val === 'string' || typeof val === 'boolean' || typeof val === 'number' || Array.isArray(val) || isPlainObject(val);\n}\n/**\r\n * @public\r\n */\n\nfunction findNonSerializableValue(value, path, isSerializable, getEntries) {\n  if (path === void 0) {\n    path = [];\n  }\n\n  if (isSerializable === void 0) {\n    isSerializable = isPlain;\n  }\n\n  var foundNestedSerializable;\n\n  if (!isSerializable(value)) {\n    return {\n      keyPath: path.join('.') || '<root>',\n      value: value\n    };\n  }\n\n  if (typeof value !== 'object' || value === null) {\n    return false;\n  }\n\n  var entries = getEntries != null ? getEntries(value) : Object.entries(value);\n\n  for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var _ref2 = _ref,\n        property = _ref2[0],\n        nestedValue = _ref2[1];\n    var nestedPath = path.concat(property);\n\n    if (!isSerializable(nestedValue)) {\n      return {\n        keyPath: nestedPath.join('.'),\n        value: nestedValue\n      };\n    }\n\n    if (typeof nestedValue === 'object') {\n      foundNestedSerializable = findNonSerializableValue(nestedValue, nestedPath, isSerializable, getEntries);\n\n      if (foundNestedSerializable) {\n        return foundNestedSerializable;\n      }\n    }\n  }\n\n  return false;\n}\n/**\r\n * Creates a middleware that, after every state change, checks if the new\r\n * state is serializable. If a non-serializable value is found within the\r\n * state, an error is printed to the console.\r\n *\r\n * @param options Middleware options.\r\n *\r\n * @public\r\n */\n\nfunction createSerializableStateInvariantMiddleware(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$isSerializab = _options.isSerializable,\n      isSerializable = _options$isSerializab === void 0 ? isPlain : _options$isSerializab,\n      getEntries = _options.getEntries,\n      _options$ignoredActio = _options.ignoredActions,\n      ignoredActions = _options$ignoredActio === void 0 ? [] : _options$ignoredActio;\n  return function (storeAPI) {\n    return function (next) {\n      return function (action) {\n        if (ignoredActions.length && ignoredActions.indexOf(action.type) !== -1) {\n          return next(action);\n        }\n\n        var foundActionNonSerializableValue = findNonSerializableValue(action, [], isSerializable, getEntries);\n\n        if (foundActionNonSerializableValue) {\n          var keyPath = foundActionNonSerializableValue.keyPath,\n              value = foundActionNonSerializableValue.value;\n          console.error(\"A non-serializable value was detected in an action, in the path: `\" + keyPath + \"`. Value:\", value, '\\nTake a look at the logic that dispatched this action: ', action, '\\n(See https://redux.js.org/faq/actions#why-should-type-be-a-string-or-at-least-serializable-why-should-my-action-types-be-constants)');\n        }\n\n        var result = next(action);\n        var state = storeAPI.getState();\n        var foundStateNonSerializableValue = findNonSerializableValue(state, [], isSerializable, getEntries);\n\n        if (foundStateNonSerializableValue) {\n          var _keyPath = foundStateNonSerializableValue.keyPath,\n              _value = foundStateNonSerializableValue.value;\n          console.error(\"A non-serializable value was detected in the state, in the path: `\" + _keyPath + \"`. Value:\", _value, \"\\nTake a look at the reducer(s) handling this action type: \" + action.type + \".\\n(See https://redux.js.org/faq/organizing-state#can-i-put-functions-promises-or-other-non-serializable-items-in-my-store-state)\");\n        }\n\n        return result;\n      };\n    };\n  };\n}\n\nfunction isBoolean(x) {\n  return typeof x === 'boolean';\n}\n/**\r\n * Returns any array containing the default middleware installed by\r\n * `configureStore()`. Useful if you want to configure your store with a custom\r\n * `middleware` array but still keep the default set.\r\n *\r\n * @return The default middleware used by `configureStore()`.\r\n *\r\n * @public\r\n */\n\n\nfunction getDefaultMiddleware(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$thunk = _options.thunk,\n      thunk = _options$thunk === void 0 ? true : _options$thunk,\n      _options$immutableChe = _options.immutableCheck,\n      immutableCheck = _options$immutableChe === void 0 ? true : _options$immutableChe,\n      _options$serializable = _options.serializableCheck,\n      serializableCheck = _options$serializable === void 0 ? true : _options$serializable;\n  var middlewareArray = [];\n\n  if (thunk) {\n    if (isBoolean(thunk)) {\n      middlewareArray.push(es[\"a\" /* default */]);\n    } else {\n      middlewareArray.push(es[\"a\" /* default */].withExtraArgument(thunk.extraArgument));\n    }\n  }\n\n  if (false) { var serializableOptions, immutableOptions; }\n\n  return middlewareArray;\n}\n\nvar IS_PRODUCTION = \"production\" === 'production';\n/**\r\n * A friendly abstraction over the standard Redux `createStore()` function.\r\n *\r\n * @param config The store configuration.\r\n * @returns A configured Redux store.\r\n *\r\n * @public\r\n */\n\nfunction configureStore(options) {\n  var _ref = options || {},\n      _ref$reducer = _ref.reducer,\n      reducer = _ref$reducer === void 0 ? undefined : _ref$reducer,\n      _ref$middleware = _ref.middleware,\n      middleware = _ref$middleware === void 0 ? getDefaultMiddleware() : _ref$middleware,\n      _ref$devTools = _ref.devTools,\n      devTools = _ref$devTools === void 0 ? true : _ref$devTools,\n      _ref$preloadedState = _ref.preloadedState,\n      preloadedState = _ref$preloadedState === void 0 ? undefined : _ref$preloadedState,\n      _ref$enhancers = _ref.enhancers,\n      enhancers = _ref$enhancers === void 0 ? undefined : _ref$enhancers;\n\n  var rootReducer;\n\n  if (typeof reducer === 'function') {\n    rootReducer = reducer;\n  } else if (isPlainObject(reducer)) {\n    rootReducer = Object(redux[\"combineReducers\"])(reducer);\n  } else {\n    throw new Error('\"reducer\" is a required argument, and must be a function or an object of functions that can be passed to combineReducers');\n  }\n\n  var middlewareEnhancer = redux[\"applyMiddleware\"].apply(void 0, middleware);\n  var finalCompose = redux[\"compose\"];\n\n  if (devTools) {\n    finalCompose = Object(redux_devtools_extension[\"composeWithDevTools\"])(_extends({\n      // Enable capture of stack traces for dispatched Redux actions\n      trace: !IS_PRODUCTION\n    }, typeof devTools === 'object' && devTools));\n  }\n\n  var storeEnhancers = [middlewareEnhancer];\n\n  if (Array.isArray(enhancers)) {\n    storeEnhancers = [middlewareEnhancer].concat(enhancers);\n  } else if (typeof enhancers === 'function') {\n    storeEnhancers = enhancers(storeEnhancers);\n  }\n\n  var composedEnhancer = finalCompose.apply(void 0, storeEnhancers);\n  return Object(redux[\"createStore\"])(rootReducer, preloadedState, composedEnhancer);\n}\n\nfunction createAction(type, prepareAction) {\n  function actionCreator() {\n    if (prepareAction) {\n      var prepared = prepareAction.apply(void 0, arguments);\n\n      if (!prepared) {\n        throw new Error('prepareAction did not return an object');\n      }\n\n      return _extends({\n        type: type,\n        payload: prepared.payload\n      }, 'meta' in prepared && {\n        meta: prepared.meta\n      }, {}, 'error' in prepared && {\n        error: prepared.error\n      });\n    }\n\n    return {\n      type: type,\n      payload: arguments.length <= 0 ? undefined : arguments[0]\n    };\n  }\n\n  actionCreator.toString = function () {\n    return \"\" + type;\n  };\n\n  actionCreator.type = type;\n\n  actionCreator.match = function (action) {\n    return action.type === type;\n  };\n\n  return actionCreator;\n}\n/**\r\n * Returns the action type of the actions created by the passed\r\n * `createAction()`-generated action creator (arbitrary action creators\r\n * are not supported).\r\n *\r\n * @param action The action creator whose action type to get.\r\n * @returns The action type used by the action creator.\r\n *\r\n * @public\r\n */\n\nfunction getType(actionCreator) {\n  return \"\" + actionCreator;\n}\n\nfunction executeReducerBuilderCallback(builderCallback) {\n  var actionsMap = {};\n  var builder = {\n    addCase: function addCase(typeOrActionCreator, reducer) {\n      var type = typeof typeOrActionCreator === 'string' ? typeOrActionCreator : typeOrActionCreator.type;\n\n      if (type in actionsMap) {\n        throw new Error('addCase cannot be called with two reducers for the same action type');\n      }\n\n      actionsMap[type] = reducer;\n      return builder;\n    }\n  };\n  builderCallback(builder);\n  return actionsMap;\n}\n\nfunction createReducer(initialState, mapOrBuilderCallback) {\n  var actionsMap = typeof mapOrBuilderCallback === 'function' ? executeReducerBuilderCallback(mapOrBuilderCallback) : mapOrBuilderCallback;\n  return function (state, action) {\n    if (state === void 0) {\n      state = initialState;\n    }\n\n    // @ts-ignore createNextState() produces an Immutable<Draft<S>> rather\n    // than an Immutable<S>, and TypeScript cannot find out how to reconcile\n    // these two types.\n    return Object(immer_module[\"a\" /* default */])(state, function (draft) {\n      var caseReducer = actionsMap[action.type];\n      return caseReducer ? caseReducer(draft, action) : undefined;\n    });\n  };\n}\n\nfunction getType$1(slice, actionKey) {\n  return slice + \"/\" + actionKey;\n}\n/**\r\n * A function that accepts an initial state, an object full of reducer\r\n * functions, and a \"slice name\", and automatically generates\r\n * action creators and action types that correspond to the\r\n * reducers and state.\r\n *\r\n * The `reducer` argument is passed to `createReducer()`.\r\n *\r\n * @public\r\n */\n\n\nfunction createSlice(options) {\n  var name = options.name,\n      initialState = options.initialState;\n\n  if (!name) {\n    throw new Error('`name` is a required option for createSlice');\n  }\n\n  var reducers = options.reducers || {};\n  var extraReducers = typeof options.extraReducers === 'undefined' ? {} : typeof options.extraReducers === 'function' ? executeReducerBuilderCallback(options.extraReducers) : options.extraReducers;\n  var reducerNames = Object.keys(reducers);\n  var sliceCaseReducersByName = {};\n  var sliceCaseReducersByType = {};\n  var actionCreators = {};\n  reducerNames.forEach(function (reducerName) {\n    var maybeReducerWithPrepare = reducers[reducerName];\n    var type = getType$1(name, reducerName);\n    var caseReducer;\n    var prepareCallback;\n\n    if ('reducer' in maybeReducerWithPrepare) {\n      caseReducer = maybeReducerWithPrepare.reducer;\n      prepareCallback = maybeReducerWithPrepare.prepare;\n    } else {\n      caseReducer = maybeReducerWithPrepare;\n    }\n\n    sliceCaseReducersByName[reducerName] = caseReducer;\n    sliceCaseReducersByType[type] = caseReducer;\n    actionCreators[reducerName] = prepareCallback ? createAction(type, prepareCallback) : createAction(type);\n  });\n\n  var finalCaseReducers = _extends({}, extraReducers, {}, sliceCaseReducersByType);\n\n  var reducer = createReducer(initialState, finalCaseReducers);\n  return {\n    name: name,\n    reducer: reducer,\n    actions: actionCreators,\n    caseReducers: sliceCaseReducersByName\n  };\n}\n\n\n//# sourceMappingURL=redux-toolkit.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///62\n")},,function(module,exports){eval('module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, "loaded", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "id", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, "exports", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanM/ODJiMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKG9yaWdpbmFsTW9kdWxlKSB7XG5cdGlmICghb3JpZ2luYWxNb2R1bGUud2VicGFja1BvbHlmaWxsKSB7XG5cdFx0dmFyIG1vZHVsZSA9IE9iamVjdC5jcmVhdGUob3JpZ2luYWxNb2R1bGUpO1xuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxuXHRcdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImV4cG9ydHNcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZVxuXHRcdH0pO1xuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xuXHR9XG5cdHJldHVybiBtb2R1bGU7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///64\n')},,,,,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _bulk_action_sub_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(32);\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * BulkActionComponent : Displays the list of bulk actions \n * based on the category\n *\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n/** Bulk action apply button */\n\nvar BulkActionApplyButton = function BulkActionApplyButton(_ref) {\n  var bulkActionSubmitHandler = _ref.bulkActionSubmitHandler;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n    className: "wl-col"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("button", {\n    className: "button action",\n    onClick: function onClick() {\n      bulkActionSubmitHandler();\n    }\n  }, "Apply"));\n};\n/** Bulk action options wrapper */\n\n\nvar BulkActionOptionsWrapper = function BulkActionOptionsWrapper(_ref2) {\n  var choosenCategory = _ref2.choosenCategory,\n      bulkActionOptionChangedHandler = _ref2.bulkActionOptionChangedHandler;\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n    className: "wl-col"\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("select", {\n    className: "form-control",\n    onChange: function onChange(event) {\n      bulkActionOptionChangedHandler(event);\n    }\n  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("option", {\n    value: "-1"\n  }, "Bulk Actions"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_bulk_action_sub_components__WEBPACK_IMPORTED_MODULE_1__[/* BulkActionOptions */ "a"], {\n    choosenCategory: choosenCategory\n  })));\n};\n\nvar BulkActionComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BulkActionComponent, _React$Component);\n\n  function BulkActionComponent() {\n    _classCallCheck(this, BulkActionComponent);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BulkActionComponent).apply(this, arguments));\n  }\n\n  _createClass(BulkActionComponent, [{\n    key: "render",\n    value: function render() {\n      return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(BulkActionOptionsWrapper, {\n        bulkActionOptionChangedHandler: this.props.bulkActionOptionChangedHandler,\n        choosenCategory: this.props.choosenCategory\n      }), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(BulkActionApplyButton, {\n        bulkActionSubmitHandler: this.props.bulkActionSubmitHandler\n      }));\n    }\n  }]);\n\n  return BulkActionComponent;\n}(react__WEBPACK_IMPORTED_MODULE_0___default.a.Component);\n\n/* harmony default export */ __webpack_exports__["a"] = (BulkActionComponent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwcGluZ3MvY29tcG9uZW50cy9idWxrLWFjdGlvbi1jb21wb25lbnQuanM/NmIyNCJdLCJuYW1lcyI6WyJCdWxrQWN0aW9uQXBwbHlCdXR0b24iLCJidWxrQWN0aW9uU3VibWl0SGFuZGxlciIsIkJ1bGtBY3Rpb25PcHRpb25zV3JhcHBlciIsImNob29zZW5DYXRlZ29yeSIsImJ1bGtBY3Rpb25PcHRpb25DaGFuZ2VkSGFuZGxlciIsImV2ZW50IiwiQnVsa0FjdGlvbkNvbXBvbmVudCIsInByb3BzIiwiUmVhY3QiLCJDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7OztBQVFBOzs7QUFHQTtBQUNBO0FBRUE7O0FBQ0EsSUFBTUEscUJBQXFCLEdBQUcsU0FBeEJBLHFCQUF3QixPQUFpQztBQUFBLE1BQTlCQyx1QkFBOEIsUUFBOUJBLHVCQUE4QjtBQUMzRCxTQUNJO0FBQUssYUFBUyxFQUFDO0FBQWYsS0FDSTtBQUNJLGFBQVMsRUFBQyxlQURkO0FBRUksV0FBTyxFQUFHLG1CQUFNO0FBQUVBLDZCQUF1QjtBQUFJO0FBRmpELGFBREosQ0FESjtBQVNILENBVkQ7QUFZQTs7O0FBQ0EsSUFBTUMsd0JBQXdCLEdBQUcsU0FBM0JBLHdCQUEyQixRQUEyRDtBQUFBLE1BQXZEQyxlQUF1RCxTQUF2REEsZUFBdUQ7QUFBQSxNQUF0Q0MsOEJBQXNDLFNBQXRDQSw4QkFBc0M7QUFDeEYsU0FDSTtBQUFLLGFBQVMsRUFBQztBQUFmLEtBQ0k7QUFDSSxhQUFTLEVBQUMsY0FEZDtBQUVJLFlBQVEsRUFBRyxrQkFBRUMsS0FBRixFQUFhO0FBQUVELG9DQUE4QixDQUFFQyxLQUFGLENBQTlCO0FBQXlDO0FBRnZFLEtBSUk7QUFBUSxTQUFLLEVBQUM7QUFBZCxvQkFKSixFQUtJLDJEQUFDLHFGQUFEO0FBQ0ksbUJBQWUsRUFBRUY7QUFEckIsSUFMSixDQURKLENBREo7QUFhSCxDQWREOztJQWdCTUcsbUI7Ozs7Ozs7Ozs7Ozs7NkJBQ087QUFDTCxhQUNJLDJEQUFDLDRDQUFELENBQU8sUUFBUCxRQUNJLDJEQUFDLHdCQUFEO0FBQ0ksc0NBQThCLEVBQUssS0FBS0MsS0FBTCxDQUFXSCw4QkFEbEQ7QUFFSSx1QkFBZSxFQUFvQixLQUFLRyxLQUFMLENBQVdKO0FBRmxELFFBREosRUFLSSwyREFBQyxxQkFBRDtBQUNJLCtCQUF1QixFQUFLLEtBQUtJLEtBQUwsQ0FBV047QUFEM0MsUUFMSixDQURKO0FBV0g7Ozs7RUFiNkJPLDRDQUFLLENBQUNDLFM7O0FBZ0J6QkgsNEVBQWYiLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEJ1bGtBY3Rpb25Db21wb25lbnQgOiBEaXNwbGF5cyB0aGUgbGlzdCBvZiBidWxrIGFjdGlvbnMgXG4gKiBiYXNlZCBvbiB0aGUgY2F0ZWdvcnlcbiAqXG4gKiBAYXV0aG9yIE5hdmVlbiBNdXRodXNhbXkgPG5hdmVlbkB3b3JkbGlmdC5pbz5cbiAqIEBzaW5jZSAzLjI0LjBcbiAqL1xuXG4vKipcbiAqIEV4dGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IEJ1bGtBY3Rpb25PcHRpb25zIH0gZnJvbSBcIi4vYnVsay1hY3Rpb24tc3ViLWNvbXBvbmVudHNcIlxuXG4vKiogQnVsayBhY3Rpb24gYXBwbHkgYnV0dG9uICovXG5jb25zdCBCdWxrQWN0aW9uQXBwbHlCdXR0b24gPSAoeyBidWxrQWN0aW9uU3VibWl0SGFuZGxlciB9KSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3bC1jb2xcIj5cbiAgICAgICAgICAgIDxidXR0b24gXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYnV0dG9uIGFjdGlvblwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17ICgpID0+IHsgYnVsa0FjdGlvblN1Ym1pdEhhbmRsZXIoKSB9fT5cbiAgICAgICAgICAgICAgICBBcHBseVxuICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuLyoqIEJ1bGsgYWN0aW9uIG9wdGlvbnMgd3JhcHBlciAqL1xuY29uc3QgQnVsa0FjdGlvbk9wdGlvbnNXcmFwcGVyID0gKCB7IGNob29zZW5DYXRlZ29yeSwgYnVsa0FjdGlvbk9wdGlvbkNoYW5nZWRIYW5kbGVyIH0gKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3bC1jb2xcIj5cbiAgICAgICAgICAgIDxzZWxlY3QgXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZm9ybS1jb250cm9sXCIgXG4gICAgICAgICAgICAgICAgb25DaGFuZ2U9eyAoIGV2ZW50ICkgPT4geyBidWxrQWN0aW9uT3B0aW9uQ2hhbmdlZEhhbmRsZXIoIGV2ZW50ICkgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPVwiLTFcIj5CdWxrIEFjdGlvbnM8L29wdGlvbj5cbiAgICAgICAgICAgICAgICA8QnVsa0FjdGlvbk9wdGlvbnMgXG4gICAgICAgICAgICAgICAgICAgIGNob29zZW5DYXRlZ29yeT17Y2hvb3NlbkNhdGVnb3J5fSBcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9zZWxlY3Q+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuY2xhc3MgQnVsa0FjdGlvbkNvbXBvbmVudCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgIDxCdWxrQWN0aW9uT3B0aW9uc1dyYXBwZXJcbiAgICAgICAgICAgICAgICAgICAgYnVsa0FjdGlvbk9wdGlvbkNoYW5nZWRIYW5kbGVyID0geyB0aGlzLnByb3BzLmJ1bGtBY3Rpb25PcHRpb25DaGFuZ2VkSGFuZGxlciB9XG4gICAgICAgICAgICAgICAgICAgIGNob29zZW5DYXRlZ29yeSAgICAgICAgICAgICAgICA9IHsgdGhpcy5wcm9wcy5jaG9vc2VuQ2F0ZWdvcnkgfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPEJ1bGtBY3Rpb25BcHBseUJ1dHRvbiBcbiAgICAgICAgICAgICAgICAgICAgYnVsa0FjdGlvblN1Ym1pdEhhbmRsZXIgPSB7IHRoaXMucHJvcHMuYnVsa0FjdGlvblN1Ym1pdEhhbmRsZXIgfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICAgICApXG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBCdWxrQWN0aW9uQ29tcG9uZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///74\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar compose = __webpack_require__(12).compose;\n\nexports.__esModule = true;\nexports.composeWithDevTools = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ :\n    function() {\n      if (arguments.length === 0) return undefined;\n      if (typeof arguments[0] === 'object') return compose;\n      return compose.apply(null, arguments);\n    }\n);\n\nexports.devToolsEnhancer = (\n  typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION__ :\n    function() { return function(noop) { return noop; } }\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtZGV2dG9vbHMtZXh0ZW5zaW9uL2luZGV4LmpzP2U0NzUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsY0FBYyxtQkFBTyxDQUFDLEVBQU87O0FBRTdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix3QkFBd0IsYUFBYSxFQUFFO0FBQ3ZEIiwiZmlsZSI6Ijc1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBjb21wb3NlID0gcmVxdWlyZSgncmVkdXgnKS5jb21wb3NlO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuZXhwb3J0cy5jb21wb3NlV2l0aERldlRvb2xzID0gKFxuICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fID9cbiAgICB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fIDpcbiAgICBmdW5jdGlvbigpIHtcbiAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAwKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT09ICdvYmplY3QnKSByZXR1cm4gY29tcG9zZTtcbiAgICAgIHJldHVybiBjb21wb3NlLmFwcGx5KG51bGwsIGFyZ3VtZW50cyk7XG4gICAgfVxuKTtcblxuZXhwb3J0cy5kZXZUb29sc0VuaGFuY2VyID0gKFxuICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fXyA/XG4gICAgd2luZG93Ll9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX18gOlxuICAgIGZ1bmN0aW9uKCkgeyByZXR1cm4gZnVuY3Rpb24obm9vcCkgeyByZXR1cm4gbm9vcDsgfSB9XG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///75\n")},,,,,,,,,,,,,function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbWFwcGluZ3MvbWFwcGluZ3MuY3NzPzZhZDgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiODguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///88\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = immutableStateInvariantMiddleware;\n\nvar _invariant = __webpack_require__(14);\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _jsonStringifySafe = __webpack_require__(90);\n\nvar _jsonStringifySafe2 = _interopRequireDefault(_jsonStringifySafe);\n\nvar _isImmutable = __webpack_require__(91);\n\nvar _isImmutable2 = _interopRequireDefault(_isImmutable);\n\nvar _trackForMutations = __webpack_require__(92);\n\nvar _trackForMutations2 = _interopRequireDefault(_trackForMutations);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar BETWEEN_DISPATCHES_MESSAGE = ['A state mutation was detected between dispatches, in the path `%s`.', 'This may cause incorrect behavior.', '(http://redux.js.org/docs/Troubleshooting.html#never-mutate-reducer-arguments)'].join(' ');\n\nvar INSIDE_DISPATCH_MESSAGE = ['A state mutation was detected inside a dispatch, in the path: `%s`.', 'Take a look at the reducer(s) handling the action %s.', '(http://redux.js.org/docs/Troubleshooting.html#never-mutate-reducer-arguments)'].join(' ');\n\nfunction immutableStateInvariantMiddleware() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$isImmutable = options.isImmutable,\n      isImmutable = _options$isImmutable === undefined ? _isImmutable2.default : _options$isImmutable,\n      ignore = options.ignore;\n\n  var track = _trackForMutations2.default.bind(null, isImmutable, ignore);\n\n  return function (_ref) {\n    var getState = _ref.getState;\n\n    var state = getState();\n    var tracker = track(state);\n\n    var result = void 0;\n    return function (next) {\n      return function (action) {\n        state = getState();\n\n        result = tracker.detectMutations();\n        // Track before potentially not meeting the invariant\n        tracker = track(state);\n\n        (0, _invariant2.default)(!result.wasMutated, BETWEEN_DISPATCHES_MESSAGE, (result.path || []).join('.'));\n\n        var dispatchedAction = next(action);\n        state = getState();\n\n        result = tracker.detectMutations();\n        // Track before potentially not meeting the invariant\n        tracker = track(state);\n\n        result.wasMutated && (0, _invariant2.default)(!result.wasMutated, INSIDE_DISPATCH_MESSAGE, (result.path || []).join('.'), (0, _jsonStringifySafe2.default)(action));\n\n        return dispatchedAction;\n      };\n    };\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtaW1tdXRhYmxlLXN0YXRlLWludmFyaWFudC9kaXN0L2luZGV4LmpzPzA1MGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDs7QUFFQSxpQkFBaUIsbUJBQU8sQ0FBQyxFQUFXOztBQUVwQzs7QUFFQSx5QkFBeUIsbUJBQU8sQ0FBQyxFQUFxQjs7QUFFdEQ7O0FBRUEsbUJBQW1CLG1CQUFPLENBQUMsRUFBZTs7QUFFMUM7O0FBRUEseUJBQXlCLG1CQUFPLENBQUMsRUFBcUI7O0FBRXREOztBQUVBLHNDQUFzQyx1Q0FBdUMsZ0JBQWdCOztBQUU3Rjs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiI4OS5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGltbXV0YWJsZVN0YXRlSW52YXJpYW50TWlkZGxld2FyZTtcblxudmFyIF9pbnZhcmlhbnQgPSByZXF1aXJlKCdpbnZhcmlhbnQnKTtcblxudmFyIF9pbnZhcmlhbnQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaW52YXJpYW50KTtcblxudmFyIF9qc29uU3RyaW5naWZ5U2FmZSA9IHJlcXVpcmUoJ2pzb24tc3RyaW5naWZ5LXNhZmUnKTtcblxudmFyIF9qc29uU3RyaW5naWZ5U2FmZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9qc29uU3RyaW5naWZ5U2FmZSk7XG5cbnZhciBfaXNJbW11dGFibGUgPSByZXF1aXJlKCcuL2lzSW1tdXRhYmxlJyk7XG5cbnZhciBfaXNJbW11dGFibGUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfaXNJbW11dGFibGUpO1xuXG52YXIgX3RyYWNrRm9yTXV0YXRpb25zID0gcmVxdWlyZSgnLi90cmFja0Zvck11dGF0aW9ucycpO1xuXG52YXIgX3RyYWNrRm9yTXV0YXRpb25zMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3RyYWNrRm9yTXV0YXRpb25zKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIEJFVFdFRU5fRElTUEFUQ0hFU19NRVNTQUdFID0gWydBIHN0YXRlIG11dGF0aW9uIHdhcyBkZXRlY3RlZCBiZXR3ZWVuIGRpc3BhdGNoZXMsIGluIHRoZSBwYXRoIGAlc2AuJywgJ1RoaXMgbWF5IGNhdXNlIGluY29ycmVjdCBiZWhhdmlvci4nLCAnKGh0dHA6Ly9yZWR1eC5qcy5vcmcvZG9jcy9Ucm91Ymxlc2hvb3RpbmcuaHRtbCNuZXZlci1tdXRhdGUtcmVkdWNlci1hcmd1bWVudHMpJ10uam9pbignICcpO1xuXG52YXIgSU5TSURFX0RJU1BBVENIX01FU1NBR0UgPSBbJ0Egc3RhdGUgbXV0YXRpb24gd2FzIGRldGVjdGVkIGluc2lkZSBhIGRpc3BhdGNoLCBpbiB0aGUgcGF0aDogYCVzYC4nLCAnVGFrZSBhIGxvb2sgYXQgdGhlIHJlZHVjZXIocykgaGFuZGxpbmcgdGhlIGFjdGlvbiAlcy4nLCAnKGh0dHA6Ly9yZWR1eC5qcy5vcmcvZG9jcy9Ucm91Ymxlc2hvb3RpbmcuaHRtbCNuZXZlci1tdXRhdGUtcmVkdWNlci1hcmd1bWVudHMpJ10uam9pbignICcpO1xuXG5mdW5jdGlvbiBpbW11dGFibGVTdGF0ZUludmFyaWFudE1pZGRsZXdhcmUoKSB7XG4gIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgdmFyIF9vcHRpb25zJGlzSW1tdXRhYmxlID0gb3B0aW9ucy5pc0ltbXV0YWJsZSxcbiAgICAgIGlzSW1tdXRhYmxlID0gX29wdGlvbnMkaXNJbW11dGFibGUgPT09IHVuZGVmaW5lZCA/IF9pc0ltbXV0YWJsZTIuZGVmYXVsdCA6IF9vcHRpb25zJGlzSW1tdXRhYmxlLFxuICAgICAgaWdub3JlID0gb3B0aW9ucy5pZ25vcmU7XG5cbiAgdmFyIHRyYWNrID0gX3RyYWNrRm9yTXV0YXRpb25zMi5kZWZhdWx0LmJpbmQobnVsbCwgaXNJbW11dGFibGUsIGlnbm9yZSk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIGdldFN0YXRlID0gX3JlZi5nZXRTdGF0ZTtcblxuICAgIHZhciBzdGF0ZSA9IGdldFN0YXRlKCk7XG4gICAgdmFyIHRyYWNrZXIgPSB0cmFjayhzdGF0ZSk7XG5cbiAgICB2YXIgcmVzdWx0ID0gdm9pZCAwO1xuICAgIHJldHVybiBmdW5jdGlvbiAobmV4dCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgc3RhdGUgPSBnZXRTdGF0ZSgpO1xuXG4gICAgICAgIHJlc3VsdCA9IHRyYWNrZXIuZGV0ZWN0TXV0YXRpb25zKCk7XG4gICAgICAgIC8vIFRyYWNrIGJlZm9yZSBwb3RlbnRpYWxseSBub3QgbWVldGluZyB0aGUgaW52YXJpYW50XG4gICAgICAgIHRyYWNrZXIgPSB0cmFjayhzdGF0ZSk7XG5cbiAgICAgICAgKDAsIF9pbnZhcmlhbnQyLmRlZmF1bHQpKCFyZXN1bHQud2FzTXV0YXRlZCwgQkVUV0VFTl9ESVNQQVRDSEVTX01FU1NBR0UsIChyZXN1bHQucGF0aCB8fCBbXSkuam9pbignLicpKTtcblxuICAgICAgICB2YXIgZGlzcGF0Y2hlZEFjdGlvbiA9IG5leHQoYWN0aW9uKTtcbiAgICAgICAgc3RhdGUgPSBnZXRTdGF0ZSgpO1xuXG4gICAgICAgIHJlc3VsdCA9IHRyYWNrZXIuZGV0ZWN0TXV0YXRpb25zKCk7XG4gICAgICAgIC8vIFRyYWNrIGJlZm9yZSBwb3RlbnRpYWxseSBub3QgbWVldGluZyB0aGUgaW52YXJpYW50XG4gICAgICAgIHRyYWNrZXIgPSB0cmFjayhzdGF0ZSk7XG5cbiAgICAgICAgcmVzdWx0Lndhc011dGF0ZWQgJiYgKDAsIF9pbnZhcmlhbnQyLmRlZmF1bHQpKCFyZXN1bHQud2FzTXV0YXRlZCwgSU5TSURFX0RJU1BBVENIX01FU1NBR0UsIChyZXN1bHQucGF0aCB8fCBbXSkuam9pbignLicpLCAoMCwgX2pzb25TdHJpbmdpZnlTYWZlMi5kZWZhdWx0KShhY3Rpb24pKTtcblxuICAgICAgICByZXR1cm4gZGlzcGF0Y2hlZEFjdGlvbjtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///89\n")},function(module,exports){eval('exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return "[Circular ~]"\n    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanNvbi1zdHJpbmdpZnktc2FmZS9zdHJpbmdpZnkuanM/ZGZmMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwiZmlsZSI6IjkwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gc3RyaW5naWZ5XG5leHBvcnRzLmdldFNlcmlhbGl6ZSA9IHNlcmlhbGl6ZXJcblxuZnVuY3Rpb24gc3RyaW5naWZ5KG9iaiwgcmVwbGFjZXIsIHNwYWNlcywgY3ljbGVSZXBsYWNlcikge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkob2JqLCBzZXJpYWxpemVyKHJlcGxhY2VyLCBjeWNsZVJlcGxhY2VyKSwgc3BhY2VzKVxufVxuXG5mdW5jdGlvbiBzZXJpYWxpemVyKHJlcGxhY2VyLCBjeWNsZVJlcGxhY2VyKSB7XG4gIHZhciBzdGFjayA9IFtdLCBrZXlzID0gW11cblxuICBpZiAoY3ljbGVSZXBsYWNlciA9PSBudWxsKSBjeWNsZVJlcGxhY2VyID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIGlmIChzdGFja1swXSA9PT0gdmFsdWUpIHJldHVybiBcIltDaXJjdWxhciB+XVwiXG4gICAgcmV0dXJuIFwiW0NpcmN1bGFyIH4uXCIgKyBrZXlzLnNsaWNlKDAsIHN0YWNrLmluZGV4T2YodmFsdWUpKS5qb2luKFwiLlwiKSArIFwiXVwiXG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xuICAgIGlmIChzdGFjay5sZW5ndGggPiAwKSB7XG4gICAgICB2YXIgdGhpc1BvcyA9IHN0YWNrLmluZGV4T2YodGhpcylcbiAgICAgIH50aGlzUG9zID8gc3RhY2suc3BsaWNlKHRoaXNQb3MgKyAxKSA6IHN0YWNrLnB1c2godGhpcylcbiAgICAgIH50aGlzUG9zID8ga2V5cy5zcGxpY2UodGhpc1BvcywgSW5maW5pdHksIGtleSkgOiBrZXlzLnB1c2goa2V5KVxuICAgICAgaWYgKH5zdGFjay5pbmRleE9mKHZhbHVlKSkgdmFsdWUgPSBjeWNsZVJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSlcbiAgICB9XG4gICAgZWxzZSBzdGFjay5wdXNoKHZhbHVlKVxuXG4gICAgcmV0dXJuIHJlcGxhY2VyID09IG51bGwgPyB2YWx1ZSA6IHJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSlcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///90\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };\n\nexports.default = isImmutableDefault;\nfunction isImmutableDefault(value) {\n  return (typeof value === \'undefined\' ? \'undefined\' : _typeof(value)) !== \'object\' || value === null || typeof value === \'undefined\';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtaW1tdXRhYmxlLXN0YXRlLWludmFyaWFudC9kaXN0L2lzSW1tdXRhYmxlLmpzPzFhODUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7O0FBRUQsb0dBQW9HLG1CQUFtQixFQUFFLG1CQUFtQiw4SEFBOEg7O0FBRTFRO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjkxLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGlzSW1tdXRhYmxlRGVmYXVsdDtcbmZ1bmN0aW9uIGlzSW1tdXRhYmxlRGVmYXVsdCh2YWx1ZSkge1xuICByZXR1cm4gKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2YodmFsdWUpKSAhPT0gJ29iamVjdCcgfHwgdmFsdWUgPT09IG51bGwgfHwgdHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJztcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///91\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = trackForMutations;\nfunction trackForMutations(isImmutable, ignore, obj) {\n  var trackedProperties = trackProperties(isImmutable, ignore, obj);\n  return {\n    detectMutations: function detectMutations() {\n      return _detectMutations(isImmutable, ignore, trackedProperties, obj);\n    }\n  };\n}\n\nfunction trackProperties(isImmutable) {\n  var ignore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var obj = arguments[2];\n  var path = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n  var tracked = { value: obj };\n\n  if (!isImmutable(obj)) {\n    tracked.children = {};\n\n    for (var key in obj) {\n      var childPath = path.concat(key);\n      if (ignore.length && ignore.indexOf(childPath.join('.')) !== -1) {\n        continue;\n      }\n\n      tracked.children[key] = trackProperties(isImmutable, ignore, obj[key], childPath);\n    }\n  }\n  return tracked;\n}\n\nfunction _detectMutations(isImmutable) {\n  var ignore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var trackedProperty = arguments[2];\n  var obj = arguments[3];\n  var sameParentRef = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var path = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n\n  var prevObj = trackedProperty ? trackedProperty.value : undefined;\n\n  var sameRef = prevObj === obj;\n\n  if (sameParentRef && !sameRef && !Number.isNaN(obj)) {\n    return { wasMutated: true, path: path };\n  }\n\n  if (isImmutable(prevObj) || isImmutable(obj)) {\n    return { wasMutated: false };\n  }\n\n  // Gather all keys from prev (tracked) and after objs\n  var keysToDetect = {};\n  Object.keys(trackedProperty.children).forEach(function (key) {\n    keysToDetect[key] = true;\n  });\n  Object.keys(obj).forEach(function (key) {\n    keysToDetect[key] = true;\n  });\n\n  var keys = Object.keys(keysToDetect);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var childPath = path.concat(key);\n    if (ignore.length && ignore.indexOf(childPath.join('.')) !== -1) {\n      continue;\n    }\n\n    var result = _detectMutations(isImmutable, ignore, trackedProperty.children[key], obj[key], sameRef, childPath);\n\n    if (result.wasMutated) {\n      return result;\n    }\n  }\n  return { wasMutated: false };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVkdXgtaW1tdXRhYmxlLXN0YXRlLWludmFyaWFudC9kaXN0L3RyYWNrRm9yTXV0YXRpb25zLmpzPzczZTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCOztBQUVqQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxpQkFBaUIsaUJBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YiLCJmaWxlIjoiOTIuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSB0cmFja0Zvck11dGF0aW9ucztcbmZ1bmN0aW9uIHRyYWNrRm9yTXV0YXRpb25zKGlzSW1tdXRhYmxlLCBpZ25vcmUsIG9iaikge1xuICB2YXIgdHJhY2tlZFByb3BlcnRpZXMgPSB0cmFja1Byb3BlcnRpZXMoaXNJbW11dGFibGUsIGlnbm9yZSwgb2JqKTtcbiAgcmV0dXJuIHtcbiAgICBkZXRlY3RNdXRhdGlvbnM6IGZ1bmN0aW9uIGRldGVjdE11dGF0aW9ucygpIHtcbiAgICAgIHJldHVybiBfZGV0ZWN0TXV0YXRpb25zKGlzSW1tdXRhYmxlLCBpZ25vcmUsIHRyYWNrZWRQcm9wZXJ0aWVzLCBvYmopO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gdHJhY2tQcm9wZXJ0aWVzKGlzSW1tdXRhYmxlKSB7XG4gIHZhciBpZ25vcmUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IFtdO1xuICB2YXIgb2JqID0gYXJndW1lbnRzWzJdO1xuICB2YXIgcGF0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiAzICYmIGFyZ3VtZW50c1szXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzNdIDogW107XG5cbiAgdmFyIHRyYWNrZWQgPSB7IHZhbHVlOiBvYmogfTtcblxuICBpZiAoIWlzSW1tdXRhYmxlKG9iaikpIHtcbiAgICB0cmFja2VkLmNoaWxkcmVuID0ge307XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgICB2YXIgY2hpbGRQYXRoID0gcGF0aC5jb25jYXQoa2V5KTtcbiAgICAgIGlmIChpZ25vcmUubGVuZ3RoICYmIGlnbm9yZS5pbmRleE9mKGNoaWxkUGF0aC5qb2luKCcuJykpICE9PSAtMSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgdHJhY2tlZC5jaGlsZHJlbltrZXldID0gdHJhY2tQcm9wZXJ0aWVzKGlzSW1tdXRhYmxlLCBpZ25vcmUsIG9ialtrZXldLCBjaGlsZFBhdGgpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gdHJhY2tlZDtcbn1cblxuZnVuY3Rpb24gX2RldGVjdE11dGF0aW9ucyhpc0ltbXV0YWJsZSkge1xuICB2YXIgaWdub3JlID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBbXTtcbiAgdmFyIHRyYWNrZWRQcm9wZXJ0eSA9IGFyZ3VtZW50c1syXTtcbiAgdmFyIG9iaiA9IGFyZ3VtZW50c1szXTtcbiAgdmFyIHNhbWVQYXJlbnRSZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gNCAmJiBhcmd1bWVudHNbNF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1s0XSA6IGZhbHNlO1xuICB2YXIgcGF0aCA9IGFyZ3VtZW50cy5sZW5ndGggPiA1ICYmIGFyZ3VtZW50c1s1XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzVdIDogW107XG5cbiAgdmFyIHByZXZPYmogPSB0cmFja2VkUHJvcGVydHkgPyB0cmFja2VkUHJvcGVydHkudmFsdWUgOiB1bmRlZmluZWQ7XG5cbiAgdmFyIHNhbWVSZWYgPSBwcmV2T2JqID09PSBvYmo7XG5cbiAgaWYgKHNhbWVQYXJlbnRSZWYgJiYgIXNhbWVSZWYgJiYgIU51bWJlci5pc05hTihvYmopKSB7XG4gICAgcmV0dXJuIHsgd2FzTXV0YXRlZDogdHJ1ZSwgcGF0aDogcGF0aCB9O1xuICB9XG5cbiAgaWYgKGlzSW1tdXRhYmxlKHByZXZPYmopIHx8IGlzSW1tdXRhYmxlKG9iaikpIHtcbiAgICByZXR1cm4geyB3YXNNdXRhdGVkOiBmYWxzZSB9O1xuICB9XG5cbiAgLy8gR2F0aGVyIGFsbCBrZXlzIGZyb20gcHJldiAodHJhY2tlZCkgYW5kIGFmdGVyIG9ianNcbiAgdmFyIGtleXNUb0RldGVjdCA9IHt9O1xuICBPYmplY3Qua2V5cyh0cmFja2VkUHJvcGVydHkuY2hpbGRyZW4pLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIGtleXNUb0RldGVjdFtrZXldID0gdHJ1ZTtcbiAgfSk7XG4gIE9iamVjdC5rZXlzKG9iaikuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAga2V5c1RvRGV0ZWN0W2tleV0gPSB0cnVlO1xuICB9KTtcblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGtleXNUb0RldGVjdCk7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgIHZhciBjaGlsZFBhdGggPSBwYXRoLmNvbmNhdChrZXkpO1xuICAgIGlmIChpZ25vcmUubGVuZ3RoICYmIGlnbm9yZS5pbmRleE9mKGNoaWxkUGF0aC5qb2luKCcuJykpICE9PSAtMSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgdmFyIHJlc3VsdCA9IF9kZXRlY3RNdXRhdGlvbnMoaXNJbW11dGFibGUsIGlnbm9yZSwgdHJhY2tlZFByb3BlcnR5LmNoaWxkcmVuW2tleV0sIG9ialtrZXldLCBzYW1lUmVmLCBjaGlsZFBhdGgpO1xuXG4gICAgaWYgKHJlc3VsdC53YXNNdXRhdGVkKSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgfVxuICByZXR1cm4geyB3YXNNdXRhdGVkOiBmYWxzZSB9O1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///92\n")},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: external {"this":"React"}\nvar external_this_React_ = __webpack_require__(0);\nvar external_this_React_default = /*#__PURE__*/__webpack_require__.n(external_this_React_);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 17 modules\nvar es = __webpack_require__(8);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(1);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ./src/mappings/actions/actions.js\nvar actions = __webpack_require__(16);\n\n// CONCATENATED MODULE: ./src/mappings/components/select-component.js\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * SelectComponent : component to render the selection box\n * \n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\nvar select_component_SelectComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SelectComponent, _React$Component);\n\n  function SelectComponent(props) {\n    var _this;\n\n    _classCallCheck(this, SelectComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SelectComponent).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), "renderOptionsDefault", function () {\n      return _this.props.options.map(function (item, index) {\n        return external_this_React_default.a.createElement("option", {\n          key: index,\n          value: item.value\n        }, item.label);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "renderOptions", function (options) {\n      return options.map(function (item, index) {\n        return external_this_React_default.a.createElement("option", {\n          key: index,\n          value: item.value\n        }, item.label);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "renderOptionsForOptionGroup", function () {\n      return _this.props.options.map(function (item, index) {\n        return external_this_React_default.a.createElement("optgroup", {\n          label: item.group_name\n        }, _this.renderOptions(item.group_options));\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(SelectComponent, [{\n    key: "renderOptionsConditionally",\n    value: function renderOptionsConditionally() {\n      if (this.props.inputDataIsOptionGroup) {\n        return this.renderOptionsForOptionGroup();\n      } else {\n        return this.renderOptionsDefault();\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, external_this_React_default.a.createElement("select", {\n        value: this.props.value,\n        className: this.props.className,\n        onChange: this.props.onChange\n      }, external_this_React_default.a.createElement("option", {\n        selected: true,\n        disabled: true,\n        value: ""\n      }, "Select one"), this.renderOptionsConditionally()));\n    }\n  }]);\n\n  return SelectComponent;\n}(external_this_React_default.a.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\n/* harmony default export */ var select_component = (Object(es["b" /* connect */])(mapStateToProps)(select_component_SelectComponent));\n// CONCATENATED MODULE: ./src/mappings/components/property-component.js\nfunction property_component_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { property_component_typeof = function _typeof(obj) { return typeof obj; }; } else { property_component_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return property_component_typeof(obj); }\n\nfunction property_component_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction property_component_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction property_component_createClass(Constructor, protoProps, staticProps) { if (protoProps) property_component_defineProperties(Constructor.prototype, protoProps); if (staticProps) property_component_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction property_component_possibleConstructorReturn(self, call) { if (call && (property_component_typeof(call) === "object" || typeof call === "function")) { return call; } return property_component_assertThisInitialized(self); }\n\nfunction property_component_getPrototypeOf(o) { property_component_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return property_component_getPrototypeOf(o); }\n\nfunction property_component_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction property_component_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) property_component_setPrototypeOf(subClass, superClass); }\n\nfunction property_component_setPrototypeOf(o, p) { property_component_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return property_component_setPrototypeOf(o, p); }\n\nfunction property_component_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * PropertyComponent : used to display a individual property, has 2 states\n * allow the user to edit it and add a new property\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\nvar property_component_PropertyInputField = function PropertyInputField(_ref) {\n  var propData = _ref.propData,\n      handleChangeForPropertyField = _ref.handleChangeForPropertyField,\n      inputKeyName = _ref.inputKeyName;\n  return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, external_this_React_default.a.createElement("input", {\n    type: "text",\n    className: "wl-form-control",\n    defaultValue: propData[inputKeyName],\n    onChange: function onChange(event) {\n      handleChangeForPropertyField(inputKeyName, event);\n    }\n  }));\n};\n\nvar property_component_PropertyComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  property_component_inherits(PropertyComponent, _React$Component);\n\n  function PropertyComponent(props) {\n    var _this;\n\n    property_component_classCallCheck(this, PropertyComponent);\n\n    _this = property_component_possibleConstructorReturn(this, property_component_getPrototypeOf(PropertyComponent).call(this, props));\n\n    property_component_defineProperty(property_component_assertThisInitialized(_this), "handleChangeForPropertyField", function (fieldKey, event) {\n      var action = actions["q" /* PROPERTY_DATA_CHANGED_ACTION */];\n      action.payload = {\n        fieldKey: fieldKey,\n        value: event.target.value,\n        propertyId: _this.props.propData.property_id\n      };\n\n      _this.props.dispatch(action);\n\n      console.log(action);\n    });\n\n    property_component_defineProperty(property_component_assertThisInitialized(_this), "getInputFieldForFieldName", function () {\n      var field_type = _this.props.propData.fieldTypeHelpText;\n\n      var results = _this.props.fieldNameOptions.filter(function (el) {\n        return el.field_type === field_type;\n      });\n\n      var value = results.length > 0 ? results[0].value : null; // If the value is array then display a selection box\n\n      if (Array.isArray(value)) {\n        return external_this_React_default.a.createElement(select_component, {\n          inputDataIsOptionGroup: field_type === \'acf\',\n          className: "wl-form-select",\n          options: value,\n          value: _this.props.propData.fieldHelpText,\n          onChange: function onChange(event) {\n            _this.handleChangeForPropertyField("fieldHelpText", event);\n          }\n        });\n      } else {\n        return external_this_React_default.a.createElement(property_component_PropertyInputField, {\n          propData: _this.props.propData,\n          handleChangeForPropertyField: _this.handleChangeForPropertyField,\n          inputKeyName: "fieldHelpText"\n        });\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * When a property item changes this method gets fired\n   * @param {String} fieldKey Field Key is the key present in property data\n   * @param {Object} event The onChange event when a input field is changed\n   */\n\n\n  property_component_createClass(PropertyComponent, [{\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, external_this_React_default.a.createElement("a", {\n        className: "row-title"\n      }, this.props.propData.propertyHelpText), external_this_React_default.a.createElement("br", null), external_this_React_default.a.createElement("table", {\n        className: "wl-container wl-container-full wl-spaced-table wl-property-edit-item"\n      }, external_this_React_default.a.createElement("tbody", null, external_this_React_default.a.createElement("tr", null, external_this_React_default.a.createElement("td", {\n        colspan: "2"\n      }, "Property Name"), external_this_React_default.a.createElement("td", {\n        colspan: "3"\n      }, external_this_React_default.a.createElement(property_component_PropertyInputField, {\n        propData: this.props.propData,\n        handleChangeForPropertyField: this.handleChangeForPropertyField,\n        inputKeyName: "propertyHelpText"\n      }))), external_this_React_default.a.createElement("tr", null, external_this_React_default.a.createElement("td", {\n        colspan: "2"\n      }, "Field Type"), external_this_React_default.a.createElement("td", {\n        colspan: "3"\n      }, external_this_React_default.a.createElement(select_component, {\n        className: "wl-form-select",\n        options: this.props.fieldTypeHelpTextOptions,\n        value: this.props.propData.fieldTypeHelpText,\n        onChange: function onChange(event) {\n          _this2.handleChangeForPropertyField("fieldTypeHelpText", event);\n        }\n      }))), external_this_React_default.a.createElement("tr", null, external_this_React_default.a.createElement("td", {\n        colspan: "2"\n      }, "Field Text"), external_this_React_default.a.createElement("td", {\n        colspan: "3"\n      }, this.getInputFieldForFieldName())), external_this_React_default.a.createElement("tr", null, external_this_React_default.a.createElement("td", {\n        colspan: "2"\n      }, "Transform Function"), external_this_React_default.a.createElement("td", {\n        colspan: "3"\n      }, external_this_React_default.a.createElement(select_component, {\n        className: "wl-form-select",\n        options: this.props.transformHelpTextOptions,\n        value: this.props.propData.transformHelpText,\n        onChange: function onChange(event) {\n          _this2.handleChangeForPropertyField("transformHelpText", event);\n        }\n      }))), external_this_React_default.a.createElement("tr", null, external_this_React_default.a.createElement("td", {\n        colspan: "2"\n      }), external_this_React_default.a.createElement("td", null, external_this_React_default.a.createElement("button", {\n        disabled: this.props.propData.propertyHelpText.length <= 0,\n        className: "wl-close-mapping button action bg-primary text-white",\n        onClick: function onClick() {\n          return _this2.props.switchState(_this2.props.propData.property_id);\n        }\n      }, "Close Mapping"))))));\n    }\n  }]);\n\n  return PropertyComponent;\n}(external_this_React_default.a.Component); // supply a property object as data\n\n\nproperty_component_PropertyComponent.propTypes = {\n  propertyData: prop_types_default.a.object\n};\n\nvar property_component_mapStateToProps = function mapStateToProps(state) {\n  return {\n    transformHelpTextOptions: state.PropertyListData.transformHelpTextOptions,\n    fieldTypeHelpTextOptions: state.PropertyListData.fieldTypeHelpTextOptions,\n    fieldNameOptions: state.PropertyListData.fieldNameOptions\n  };\n};\n\n/* harmony default export */ var property_component = (Object(es["b" /* connect */])(property_component_mapStateToProps)(property_component_PropertyComponent));\n// EXTERNAL MODULE: ./src/mappings/components/category-component.js\nvar category_component = __webpack_require__(19);\n\n// CONCATENATED MODULE: ./src/mappings/components/property-list-item-component.js\nfunction property_list_item_component_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { property_list_item_component_typeof = function _typeof(obj) { return typeof obj; }; } else { property_list_item_component_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return property_list_item_component_typeof(obj); }\n\nfunction property_list_item_component_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction property_list_item_component_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction property_list_item_component_createClass(Constructor, protoProps, staticProps) { if (protoProps) property_list_item_component_defineProperties(Constructor.prototype, protoProps); if (staticProps) property_list_item_component_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction property_list_item_component_possibleConstructorReturn(self, call) { if (call && (property_list_item_component_typeof(call) === "object" || typeof call === "function")) { return call; } return property_list_item_component_assertThisInitialized(self); }\n\nfunction property_list_item_component_getPrototypeOf(o) { property_list_item_component_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return property_list_item_component_getPrototypeOf(o); }\n\nfunction property_list_item_component_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction property_list_item_component_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) property_list_item_component_setPrototypeOf(subClass, superClass); }\n\nfunction property_list_item_component_setPrototypeOf(o, p) { property_list_item_component_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return property_list_item_component_setPrototypeOf(o, p); }\n\nfunction property_list_item_component_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/**\n * PropertyListItemComponent : used to display a single\n * property item with the title property help text\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n\n\n\n/** Constants to be supplied via actions, and also compared in \n * the property reducers for making a CRUD Action on the property\n * list.\n */\n\nvar DUPLICATE_PROPERTY = \'duplicate_property\';\nvar DELETE_PROPERTY_PERMANENT = \'delete_property_permanent\';\n\nvar property_list_item_component_RowActionItem = function RowActionItem(_ref) {\n  var className = _ref.className,\n      title = _ref.title,\n      onClickHandler = _ref.onClickHandler,\n      args = _ref.args;\n  return external_this_React_default.a.createElement("span", {\n    className: className\n  }, external_this_React_default.a.createElement("a", {\n    onClick: function onClick() {\n      onClickHandler.apply(void 0, _toConsumableArray(args));\n    }\n  }, title), "|");\n};\n\nvar property_list_item_component_PropertyListItemComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  property_list_item_component_inherits(PropertyListItemComponent, _React$Component);\n\n  function PropertyListItemComponent(props) {\n    var _this;\n\n    property_list_item_component_classCallCheck(this, PropertyListItemComponent);\n\n    _this = property_list_item_component_possibleConstructorReturn(this, property_list_item_component_getPrototypeOf(PropertyListItemComponent).call(this, props));\n\n    property_list_item_component_defineProperty(property_list_item_component_assertThisInitialized(_this), "changeCategoryPropertyItem", function (propertyId, category) {\n      var action = actions["s" /* PROPERTY_ITEM_CATEGORY_CHANGED_ACTION */];\n      action.payload = {\n        propertyId: propertyId,\n        propertyCategory: category\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    property_list_item_component_defineProperty(property_list_item_component_assertThisInitialized(_this), "makeCrudOperationOnPropertyId", function (propertyId, operationName) {\n      var action = actions["t" /* PROPERTY_ITEM_CRUD_OPERATION_ACTION */];\n      action.payload = {\n        propertyId: propertyId,\n        operationName: operationName\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    return _this;\n  }\n  /**\n   * Return the options for the trash category.\n   */\n\n\n  property_list_item_component_createClass(PropertyListItemComponent, [{\n    key: "returnOptionsForTrashCategory",\n    value: function returnOptionsForTrashCategory() {\n      return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, external_this_React_default.a.createElement(property_list_item_component_RowActionItem, {\n        className: "edit wl-mappings-link",\n        onClickHandler: this.changeCategoryPropertyItem,\n        title: "Restore",\n        args: [this.props.propData.property_id, category_component["a" /* ACTIVE_CATEGORY */]]\n      }), external_this_React_default.a.createElement(property_list_item_component_RowActionItem, {\n        className: "trash wl-mappings-link",\n        onClickHandler: this.makeCrudOperationOnPropertyId,\n        title: "Delete Permanently",\n        args: [this.props.propData.property_id, DELETE_PROPERTY_PERMANENT]\n      }));\n    }\n    /**\n     * Return the template for the active category.\n     */\n\n  }, {\n    key: "returnOptionsForActiveCategory",\n    value: function returnOptionsForActiveCategory() {\n      return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, external_this_React_default.a.createElement(property_list_item_component_RowActionItem, {\n        className: "edit wl-mappings-link",\n        onClickHandler: this.props.switchState,\n        title: "Edit",\n        args: [this.props.propData.property_id]\n      }), external_this_React_default.a.createElement(property_list_item_component_RowActionItem, {\n        className: "wl-mappings-link",\n        onClickHandler: this.makeCrudOperationOnPropertyId,\n        title: "Duplicate",\n        args: [this.props.propData.property_id, DUPLICATE_PROPERTY]\n      }), external_this_React_default.a.createElement(property_list_item_component_RowActionItem, {\n        className: "wl-mappings-link trash",\n        onClickHandler: this.changeCategoryPropertyItem,\n        title: "Trash",\n        args: [this.props.propData.property_id, category_component["b" /* TRASH_CATEGORY */]]\n      }));\n    }\n    /**\n     * Render the options based on the mapping list item category.\n     * @param {String} category Category which the mapping items belong to \n     */\n\n  }, {\n    key: "renderOptionsBasedOnItemCategory",\n    value: function renderOptionsBasedOnItemCategory(category) {\n      switch (category) {\n        case category_component["a" /* ACTIVE_CATEGORY */]:\n          return this.returnOptionsForActiveCategory();\n\n        case category_component["b" /* TRASH_CATEGORY */]:\n          return this.returnOptionsForTrashCategory();\n      }\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return external_this_React_default.a.createElement("div", {\n        className: "wl-property-list-item wl-container"\n      }, external_this_React_default.a.createElement("div", {\n        className: "wl-col"\n      }, external_this_React_default.a.createElement("a", {\n        className: "row-title wl-property-list-item-title"\n      }, this.props.propData.propertyHelpText), external_this_React_default.a.createElement("div", {\n        className: "row-actions"\n      }, this.renderOptionsBasedOnItemCategory(this.props.choosenCategory))));\n    }\n  }]);\n\n  return PropertyListItemComponent;\n}(external_this_React_default.a.Component);\n\nproperty_list_item_component_PropertyListItemComponent.propTypes = {\n  propertyText: prop_types_default.a.string\n};\n/* harmony default export */ var property_list_item_component = (Object(es["b" /* connect */])()(property_list_item_component_PropertyListItemComponent));\n// CONCATENATED MODULE: ./src/mappings/components/property-list-component.js\nfunction property_list_component_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { property_list_component_typeof = function _typeof(obj) { return typeof obj; }; } else { property_list_component_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return property_list_component_typeof(obj); }\n\nfunction property_list_component_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction property_list_component_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction property_list_component_createClass(Constructor, protoProps, staticProps) { if (protoProps) property_list_component_defineProperties(Constructor.prototype, protoProps); if (staticProps) property_list_component_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction property_list_component_possibleConstructorReturn(self, call) { if (call && (property_list_component_typeof(call) === "object" || typeof call === "function")) { return call; } return property_list_component_assertThisInitialized(self); }\n\nfunction property_list_component_getPrototypeOf(o) { property_list_component_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return property_list_component_getPrototypeOf(o); }\n\nfunction property_list_component_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction property_list_component_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) property_list_component_setPrototypeOf(subClass, superClass); }\n\nfunction property_list_component_setPrototypeOf(o, p) { property_list_component_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return property_list_component_setPrototypeOf(o, p); }\n\nfunction property_list_component_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * PropertyListComponent : used to display list of properties present\n * in a mapping item, the user can edit, add, delete properties\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n\nvar property_list_component_PropertyListComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  property_list_component_inherits(PropertyListComponent, _React$Component);\n\n  function PropertyListComponent(props) {\n    var _this;\n\n    property_list_component_classCallCheck(this, PropertyListComponent);\n\n    _this = property_list_component_possibleConstructorReturn(this, property_list_component_getPrototypeOf(PropertyListComponent).call(this, props));\n\n    property_list_component_defineProperty(property_list_component_assertThisInitialized(_this), "switchState", function (propertyId) {\n      var action = actions["p" /* OPEN_OR_CLOSE_PROPERTY_ACTION */];\n      action.payload = {\n        propertyId: propertyId\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    property_list_component_defineProperty(property_list_component_assertThisInitialized(_this), "handleAddMappingClick", function () {\n      _this.props.dispatch(actions["a" /* ADD_MAPPING_ACTION */]);\n    });\n\n    property_list_component_defineProperty(property_list_component_assertThisInitialized(_this), "categorySelectHandler", function (category) {\n      var action = actions["x" /* PROPERTY_LIST_CHOOSEN_CATEGORY_CHANGED_ACTION */];\n      action.payload = {\n        choosenCategory: category\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    property_list_component_defineProperty(property_list_component_assertThisInitialized(_this), "propertySelectedHandler", function (propertyId) {\n      var action = actions["u" /* PROPERTY_ITEM_SELECTED_ACTION */];\n      action.payload = {\n        propertyId: propertyId\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    property_list_component_defineProperty(property_list_component_assertThisInitialized(_this), "selectAllPropertyHandler", function () {\n      _this.props.dispatch(actions["v" /* PROPERTY_ITEM_SELECT_ALL_ACTION */]);\n    });\n\n    property_list_component_defineProperty(property_list_component_assertThisInitialized(_this), "renderListComponentBasedOnState", function (property, index) {\n      if (property.isOpenedOrAddedByUser) {\n        return (// show the property in edit mode\n          external_this_React_default.a.createElement(property_component, {\n            propData: property,\n            switchState: _this.switchState\n          })\n        );\n      } // if it is not opened then return the list item\n\n\n      return external_this_React_default.a.createElement(property_list_item_component, {\n        choosenCategory: _this.props.choosenCategory,\n        propData: property,\n        switchState: _this.switchState\n      });\n    });\n\n    return _this;\n  }\n  /**\n   * It makes property item \n   * switch from edit mode to list item mode and vice versa\n   * @param {Number} propertyIndex \n   */\n\n\n  property_list_component_createClass(PropertyListComponent, [{\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, external_this_React_default.a.createElement(category_component["c" /* default */], {\n        source: this.props.propertyList,\n        categoryKeyName: "property_status",\n        categories: [\'active\', \'trash\'],\n        categorySelectHandler: this.categorySelectHandler,\n        choosenCategory: this.props.choosenCategory\n      }), external_this_React_default.a.createElement("br", null), external_this_React_default.a.createElement("table", {\n        className: "wp-list-table widefat striped wl-table wl-container-full"\n      }, external_this_React_default.a.createElement("thead", null, external_this_React_default.a.createElement("tr", null, external_this_React_default.a.createElement("th", {\n        className: "wl-check-column"\n      }, external_this_React_default.a.createElement("input", {\n        type: "checkbox",\n        checked: this.props.propertyHeaderCheckboxClicked === true,\n        onClick: function onClick() {\n          _this2.selectAllPropertyHandler();\n        }\n      })), external_this_React_default.a.createElement("th", {\n        style: {\n          width: \'30%\'\n        }\n      }, external_this_React_default.a.createElement("b", null, "Property")), external_this_React_default.a.createElement("th", null, external_this_React_default.a.createElement("b", null, "Field")))), external_this_React_default.a.createElement("tbody", null, 0 === this.props.propertyList.filter(function (property) {\n        return property.property_status === _this2.props.choosenCategory;\n      }).length && external_this_React_default.a.createElement("tr", null, external_this_React_default.a.createElement("td", {\n        colSpan: 2,\n        className: "text-center"\n      }, "No Active properties present, click on add new")), this.props.propertyList.filter(function (property) {\n        return property.property_status === _this2.props.choosenCategory;\n      }).map(function (property, index) {\n        return external_this_React_default.a.createElement("tr", {\n          className: "wl-property-list-item-container"\n        }, external_this_React_default.a.createElement("td", {\n          className: "wl-check-column"\n        }, external_this_React_default.a.createElement("input", {\n          type: "checkbox",\n          checked: property.isSelectedByUser,\n          onClick: function onClick() {\n            _this2.propertySelectedHandler(property.property_id);\n          }\n        })), external_this_React_default.a.createElement("td", null, _this2.renderListComponentBasedOnState(property, index)), external_this_React_default.a.createElement("td", null));\n      }), external_this_React_default.a.createElement("tr", {\n        className: "wl-text-right"\n      }, external_this_React_default.a.createElement("td", {\n        colspan: "3"\n      }, external_this_React_default.a.createElement("br", null), external_this_React_default.a.createElement("button", {\n        className: "button action bg-primary text-white wl-add-mapping",\n        style: {\n          margin: \'auto\'\n        },\n        onClick: this.handleAddMappingClick\n      }, "Add Mapping"), " ", external_this_React_default.a.createElement("br", null))))));\n    }\n  }]);\n\n  return PropertyListComponent;\n}(external_this_React_default.a.Component);\n\nproperty_list_component_PropertyListComponent.propTypes = {\n  propertyList: prop_types_default.a.array\n};\n\nvar property_list_component_mapStateToProps = function mapStateToProps(state) {\n  return {\n    propertyHeaderCheckboxClicked: state.propertyHeaderCheckboxClicked,\n    propertyList: state.PropertyListData.propertyList,\n    choosenCategory: state.PropertyListData.choosenPropertyCategory\n  };\n};\n\n/* harmony default export */ var property_list_component = (Object(es["b" /* connect */])(property_list_component_mapStateToProps)(property_list_component_PropertyListComponent));\n// CONCATENATED MODULE: ./src/mappings/mappings/edit-component-mapping.js\nfunction edit_component_mapping_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction edit_component_mapping_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction edit_component_mapping_createClass(Constructor, protoProps, staticProps) { if (protoProps) edit_component_mapping_defineProperties(Constructor.prototype, protoProps); if (staticProps) edit_component_mapping_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * EditComponentMapping : This maps the ui keys with api response keys and vice versa.\n * \n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\nvar EditComponentMapping =\n/*#__PURE__*/\nfunction () {\n  function EditComponentMapping() {\n    edit_component_mapping_classCallCheck(this, EditComponentMapping);\n  }\n\n  edit_component_mapping_createClass(EditComponentMapping, null, [{\n    key: "mapRuleFieldKeysToAPI",\n\n    /**\n     * @param {Array} rule_list List of rules\n     *  Note: if the rule_id are undefined, then dont post it, backend\n     *  creates new rule id if there is no id.\n     */\n    value: function mapRuleFieldKeysToAPI(rule_list) {\n      return rule_list.map(function (rule) {\n        var single_rule = {\n          rule_field_one: rule.ruleFieldOneValue,\n          rule_field_two: rule.ruleFieldTwoValue,\n          rule_logic_field: rule.ruleLogicFieldValue\n        };\n        rule.rule_id ? single_rule[\'rule_id\'] = rule.rule_id : rule.rule_id;\n        return single_rule;\n      });\n    }\n    /**\n     * Convert property list to api format to save the property\n     * list propertly\n     * @param {Array} property_list List of property items from ui\n     */\n\n  }, {\n    key: "mapPropertyListKeysToAPI",\n    value: function mapPropertyListKeysToAPI(property_list) {\n      return property_list.map(function (property) {\n        // Conditionally remove property id, if it is added by user.\n        var propertyItem = {\n          property_name: property.propertyHelpText,\n          field_type: property.fieldTypeHelpText,\n          field_name: property.fieldHelpText,\n          transform_function: property.transformHelpText,\n          property_status: property.property_status\n        }; // If it is created in the ui, then remove the property id, rest api will detect this and\n        // create a new entry for the property.\n\n        if (!property.isPropertyAddedViaUI) {\n          propertyItem.property_id = parseInt(property.property_id);\n        }\n\n        return propertyItem;\n      });\n    }\n    /**\n     * Convert property list API Response to ui format\n     * @param {Array} property_list The list of properties\n     * from API.\n     * @return {Array} New array with mapped keys.\n     */\n\n  }, {\n    key: "mapPropertyAPIKeysToUi",\n    value: function mapPropertyAPIKeysToUi(property_list) {\n      return property_list.map(function (property) {\n        return {\n          propertyHelpText: property.property_name,\n          fieldTypeHelpText: property.field_type,\n          fieldHelpText: property.field_name,\n          transformHelpText: property.transform_function,\n          property_id: parseInt(property.property_id),\n          property_status: property.property_status,\n          isOpenedOrAddedByUser: false,\n          isSelectedByUser: false,\n          isPropertyAddedViaUI: false\n        };\n      });\n    }\n  }, {\n    key: "mapRuleFieldAPIKeysToUi",\n    value: function mapRuleFieldAPIKeysToUi(rule_list) {\n      return rule_list.map(function (rule) {\n        return {\n          ruleFieldOneValue: rule.rule_field_one,\n          ruleFieldTwoValue: rule.rule_field_two,\n          ruleLogicFieldValue: rule.rule_logic_field,\n          rule_id: rule.rule_id\n        };\n      });\n    }\n    /**\n     * @param {Array} rule_group_list List of rule group items from api \n     */\n\n  }, {\n    key: "mapRuleGroupListAPIKeysToUi",\n    value: function mapRuleGroupListAPIKeysToUi(rule_group_list) {\n      return rule_group_list.map(function (rule_group_item) {\n        return {\n          rule_group_id: rule_group_item.rule_group_id,\n          rules: EditComponentMapping.mapRuleFieldAPIKeysToUi(rule_group_item.rules)\n        };\n      });\n    }\n    /**\n     * Map Rule group list to api format to save the list.\n     * @param {Array} rule_group_list List of rule groups along with rules\n     * from ui\n     * Note: if the rule_group_ids are undefined, then dont post it, backend\n     * creates new rule group if there is no id.\n     */\n\n  }, {\n    key: "mapRuleGroupListKeysToAPI",\n    value: function mapRuleGroupListKeysToAPI(rule_group_list) {\n      return rule_group_list.map(function (rule_group_item) {\n        var single_rule_group_item = {\n          rules: EditComponentMapping.mapRuleFieldKeysToAPI(rule_group_item.rules)\n        };\n\n        if (rule_group_item.rule_group_id) {\n          single_rule_group_item.rule_group_id = rule_group_item.rule_group_id;\n        }\n\n        return single_rule_group_item;\n      });\n    }\n  }, {\n    key: "mapStoreKeysToAPI",\n    value: function mapStoreKeysToAPI(store) {\n      // We create a post object to transform the ui data to Api data\n      var postObject = {\n        mapping_title: store.TitleSectionData.title,\n        property_list: store.PropertyListData.propertyList,\n        rule_group_list: store.RuleGroupData.ruleGroupList\n      };\n\n      if (store.TitleSectionData.mapping_id != undefined) {\n        postObject.mapping_id = store.TitleSectionData.mapping_id;\n      }\n\n      postObject.rule_group_list = EditComponentMapping.mapRuleGroupListKeysToAPI(postObject.rule_group_list);\n      postObject.property_list = EditComponentMapping.mapPropertyListKeysToAPI(postObject.property_list);\n      return postObject;\n    }\n  }]);\n\n  return EditComponentMapping;\n}();\n\n/* harmony default export */ var edit_component_mapping = (EditComponentMapping);\n// EXTERNAL MODULE: ./src/mappings/components/bulk-action-component.js\nvar bulk_action_component = __webpack_require__(74);\n\n// CONCATENATED MODULE: ./src/mappings/components/rule-component.js\nfunction rule_component_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rule_component_typeof = function _typeof(obj) { return typeof obj; }; } else { rule_component_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rule_component_typeof(obj); }\n\nfunction rule_component_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rule_component_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rule_component_createClass(Constructor, protoProps, staticProps) { if (protoProps) rule_component_defineProperties(Constructor.prototype, protoProps); if (staticProps) rule_component_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rule_component_possibleConstructorReturn(self, call) { if (call && (rule_component_typeof(call) === "object" || typeof call === "function")) { return call; } return rule_component_assertThisInitialized(self); }\n\nfunction rule_component_getPrototypeOf(o) { rule_component_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rule_component_getPrototypeOf(o); }\n\nfunction rule_component_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rule_component_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rule_component_setPrototypeOf(subClass, superClass); }\n\nfunction rule_component_setPrototypeOf(o, p) { rule_component_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rule_component_setPrototypeOf(o, p); }\n\nfunction rule_component_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * RuleComponent : Displays a single rule \n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\nvar rule_component_RuleComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  rule_component_inherits(RuleComponent, _React$Component);\n\n  function RuleComponent(props) {\n    var _this;\n\n    rule_component_classCallCheck(this, RuleComponent);\n\n    _this = rule_component_possibleConstructorReturn(this, rule_component_getPrototypeOf(RuleComponent).call(this, props));\n\n    rule_component_defineProperty(rule_component_assertThisInitialized(_this), "handleAddNewRule", function (ruleGroupIndex, ruleIndex) {\n      var action = actions["b" /* ADD_NEW_RULE_ACTION */];\n      action.payload = {\n        ruleGroupIndex: ruleGroupIndex,\n        ruleIndex: ruleIndex\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    rule_component_defineProperty(rule_component_assertThisInitialized(_this), "handleDeleteRule", function (ruleGroupIndex, ruleIndex) {\n      var action = actions["f" /* DELETE_RULE_ACTION */];\n      action.payload = {\n        ruleGroupIndex: ruleGroupIndex,\n        ruleIndex: ruleIndex\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    rule_component_defineProperty(rule_component_assertThisInitialized(_this), "handleSelectFieldChange", function (event, fieldKey) {\n      var action = actions["e" /* CHANGE_RULE_FIELD_VALUE_ACTION */];\n      action.payload = {\n        value: event.target.value,\n        ruleIndex: _this.props.ruleIndex,\n        ruleGroupIndex: _this.props.ruleGroupIndex,\n        fieldKey: fieldKey\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    return _this;\n  }\n  /**\n   * Adds a new rule after the current rule index\n   * \n   * @param {Number} ruleGroupIndex Index of the rule group which the rule belongs to\n   * @param {Number} ruleIndex Index of the rule\n   */\n\n\n  rule_component_createClass(RuleComponent, [{\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      return external_this_React_default.a.createElement("div", {\n        className: "wl-container wl-rule-container"\n      }, external_this_React_default.a.createElement("div", {\n        className: "wl-col"\n      }, external_this_React_default.a.createElement(select_component, {\n        options: this.props.ruleFieldOneOptions,\n        value: this.props.ruleProps.ruleFieldOneValue,\n        onChange: function onChange(e) {\n          _this2.handleSelectFieldChange(e, "ruleFieldOneValue");\n        },\n        className: "wl-field-one-select wl-form-select"\n      })), external_this_React_default.a.createElement("div", {\n        className: "wl-col"\n      }, external_this_React_default.a.createElement(select_component, {\n        options: this.props.ruleLogicFieldOptions,\n        value: this.props.ruleProps.ruleLogicFieldValue,\n        onChange: function onChange(e) {\n          _this2.handleSelectFieldChange(e, "ruleLogicFieldValue");\n        },\n        className: "wl-field-logic wl-form-select"\n      })), external_this_React_default.a.createElement("div", {\n        className: "wl-col"\n      }, external_this_React_default.a.createElement(select_component, {\n        options: this.props.ruleFieldTwoOptions.filter(function (el) {\n          return el.taxonomy === _this2.props.ruleProps.ruleFieldOneValue;\n        }),\n        value: this.props.ruleProps.ruleFieldTwoValue,\n        onChange: function onChange(e) {\n          _this2.handleSelectFieldChange(e, "ruleFieldTwoValue");\n        },\n        className: "wl-field-two-select wl-form-select"\n      })), external_this_React_default.a.createElement("div", {\n        className: "wl-col"\n      }, external_this_React_default.a.createElement("button", {\n        className: "button action wl-and-button",\n        onClick: function onClick() {\n          return _this2.handleAddNewRule(_this2.props.ruleGroupIndex, _this2.props.ruleIndex);\n        }\n      }, "And")), (0 != this.props.ruleGroupIndex || 0 != this.props.ruleIndex) && external_this_React_default.a.createElement("div", {\n        className: "wl-col"\n      }, external_this_React_default.a.createElement("button", {\n        className: "button action wl-remove-button dashicons dashicons-trash",\n        onClick: function onClick() {\n          return _this2.handleDeleteRule(_this2.props.ruleGroupIndex, _this2.props.ruleIndex);\n        }\n      })));\n    }\n  }]);\n\n  return RuleComponent;\n}(external_this_React_default.a.Component);\n\nvar rule_component_mapStateToProps = function mapStateToProps(state) {\n  return {\n    ruleFieldOneOptions: state.RuleGroupData.ruleFieldOneOptions,\n    ruleFieldTwoOptions: state.RuleGroupData.ruleFieldTwoOptions,\n    ruleLogicFieldOptions: state.RuleGroupData.ruleLogicFieldOptions\n  };\n};\n\n/* harmony default export */ var rule_component = (Object(es["b" /* connect */])(rule_component_mapStateToProps)(rule_component_RuleComponent));\n// CONCATENATED MODULE: ./src/mappings/components/rule-group-component.js\nfunction rule_group_component_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rule_group_component_typeof = function _typeof(obj) { return typeof obj; }; } else { rule_group_component_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rule_group_component_typeof(obj); }\n\nfunction rule_group_component_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rule_group_component_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rule_group_component_createClass(Constructor, protoProps, staticProps) { if (protoProps) rule_group_component_defineProperties(Constructor.prototype, protoProps); if (staticProps) rule_group_component_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rule_group_component_possibleConstructorReturn(self, call) { if (call && (rule_group_component_typeof(call) === "object" || typeof call === "function")) { return call; } return rule_group_component_assertThisInitialized(self); }\n\nfunction rule_group_component_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rule_group_component_getPrototypeOf(o) { rule_group_component_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rule_group_component_getPrototypeOf(o); }\n\nfunction rule_group_component_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rule_group_component_setPrototypeOf(subClass, superClass); }\n\nfunction rule_group_component_setPrototypeOf(o, p) { rule_group_component_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rule_group_component_setPrototypeOf(o, p); }\n\n/**\n * RuleGroupComponent : it displays the list of rules, let the user\n * add new rules\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\nvar rule_group_component_RuleGroupComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  rule_group_component_inherits(RuleGroupComponent, _React$Component);\n\n  function RuleGroupComponent(props) {\n    rule_group_component_classCallCheck(this, RuleGroupComponent);\n\n    return rule_group_component_possibleConstructorReturn(this, rule_group_component_getPrototypeOf(RuleGroupComponent).call(this, props));\n  }\n\n  rule_group_component_createClass(RuleGroupComponent, [{\n    key: "render",\n    value: function render() {\n      var _this = this;\n\n      return external_this_React_default.a.createElement("div", {\n        className: "rule-group-container"\n      }, this.props.rules.map(function (ruleProps, ruleIndex) {\n        return external_this_React_default.a.createElement(rule_component, {\n          ruleProps: ruleProps,\n          ruleGroupIndex: _this.props.ruleGroupIndex,\n          ruleIndex: ruleIndex\n        });\n      }));\n    }\n  }]);\n\n  return RuleGroupComponent;\n}(external_this_React_default.a.Component);\n\nrule_group_component_RuleGroupComponent.propTypes = {\n  rules: prop_types_default.a.array\n};\n\nvar rule_group_component_mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\n/* harmony default export */ var rule_group_component = (Object(es["b" /* connect */])(rule_group_component_mapStateToProps)(rule_group_component_RuleGroupComponent));\n// CONCATENATED MODULE: ./src/mappings/components/rule-group-list-component.js\nfunction rule_group_list_component_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { rule_group_list_component_typeof = function _typeof(obj) { return typeof obj; }; } else { rule_group_list_component_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return rule_group_list_component_typeof(obj); }\n\nfunction rule_group_list_component_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction rule_group_list_component_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction rule_group_list_component_createClass(Constructor, protoProps, staticProps) { if (protoProps) rule_group_list_component_defineProperties(Constructor.prototype, protoProps); if (staticProps) rule_group_list_component_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction rule_group_list_component_possibleConstructorReturn(self, call) { if (call && (rule_group_list_component_typeof(call) === "object" || typeof call === "function")) { return call; } return rule_group_list_component_assertThisInitialized(self); }\n\nfunction rule_group_list_component_getPrototypeOf(o) { rule_group_list_component_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return rule_group_list_component_getPrototypeOf(o); }\n\nfunction rule_group_list_component_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction rule_group_list_component_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) rule_group_list_component_setPrototypeOf(subClass, superClass); }\n\nfunction rule_group_list_component_setPrototypeOf(o, p) { rule_group_list_component_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return rule_group_list_component_setPrototypeOf(o, p); }\n\nfunction rule_group_list_component_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * RuleGroupListComponent : it displays the list of rule groups, let the user\n * add/remove new rule groups\n *\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\nvar rule_group_list_component_RuleGroupListComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  rule_group_list_component_inherits(RuleGroupListComponent, _React$Component);\n\n  function RuleGroupListComponent(props) {\n    var _this;\n\n    rule_group_list_component_classCallCheck(this, RuleGroupListComponent);\n\n    _this = rule_group_list_component_possibleConstructorReturn(this, rule_group_list_component_getPrototypeOf(RuleGroupListComponent).call(this, props));\n\n    rule_group_list_component_defineProperty(rule_group_list_component_assertThisInitialized(_this), "addNewRuleGroupHandler", function () {\n      _this.props.dispatch(actions["c" /* ADD_NEW_RULE_GROUP_ACTION */]);\n    });\n\n    return _this;\n  }\n\n  rule_group_list_component_createClass(RuleGroupListComponent, [{\n    key: "render",\n    value: function render() {\n      var _this2 = this;\n\n      return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, 0 === this.props.ruleGroupList.length && external_this_React_default.a.createElement("div", {\n        className: "wl-col"\n      }, "No rule groups present, click on add new"), this.props.ruleGroupList.map(function (item, index) {\n        return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, external_this_React_default.a.createElement(rule_group_component, {\n          rules: item.rules,\n          ruleGroupIndex: index\n        }), // dont show extra `or` text if there\n        // is no rule group below\n        index != _this2.props.ruleGroupList.length - 1 && external_this_React_default.a.createElement("div", {\n          className: "wl-container"\n        }, external_this_React_default.a.createElement("div", {\n          className: "wl-col"\n        }, external_this_React_default.a.createElement("b", null, "Or"))));\n      }), external_this_React_default.a.createElement("div", {\n        className: "wl-container"\n      }, external_this_React_default.a.createElement("div", {\n        className: "wl-col"\n      }, external_this_React_default.a.createElement("button", {\n        className: "button action wl-add-rule-group",\n        onClick: function onClick() {\n          _this2.addNewRuleGroupHandler();\n        }\n      }, "Add Rule Group"))));\n    }\n  }]);\n\n  return RuleGroupListComponent;\n}(external_this_React_default.a.Component);\n\nrule_group_list_component_RuleGroupListComponent.propTypes = {\n  ruleGroupList: prop_types_default.a.array\n};\n\nvar rule_group_list_component_mapStateToProps = function mapStateToProps(state) {\n  return {\n    ruleGroupList: state.RuleGroupData.ruleGroupList\n  };\n};\n\n/* harmony default export */ var rule_group_list_component = (Object(es["b" /* connect */])(rule_group_list_component_mapStateToProps)(rule_group_list_component_RuleGroupListComponent));\n// CONCATENATED MODULE: ./src/mappings/components/edit-sub-components.js\n/**\n * EditSubComponents.js : It have a list of components to be used by\n * edit component.js\n *\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n/**\n * EditComponentSaveButton : added to the edit mapping screen.\n */\n\nvar edit_sub_components_EditComponentSaveButton = function EditComponentSaveButton(_ref) {\n  var saveMappingItemHandler = _ref.saveMappingItemHandler,\n      title = _ref.title;\n  return external_this_React_default.a.createElement("div", {\n    className: "wl-col wl-align-right"\n  }, external_this_React_default.a.createElement("button", {\n    className: "button action",\n    onClick: saveMappingItemHandler,\n    disabled: title === ""\n  }, "Save"));\n};\nvar edit_sub_components_EditComponentNotificationArea = function EditComponentNotificationArea(_ref2) {\n  var notificationData = _ref2.notificationData;\n  return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, "" != notificationData.message && external_this_React_default.a.createElement("div", {\n    className: \'wl-notice-custom-margin notice notice-\' + notificationData.type + \' is-dismissble\'\n  }, external_this_React_default.a.createElement("p", null, notificationData.message)));\n};\nvar edit_sub_components_EditComponentTitleArea = function EditComponentTitleArea(_ref3) {\n  var wl_edit_mapping_id = _ref3.wl_edit_mapping_id,\n      wl_add_mapping_text = _ref3.wl_add_mapping_text,\n      wl_edit_mapping_text = _ref3.wl_edit_mapping_text;\n  return external_this_React_default.a.createElement("h1", {\n    className: "wp-heading-inline wl-mappings-heading-text"\n  }, wl_edit_mapping_id === undefined ? wl_add_mapping_text : wl_edit_mapping_text);\n};\nvar edit_sub_components_RuleGroupWrapper = function RuleGroupWrapper() {\n  return external_this_React_default.a.createElement("table", {\n    className: "wp-list-table widefat striped wl-table wl-container-full"\n  }, external_this_React_default.a.createElement("thead", null, external_this_React_default.a.createElement("tr", null, external_this_React_default.a.createElement("td", {\n    colSpan: 2\n  }, external_this_React_default.a.createElement("b", null, "Rules")))), external_this_React_default.a.createElement("tbody", null, external_this_React_default.a.createElement("tr", null, external_this_React_default.a.createElement("td", {\n    className: "wl-bg-light wl-description wl-col-30"\n  }, "Here we show the help text"), external_this_React_default.a.createElement("td", {\n    className: "wl-col-70"\n  }, external_this_React_default.a.createElement("div", null, external_this_React_default.a.createElement("b", null, "Use the mapping if"), external_this_React_default.a.createElement(rule_group_list_component, null))))));\n};\n// CONCATENATED MODULE: ./src/mappings/components/edit-component.js\nfunction edit_component_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { edit_component_typeof = function _typeof(obj) { return typeof obj; }; } else { edit_component_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return edit_component_typeof(obj); }\n\nfunction edit_component_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction edit_component_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction edit_component_createClass(Constructor, protoProps, staticProps) { if (protoProps) edit_component_defineProperties(Constructor.prototype, protoProps); if (staticProps) edit_component_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction edit_component_possibleConstructorReturn(self, call) { if (call && (edit_component_typeof(call) === "object" || typeof call === "function")) { return call; } return edit_component_assertThisInitialized(self); }\n\nfunction edit_component_getPrototypeOf(o) { edit_component_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return edit_component_getPrototypeOf(o); }\n\nfunction edit_component_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction edit_component_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) edit_component_setPrototypeOf(subClass, superClass); }\n\nfunction edit_component_setPrototypeOf(o, p) { edit_component_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return edit_component_setPrototypeOf(o, p); }\n\nfunction edit_component_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * EditComponent : it displays the edit section for the mapping item\n *\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * External dependencies\n */\n\n\n/**\n * Internal dependencies\n */\n\n\n\n\n\n // Set a reference to the WordLift\'s Edit Mapping settings stored in the window instance.\n\nvar editMappingSettings = window["wlEditMappingsConfig"] || {};\n\nvar edit_component_EditComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  edit_component_inherits(EditComponent, _React$Component);\n\n  function EditComponent(props) {\n    var _this;\n\n    edit_component_classCallCheck(this, EditComponent);\n\n    _this = edit_component_possibleConstructorReturn(this, edit_component_getPrototypeOf(EditComponent).call(this, props));\n\n    edit_component_defineProperty(edit_component_assertThisInitialized(_this), "handleTitleChange", function (event) {\n      var action = actions["z" /* TITLE_CHANGED_ACTION */];\n      action.payload = {\n        value: event.target.value\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    edit_component_defineProperty(edit_component_assertThisInitialized(_this), "bulkActionSubmitHandler", function () {\n      _this.props.dispatch(actions["r" /* PROPERTY_ITEMS_BULK_ACTION */]);\n    });\n\n    edit_component_defineProperty(edit_component_assertThisInitialized(_this), "bulkActionOptionChangedHandler", function (event) {\n      var selectedBulkOption = event.target.value;\n      var action = actions["d" /* BULK_ACTION_SELECTION_CHANGED_ACTION */];\n      action.payload = {\n        selectedBulkAction: selectedBulkOption\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    edit_component_defineProperty(edit_component_assertThisInitialized(_this), "setNewMappingId", function (mapping_id) {\n      var action = actions["h" /* MAPPING_ID_CHANGED_FROM_API_ACTION */];\n      action.payload = {\n        mappingId: parseInt(mapping_id)\n      };\n\n      _this.props.dispatch(action);\n    });\n\n    edit_component_defineProperty(edit_component_assertThisInitialized(_this), "saveMappingItem", function () {\n      var postObject = edit_component_mapping.mapStoreKeysToAPI(_this.props.stateObject);\n      fetch(editMappingSettings.rest_url, {\n        method: \'POST\',\n        headers: {\n          "content-type": "application/json",\n          "X-WP-Nonce": editMappingSettings.wl_edit_mapping_rest_nonce\n        },\n        body: JSON.stringify(postObject)\n      }).then(function (response) {\n        return response.json().then(function (data) {\n          var notification_changed_action = actions["o" /* NOTIFICATION_CHANGED_ACTION */];\n          notification_changed_action.payload = {\n            message: data.message,\n            type: data.status\n          };\n\n          _this.props.dispatch(notification_changed_action);\n\n          _this.setNewMappingId(data.mapping_id);\n\n          window != undefined ? window.scrollTo(0, 0) : undefined;\n        });\n      });\n    });\n\n    return _this;\n  }\n  /**\n   * When the title is changed, this method saves it in the redux store.\n   * @param {Object} event The event which is fired when mapping title changes\n   */\n\n\n  edit_component_createClass(EditComponent, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      if (editMappingSettings.wl_edit_mapping_id != undefined) {\n        this.getMappingItemByMappingId();\n      }\n    }\n  }, {\n    key: "getMappingItemByMappingId",\n\n    /**\n     * Get edit mapping item if the mapping id is supplied\n     * via the url\n     */\n    value: function getMappingItemByMappingId() {\n      var _this2 = this;\n\n      var url = editMappingSettings.rest_url + "/" + editMappingSettings.wl_edit_mapping_id;\n      fetch(url, {\n        method: "GET",\n        headers: {\n          "content-type": "application/json",\n          "X-WP-Nonce": editMappingSettings.wl_edit_mapping_rest_nonce\n        }\n      }).then(function (response) {\n        return response.json().then(function (data) {\n          // Dispatch title changed\n          var mapping_header_action = actions["g" /* MAPPING_HEADER_CHANGED_ACTION */];\n          mapping_header_action.payload = {\n            title: data.mapping_title,\n            mapping_id: data.mapping_id\n          };\n\n          _this2.props.dispatch(mapping_header_action, data.mapping_title); //Dispatch property list changed after applying filters\n\n\n          var property_list_action = actions["w" /* PROPERTY_LIST_CHANGED_ACTION */];\n          property_list_action.payload = {\n            value: edit_component_mapping.mapPropertyAPIKeysToUi(data.property_list)\n          };\n\n          _this2.props.dispatch(property_list_action); // Dispatch rule group list changed after applying filters\n\n\n          var rule_group_list_action = actions["y" /* RULE_GROUP_LIST_CHANGED_ACTION */];\n          rule_group_list_action.payload = {\n            value: edit_component_mapping.mapRuleGroupListAPIKeysToUi(data.rule_group_list)\n          };\n\n          _this2.props.dispatch(rule_group_list_action);\n        });\n      });\n    }\n    /**\n     * On Add new mapping item, a new mapping item is created,\n     * upon saving we need to redirect it to the edit page if there\n     * is no mapping id in the url by getting it from the saved\n     * server response.\n     * @param {Number} mapping_id The primary key of the mapping table\n     * @return void\n     */\n\n  }, {\n    key: "render",\n    value: function render() {\n      var _this3 = this;\n\n      return external_this_React_default.a.createElement(external_this_React_default.a.Fragment, null, external_this_React_default.a.createElement(edit_sub_components_EditComponentNotificationArea, {\n        notificationData: this.props.notificationData\n      }), external_this_React_default.a.createElement(edit_sub_components_EditComponentTitleArea, {\n        wl_edit_mapping_id: editMappingSettings.wl_edit_mapping_id,\n        wl_add_mapping_text: editMappingSettings.wl_add_mapping_text,\n        wl_edit_mapping_text: editMappingSettings.wl_edit_mapping_text\n      }), external_this_React_default.a.createElement("input", {\n        type: "text",\n        className: "wl-form-control wl-input-class",\n        value: this.props.title,\n        placeholder: "Title",\n        onChange: function onChange(e) {\n          _this3.handleTitleChange(e);\n        }\n      }), external_this_React_default.a.createElement("br", null), " ", external_this_React_default.a.createElement("br", null), external_this_React_default.a.createElement(edit_sub_components_RuleGroupWrapper, null), external_this_React_default.a.createElement("br", null), external_this_React_default.a.createElement("br", null), external_this_React_default.a.createElement(property_list_component, null), external_this_React_default.a.createElement("br", null), external_this_React_default.a.createElement("div", {\n        className: "wl-container wl-container-full"\n      }, external_this_React_default.a.createElement(bulk_action_component["a" /* default */], {\n        choosenCategory: this.props.choosenCategory,\n        bulkActionSubmitHandler: this.bulkActionSubmitHandler,\n        bulkActionOptionChangedHandler: this.bulkActionOptionChangedHandler\n      }), external_this_React_default.a.createElement(edit_sub_components_EditComponentSaveButton, {\n        title: this.props.title,\n        saveMappingItemHandler: this.saveMappingItem\n      })));\n    }\n  }]);\n\n  return EditComponent;\n}(external_this_React_default.a.Component);\n\nvar edit_component_mapStateToProps = function mapStateToProps(state) {\n  return {\n    title: state.TitleSectionData.title,\n    notificationData: state.NotificationData,\n    stateObject: state,\n    choosenCategory: state.PropertyListData.choosenPropertyCategory\n  };\n};\n\n/* harmony default export */ var edit_component = (Object(es["b" /* connect */])(edit_component_mapStateToProps)(edit_component_EditComponent));\n// EXTERNAL MODULE: ./src/mappings/mappings.css\nvar mappings = __webpack_require__(88);\n\n// EXTERNAL MODULE: external {"this":"ReactDOM"}\nvar external_this_ReactDOM_ = __webpack_require__(20);\nvar external_this_ReactDOM_default = /*#__PURE__*/__webpack_require__.n(external_this_ReactDOM_);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js\nvar redux = __webpack_require__(12);\n\n// EXTERNAL MODULE: ./src/mappings/actions/action-types.js\nvar action_types = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js + 1 modules\nvar redux_toolkit_esm = __webpack_require__(62);\n\n// EXTERNAL MODULE: ./src/mappings/components/bulk-action-sub-components.js\nvar bulk_action_sub_components = __webpack_require__(32);\n\n// CONCATENATED MODULE: ./src/mappings/reducers/reducers.js\nvar _createReducer, _createReducer2, _createReducer3;\n\nfunction reducers_toConsumableArray(arr) { return reducers_arrayWithoutHoles(arr) || reducers_iterableToArray(arr) || reducers_nonIterableSpread(); }\n\nfunction reducers_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }\n\nfunction reducers_iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }\n\nfunction reducers_arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { reducers_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction reducers_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * This file has reducers for mappings screen\n *\n * @author Naveen Muthusamy <naveen@wordlift.io>\n * @since 3.24.0\n */\n\n/**\n * Internal dependancies\n */\n\n\n\n\n\n/**\n * Reducer to handle the rule group and rule section\n */\n\nvar RuleGroupReducer = Object(redux_toolkit_esm["a" /* createReducer */])(null, (_createReducer = {}, reducers_defineProperty(_createReducer, action_types["c" /* ADD_NEW_RULE_GROUP */], function (state, action) {\n  state.ruleGroupList.push({\n    rules: [{}]\n  });\n}), reducers_defineProperty(_createReducer, action_types["b" /* ADD_NEW_RULE */], function (state, action) {\n  // clicked index is given, add an item after that index\n  state.ruleGroupList[action.payload.ruleGroupIndex].rules.splice(action.payload.ruleIndex + 1, 0, {\n    ruleFieldOneValue: state.ruleFieldOneOptions[0].value,\n    ruleFieldTwoValue: state.ruleFieldTwoOptions[0].value,\n    ruleLogicFieldValue: state.ruleLogicFieldOptions[0].value\n  });\n}), reducers_defineProperty(_createReducer, action_types["f" /* DELETE_RULE */], function (state, action) {\n  var _action$payload = action.payload,\n      ruleGroupIndex = _action$payload.ruleGroupIndex,\n      ruleIndex = _action$payload.ruleIndex; // if the rule group has only one item, then it should be removed\n\n  if (1 === state.ruleGroupList[ruleGroupIndex].rules.length) {\n    state.ruleGroupList.splice(ruleGroupIndex, 1);\n  } else {\n    state.ruleGroupList[ruleGroupIndex].rules.splice(ruleIndex, 1);\n  }\n}), reducers_defineProperty(_createReducer, action_types["e" /* CHANGE_RULE_FIELD_VALUE */], function (state, action) {\n  var _action$payload2 = action.payload,\n      ruleGroupIndex = _action$payload2.ruleGroupIndex,\n      ruleIndex = _action$payload2.ruleIndex,\n      fieldKey = _action$payload2.fieldKey,\n      value = _action$payload2.value;\n  state.ruleGroupList[ruleGroupIndex].rules[ruleIndex][fieldKey] = value;\n}), reducers_defineProperty(_createReducer, action_types["y" /* RULE_GROUP_LIST_CHANGED */], function (state, action) {\n  state.ruleGroupList = action.payload.value;\n}), _createReducer));\n/**\n * Change property item category of the property item.\n * @param {Object} state The complete redux state of property item\n * @param {Number} propertyIndex The index of property item\n * @param {String} category The category of the property item.\n * @return {null}\n */\n\nvar changePropertyItemCategory = function changePropertyItemCategory(state, propertyIndex, category) {\n  state.propertyList[propertyIndex].property_status = category;\n};\n/**\n * Add a duplicate item to the property list.\n * @param {Object} state The complete redux state of property item\n * @param {Number} propertyIndex The index of property item\n * @return {null}\n */\n\n\nvar addDuplicatePropertyItem = function addDuplicatePropertyItem(state, propertyIndex) {\n  var propertyArray = state.propertyList.map(function (el) {\n    return el.property_id;\n  });\n\n  var cloned_property = _objectSpread({}, state.propertyList[propertyIndex]);\n\n  cloned_property.isSelectedByUser = false;\n  cloned_property.property_id = Math.max.apply(Math, reducers_toConsumableArray(propertyArray)) + 1;\n  cloned_property.isPropertyAddedViaUI = true;\n  state.propertyList.splice(propertyIndex + 1, 0, cloned_property);\n};\n/**\n * Do bulk action based on the select one in the ui\n * @param {Object} state The complete redux state of property item\n * @param {Number} propertyIndex The index of property item\n * @param {String} selectedBulkAction The selected bulk action\n * @return {null}\n */\n\n\nvar reducers_doPropertyBulkAction = function doPropertyBulkAction(state, propertyIndex, selectedBulkAction) {\n  switch (selectedBulkAction) {\n    case bulk_action_sub_components["b" /* BulkOptionValues */].TRASH:\n      changePropertyItemCategory(state, propertyIndex, category_component["b" /* TRASH_CATEGORY */]);\n      break;\n\n    case bulk_action_sub_components["b" /* BulkOptionValues */].DUPLICATE:\n      addDuplicatePropertyItem(state, propertyIndex);\n      break;\n\n    case bulk_action_sub_components["b" /* BulkOptionValues */].RESTORE:\n      changePropertyItemCategory(state, propertyIndex, category_component["a" /* ACTIVE_CATEGORY */]);\n      break;\n\n    case bulk_action_sub_components["b" /* BulkOptionValues */].DELETE_PERMANENTLY:\n      state.propertyList.splice(propertyIndex, 1);\n      break;\n\n    default:\n      break;\n  }\n};\n/**\n  * Reducer to handle the property section\n  */\n\n\nvar PropertyReducer = Object(redux_toolkit_esm["a" /* createReducer */])(null, (_createReducer2 = {}, reducers_defineProperty(_createReducer2, action_types["p" /* OPEN_OR_CLOSE_PROPERTY */], function (state, action) {\n  var propertyId = action.payload.propertyId;\n  var propertyIndex = state.propertyList.map(function (el) {\n    return el.property_id;\n  }).indexOf(propertyId);\n  var prevState = state.propertyList[propertyIndex].isOpenedOrAddedByUser; // invert the previous state\n\n  state.propertyList[propertyIndex].isOpenedOrAddedByUser = !prevState;\n}), reducers_defineProperty(_createReducer2, action_types["q" /* PROPERTY_DATA_CHANGED */], function (state, action) {\n  console.log(action);\n  var _action$payload3 = action.payload,\n      fieldKey = _action$payload3.fieldKey,\n      value = _action$payload3.value,\n      propertyId = _action$payload3.propertyId;\n  var propertyIndex = state.propertyList.map(function (el) {\n    return el.property_id;\n  }).indexOf(propertyId);\n  state.propertyList[propertyIndex][fieldKey] = value;\n}), reducers_defineProperty(_createReducer2, action_types["a" /* ADD_MAPPING */], function (state, action) {\n  var propertyArray = state.propertyList.map(function (el) {\n    return el.property_id;\n  }); // push an empty property item\n\n  state.propertyList.push({\n    // Math.max returns -infinity if no items are passed, parseInt \n    // returns 1 if no item present\n    property_id: parseInt(Math.max.apply(Math, reducers_toConsumableArray(propertyArray)) + 1) || 1,\n    isOpenedOrAddedByUser: true,\n    propertyHelpText: "",\n    fieldTypeHelpText: "",\n    fieldHelpText: "",\n    transformHelpText: "",\n    // Default category is active\n    property_status: \'active\',\n    isPropertyAddedViaUI: true\n  });\n}), reducers_defineProperty(_createReducer2, action_types["w" /* PROPERTY_LIST_CHANGED */], function (state, action) {\n  state.propertyList = action.payload.value;\n}), reducers_defineProperty(_createReducer2, action_types["s" /* PROPERTY_ITEM_CATEGORY_CHANGED */], function (state, action) {\n  var _action$payload4 = action.payload,\n      propertyId = _action$payload4.propertyId,\n      propertyCategory = _action$payload4.propertyCategory;\n  var propertyIndex = state.propertyList.map(function (el) {\n    return el.property_id;\n  }).indexOf(propertyId);\n  state.propertyList[propertyIndex].property_status = propertyCategory;\n}), reducers_defineProperty(_createReducer2, action_types["x" /* PROPERTY_LIST_SELECTED_CATEGORY_CHANGED */], function (state, action) {\n  var choosenCategory = action.payload.choosenCategory;\n  state.choosenPropertyCategory = choosenCategory;\n}), reducers_defineProperty(_createReducer2, action_types["t" /* PROPERTY_ITEM_CRUD_OPERATION */], function (state, action) {\n  var _action$payload5 = action.payload,\n      propertyId = _action$payload5.propertyId,\n      operationName = _action$payload5.operationName;\n  var propertyIndex = state.propertyList.map(function (el) {\n    return el.property_id;\n  }).indexOf(propertyId);\n\n  switch (operationName) {\n    // Delete a property permanently\n    case DELETE_PROPERTY_PERMANENT:\n      state.propertyList.splice(propertyIndex, 1);\n      break;\n\n    case DUPLICATE_PROPERTY:\n      addDuplicatePropertyItem(state, propertyIndex);\n      break;\n\n    default:\n      break;\n  }\n}), reducers_defineProperty(_createReducer2, action_types["u" /* PROPERTY_ITEM_SELECTED */], function (state, action) {\n  var propertyId = action.payload.propertyId;\n  var propertyIndex = state.propertyList.map(function (el) {\n    return el.property_id;\n  }).indexOf(propertyId);\n  var prevState = state.propertyList[propertyIndex].isSelectedByUser;\n  state.propertyList[propertyIndex].isSelectedByUser = !prevState;\n}), reducers_defineProperty(_createReducer2, action_types["v" /* PROPERTY_ITEM_SELECT_ALL */], function (state, action) {\n  state.propertyHeaderCheckboxClicked = !state.propertyHeaderCheckboxClicked;\n  state.propertyList = state.propertyList.map(function (item) {\n    if (item.property_status === state.choosenPropertyCategory) {\n      item.isSelectedByUser = !item.isSelectedByUser;\n    }\n\n    return item;\n  });\n}), reducers_defineProperty(_createReducer2, action_types["r" /* PROPERTY_ITEMS_BULK_SELECT */], function (state, action) {\n  // Iterate through all the selected items, and based on option\n  // perform the action.\n  var selectedBulkAction = state.choosenPropertyBulkAction;\n  state.propertyList.filter(function (item) {\n    return item.isSelectedByUser;\n  }).map(function (item) {\n    // Get the index of the current item\n    var propertyIndex = state.propertyList.map(function (el) {\n      return el.property_id;\n    }).indexOf(item.property_id);\n    reducers_doPropertyBulkAction(state, propertyIndex, selectedBulkAction);\n  }); // Remove the checked state\n\n  state.propertyHeaderCheckboxClicked = false;\n  state.propertyList = state.propertyList.map(function (item) {\n    item.isSelectedByUser = false;\n    return item;\n  });\n}), reducers_defineProperty(_createReducer2, action_types["d" /* BULK_ACTION_SELECTION_CHANGED */], function (state, action) {\n  var selectedBulkAction = action.payload.selectedBulkAction;\n  state.choosenPropertyBulkAction = selectedBulkAction;\n}), _createReducer2));\n/**\n  * Reducer to handle the title section\n  */\n\nvar TitleReducer = Object(redux_toolkit_esm["a" /* createReducer */])(null, (_createReducer3 = {}, reducers_defineProperty(_createReducer3, action_types["z" /* TITLE_CHANGED */], function (state, action) {\n  state.title = action.payload.value;\n}), reducers_defineProperty(_createReducer3, action_types["g" /* MAPPING_HEADER_CHANGED */], function (state, action) {\n  state.title = action.payload.title;\n  state.mapping_id = action.payload.mapping_id;\n}), reducers_defineProperty(_createReducer3, action_types["h" /* MAPPING_ID_CHANGED_FROM_API */], function (state, action) {\n  state.mapping_id = action.payload.mappingId;\n}), _createReducer3));\n/**\n  * Reducer to handle the notification section\n  */\n\nvar NotificationReducer = Object(redux_toolkit_esm["a" /* createReducer */])(null, reducers_defineProperty({}, action_types["o" /* NOTIFICATION_CHANGED */], function (state, action) {\n  state.message = action.payload.message;\n  state.type = action.payload.type;\n}));\n// CONCATENATED MODULE: ./src/mappings/edit-mappings.js\n\n\n\n\n\n\n\n // Set a reference to the WordLift\'s Edit Mapping settings stored in the window instance.\n\nvar edit_mappings_editMappingSettings = window["wlEditMappingsConfig"] || {};\nvar edit_mappings_options = [{\n  value: \'one\',\n  label: \'one\'\n}, {\n  value: \'two\',\n  label: \'two\'\n}, {\n  value: \'three\',\n  label: \'three\'\n}];\nvar INITIAL_STATE = {\n  NotificationData: {\n    message: "",\n    type: ""\n  },\n  TitleSectionData: {\n    title: ""\n  },\n  RuleGroupData: {\n    ruleFieldOneOptions: edit_mappings_editMappingSettings.wl_rule_field_one_options,\n    ruleFieldTwoOptions: edit_mappings_editMappingSettings.wl_rule_field_two_options,\n    ruleLogicFieldOptions: edit_mappings_editMappingSettings.wl_logic_field_options,\n    ruleGroupList: []\n  },\n  PropertyListData: {\n    propertyHeaderCheckboxClicked: false,\n    choosenPropertyCategory: category_component["a" /* ACTIVE_CATEGORY */],\n    choosenPropertyBulkAction: null,\n    fieldTypeHelpTextOptions: edit_mappings_editMappingSettings.wl_field_type_options,\n    transformHelpTextOptions: edit_mappings_editMappingSettings.wl_transform_function_options,\n    fieldNameOptions: edit_mappings_editMappingSettings.wl_field_name_options,\n    propertyList: []\n  }\n};\nvar reducers = Object(redux["combineReducers"])({\n  RuleGroupData: RuleGroupReducer,\n  PropertyListData: PropertyReducer,\n  TitleSectionData: TitleReducer,\n  NotificationData: NotificationReducer\n});\nvar store = Object(redux["createStore"])(reducers, INITIAL_STATE);\nexternal_this_ReactDOM_default.a.render(external_this_React_default.a.createElement(es["a" /* Provider */], {\n  store: store\n}, external_this_React_default.a.createElement(edit_component, null)), document.getElementById("container"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///124\n')}]);