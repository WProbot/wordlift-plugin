{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/Public/index.js","webpack:///./src/Public/analytics.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","settings","window","wlSettings","fetch","postId","isHome","params","joinChar","url","apiUrl","indexOf","then","response","text","body","script","document","createElement","type","innerText","head","appendChild","loadJsonLd","sendGaEvent","analyticsObj","dimX","dimY","label","uri","_analyticsObj","wordliftAnalyticsConfigData","_defineProperty","sendGtagEvent","_analyticsObj2","event_category","event_label","addEventListener","event","wordliftAnalyticsEntityData","Promise","resolve","reject","obj","gtag","__wl_type","ga","__gaTracker","getAnalyticsObject","entity_uri_dimension","entity_type_dimension","entities","push","entitiesTotal","length","sendAnalyticsData"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 116);\n","/**\n * Internal dependencies.\n */\nimport \"./analytics\";\n\n// Set a reference to the WordLift settings.\nconst settings = window.wlSettings;\n\n/**\n * Build the request URL, inclusive of the query string parameters.\n *\n * @since 3.19.1\n *\n * @param params {{apiUrl, postId, isHome}} The query parameters.\n * @returns {string} The request URl.\n */\nconst buildUrl = function(params) {\n  // Join with `?` or `&`.\n  const joinChar = 0 <= params.apiUrl.indexOf(\"?\") ? \"&\" : \"?\";\n\n  // Build the URL\n  const url =\n    params.apiUrl +\n    joinChar +\n    \"action=wl_jsonld\" +\n    // Append the post id parameter.\n    (\"undefined\" !== typeof params.postId ? \"&id=\" + params.postId : \"\") +\n    // Append the homepage parameter.\n    (\"undefined\" !== typeof params.isHome ? \"&homepage=true\" : \"\");\n\n  return url;\n};\n\n/**\n * Load the JSON-LD.\n *\n * @since 3.0.0\n */\nconst loadJsonLd = function() {\n  // Bail out it the container doesn't now about fetch.\n  if (\"undefined\" === typeof fetch) return;\n\n  // Check if the JSON-LD is disabled, i.e. if there's a `jsonld_enabled`\n  // setting explicitly defined with a value different from '1'.\n  if (\n    \"undefined\" !== typeof settings[\"jsonld_enabled\"] &&\n    \"1\" !== settings[\"jsonld_enabled\"]\n  ) {\n    return;\n  }\n\n  // Check that we have a post id or it's homepage, otherwise exit.\n  if (\n    \"undefined\" === typeof settings.postId &&\n    \"undefined\" === typeof settings.isHome\n  ) {\n    return;\n  }\n\n  // Get the request URL.\n  const url = buildUrl(settings);\n\n  // Finally fetch the URL.\n  //\n  // DO NOT use here `new URL(...)` / `URL.searchParams`: Google SDTT doesn't understand them.\n  fetch(url)\n    .then(function(response) {\n      return response.text();\n    })\n    .then(function(body) {\n      // Use `document.createElement`. See https://github.com/insideout10/wordlift-plugin/issues/810.\n      const script = document.createElement(\"script\");\n      script.type = \"application/ld+json\";\n      script.innerText = body;\n      document.head.appendChild(script);\n    });\n};\n\nloadJsonLd();\n\n//\n// window.addEventListener(\"load\", loadJsonLd);\n","/**\n * A collection of functions and logic to handle sending of entity data to an\n * external analytics tracker.\n *\n * Objects: `ga`, `__gaTracker` are supported as is `gtag`.\n *\n * NOTE: the `__gaTracker` object is a common remap name in WordPress.\n */\n\n(function() {\n  // Only run after page has loaded.\n  document.addEventListener(\"DOMContentLoaded\", function(event) {\n    // We should have an entity object by here but if not short circuit.\n    if (typeof wordliftAnalyticsEntityData === \"undefined\") {\n      return;\n    }\n\n    /**\n     * Promise to handle detection and return of an analytics object.\n     *\n     * @type {Promise}\n     */\n    var detectAnalyticsObject = new Promise(function(resolve, reject) {\n      var analyticsObj = getAnalyticsObject();\n      return resolve(analyticsObj);\n    });\n\n    /**\n     * A function returning the promise that deals with creating items\n     * to send and passing them to the correct send function.\n     *\n     * @method\n     * @param  {object} analyticsObj an analytics tracking object that is the resolve of the detect function.\n     * @return {Promise}\n     */\n    var sendAnalyticsData = function(analyticsObj) {\n      return new Promise(function(resolve, reject) {\n        // if we dont have an object to push into and an object\n        // with config then this is a failure - reject.\n        if (\"undefined\" === typeof analyticsObj || \"undefined\" === typeof wordliftAnalyticsConfigData) {\n          return reject();\n        }\n\n        // setup the custom dimention names.\n        var dimX = \"dimension\" + wordliftAnalyticsConfigData.entity_uri_dimension;\n        var dimY = \"dimension\" + wordliftAnalyticsConfigData.entity_type_dimension;\n\n        // Create an array of all the individual entities.\n        var entities = [];\n        for (var key in wordliftAnalyticsEntityData) {\n          if (wordliftAnalyticsEntityData.hasOwnProperty(key)) {\n            entities.push(wordliftAnalyticsEntityData[key]);\n          }\n        }\n\n        // Count the total entities we have to send.\n        var entitiesTotal = entities.length;\n\n        // console.log( `Going to send analytics events using ${analyticsObj.__wl_type} object type.` );\n\n        /**\n         * Depending on the tracking object type send the data\n         * to the correspending service.\n         */\n        if (\"ga\" === analyticsObj.__wl_type) {\n          // This is `ga` style object.\n          for (var i = 0; i < entitiesTotal; i++) {\n            sendGaEvent(analyticsObj, dimX, dimY, entities[i].label, entities[i].uri, entities[i].type);\n          }\n        } else if (\"gtag\" === analyticsObj.__wl_type) {\n          // This is `gtag` style object.\n          for (var i = 0; i < entitiesTotal; i++) {\n            sendGtagEvent(analyticsObj, dimX, dimY, entities[i].label, entities[i].uri, entities[i].type);\n          }\n        }\n        // @TODO handle failure.\n        // resolve to finish.\n        return resolve(true);\n      });\n    };\n\n    // Fire off the promise chain to detect and send analytics data.\n    detectAnalyticsObject.then(analyticsObj => sendAnalyticsData(analyticsObj));\n  });\n\n  /**\n   * Detects and returns a supported analytics object if one exists.\n   *\n   * @method getAnalyticsObject\n   * @return {object|bool}\n   */\n  function getAnalyticsObject() {\n    var obj = false;\n    // gtag must be first.\n    if (window.gtag) {\n      obj = window.gtag;\n      obj.__wl_type = \"gtag\";\n    } else if (window.ga) {\n      obj = window.ga;\n      obj.__wl_type = \"ga\";\n    } else if (window.__gaTracker) {\n      obj = window.__gaTracker;\n      obj.__wl_type = \"ga\";\n    }\n\n    // console.log( `Found a ${obj.__wl_type} analytics object.` );\n\n    return obj;\n  }\n\n  /**\n   * Wrapper function for pushing entity analytics data to ga style tracker.\n   *\n   * @method sendGaEvent\n   * @param  {ga} analyticsObject The anlytics object we push into.\n   * @param  {string} dimX the name of the first custom dimension.\n   * @param  {string} dimY the name of the second custom dimension.\n   * @param  {string} label a string to use as the label.\n   * @param  {string} uri the uri of this entity.\n   * @param  {string} type the entity type.\n   */\n  function sendGaEvent(analyticsObj, dimX, dimY, label, uri, type) {\n    // Double check we have the config object before continuing.\n    if (\"undefined\" === typeof wordliftAnalyticsConfigData) {\n      return false;\n    }\n    analyticsObj(\"send\", \"event\", \"WordLift\", \"Mentions\", label, 1, {\n      [dimX]: uri,\n      [dimY]: type,\n      nonInteraction: true\n    });\n  }\n\n  /**\n   * Wrapper function for pushing entity analytics data to gtag.\n   *\n   * @method sendGtagEvent\n   * @param  {gtag} analyticsObject The anlytics object we push into.\n   * @param  {string} dimX the name of the first custom dimension.\n   * @param  {string} dimY the name of the second custom dimension.\n   * @param  {string} label a string to use as the label.\n   * @param  {string} uri the uri of this entity.\n   * @param  {string} type the entity type.\n   */\n  function sendGtagEvent(analyticsObj, dimX, dimY, label, uri, type) {\n    // Double check we have the config object before continuing.\n    if (\"undefined\" === typeof wordliftAnalyticsConfigData) {\n      return false;\n    }\n\n    // console.log(\"Sending gtag event ...\");\n\n    analyticsObj(\"event\", \"Mentions\", {\n      event_category: \"WordLift\",\n      event_label: label,\n      value: 1,\n      [dimX]: uri,\n      [dimY]: type,\n      non_interaction: true\n    });\n  }\n})();\n"],"sourceRoot":""}